WEBVTT

00:00.000 --> 00:02.580
 The following is a conversation with Brendan Eich,

00:02.580 --> 00:05.700
 creator of the JavaScript programming language,

00:05.700 --> 00:09.180
 cofounder of Mozilla, which created the Firefox browser,

00:09.180 --> 00:12.860
 and now cofounder and CEO of Brave Software,

00:12.860 --> 00:15.420
 which has created the Brave browser.

00:15.420 --> 00:18.340
 Each of these are revolutionary technologies.

00:18.340 --> 00:21.100
 JavaScript is one of the most widely used

00:21.100 --> 00:24.900
 and impactful programming languages in the world.

00:24.900 --> 00:29.020
 Firefox pioneered many browser ideas that we love today

00:29.020 --> 00:31.300
 or even take for granted today.

00:31.300 --> 00:34.980
 And Brave is looking to revolutionize not only the browser,

00:34.980 --> 00:38.260
 but content creation online and the nature of the internet

00:38.260 --> 00:41.940
 to make it fundamentally about respecting people's control

00:41.940 --> 00:43.460
 over their data.

00:43.460 --> 00:47.380
 Quick mention of our sponsors, the Jordan Harbinger Show,

00:47.380 --> 00:51.540
 Sambaska Mule Delivery Service, BetterHelp Online Therapy,

00:51.540 --> 00:53.940
 and Aidsleep Self Cooling Mattress.

00:53.940 --> 00:56.220
 Click the sponsor links to get a discount

00:56.220 --> 00:58.100
 and to support this podcast.

00:58.100 --> 01:00.860
 As a side note, let me say that there's a tension

01:00.860 --> 01:03.460
 between theory and engineering that I've

01:03.460 --> 01:05.220
 been thinking a lot about.

01:05.220 --> 01:07.900
 I tweeted something like, good execution

01:07.900 --> 01:11.820
 is more important than a good idea, but one helps the other.

01:11.820 --> 01:13.460
 I think the wording of that sucks,

01:13.460 --> 01:16.900
 but what I mean is a good idea is a must.

01:16.900 --> 01:20.740
 But in my experience, good ideas are in abundance.

01:20.740 --> 01:23.740
 Good execution, on the other hand, is rare.

01:23.740 --> 01:26.060
 I think some mix of good timing, good idea,

01:26.060 --> 01:28.180
 and good execution is essential.

01:28.180 --> 01:29.900
 Getting that mixed right is tough.

01:29.900 --> 01:32.900
 And Brandon somehow, multiple times in his career,

01:32.900 --> 01:34.300
 did just that.

01:34.300 --> 01:36.700
 I'm starting to believe it's more art than science,

01:36.700 --> 01:39.260
 like most interesting things in life.

01:39.260 --> 01:41.740
 If you enjoy this thing, subscribe on YouTube,

01:41.740 --> 01:44.700
 review it on Apple Podcast, follow on Spotify,

01:44.700 --> 01:47.500
 support on Patreon, or connect with me on Twitter,

01:47.500 --> 01:48.860
 Alex Freedman.

01:48.860 --> 01:52.460
 And now, here's my conversation with Brandon Ike.

01:52.460 --> 01:55.460
 When did you first fall in love with programming?

01:55.460 --> 01:57.460
 I didn't program a lot when I was in high school,

01:57.460 --> 02:00.460
 but I had a friend who had a Commodore pet.

02:00.460 --> 02:02.460
 And after we saw Star Wars, he said,

02:02.460 --> 02:05.460
 hey, let's make a basic program that

02:05.460 --> 02:07.460
 does the Death Star trench run.

02:07.460 --> 02:10.460
 And it was just simple 2D graphics.

02:10.460 --> 02:11.460
 And I didn't know what I was doing,

02:11.460 --> 02:13.460
 so I just talked them out on the math and stuff like that.

02:13.460 --> 02:15.460
 I was a math and science kid.

02:15.460 --> 02:19.460
 I was really into the HP calculators of the early mid 70s.

02:19.460 --> 02:20.460
 These were the RPN.

02:20.460 --> 02:23.460
 They were really strongly built.

02:23.460 --> 02:27.460
 And all right, Gold Trigger, instead of gold, divinely heavy.

02:27.460 --> 02:29.460
 There's probably some gold in them, too, gold metallization.

02:29.460 --> 02:31.460
 But they were awesome calculators,

02:31.460 --> 02:33.460
 and they had all the scientific functions.

02:33.460 --> 02:35.460
 So I was really into that.

02:35.460 --> 02:38.460
 So I aimed toward physics.

02:38.460 --> 02:40.460
 I was a little late for the, I think,

02:40.460 --> 02:42.460
 the 20th century golden age.

02:42.460 --> 02:43.460
 And I read a lot of science fiction.

02:43.460 --> 02:46.460
 So I was like, yeah, it's on the hyperdrives and warp drives.

02:46.460 --> 02:49.460
 And physics was not going to get there quickly.

02:49.460 --> 02:53.460
 And I started hacking on computers while I was studying physics

02:53.460 --> 02:56.460
 as an undergraduate at Santa Clara University.

02:56.460 --> 02:59.460
 And, you know, I dodged the Fortran bullet

02:59.460 --> 03:01.460
 because I was in the science department

03:01.460 --> 03:03.460
 instead of the engineering department,

03:03.460 --> 03:05.460
 where they still did Fortran card decks.

03:05.460 --> 03:07.460
 I think they had an auto collater.

03:07.460 --> 03:09.460
 But we were using Pascal.

03:09.460 --> 03:14.460
 And I got one of the first portable C compilers ports

03:14.460 --> 03:17.460
 to the deck mini computers we were using.

03:17.460 --> 03:19.460
 And I fell in love with programming

03:19.460 --> 03:25.460
 just based on, you know, procedural abstraction, Pascal,

03:25.460 --> 03:28.460
 just what now would be considered old school,

03:28.460 --> 03:31.460
 like structured programming from the 70s.

03:31.460 --> 03:33.460
 Niklaus Wirt, the creator of Pascal,

03:33.460 --> 03:36.460
 was a good writer and a good pedagogue, right?

03:36.460 --> 03:38.460
 He always at ETH would do these courses

03:38.460 --> 03:40.460
 where it's like build your own computer,

03:40.460 --> 03:42.460
 build your own compiler, build your own operating system.

03:42.460 --> 03:43.460
 It was gratch.

03:43.460 --> 03:44.460
 Yeah, kind of.

03:44.460 --> 03:46.460
 And I know some people who are grad students

03:46.460 --> 03:50.460
 under him and said he would torture the students

03:50.460 --> 03:52.460
 with things like this custom email system

03:52.460 --> 03:56.460
 that had 25 word limit and things like that.

03:56.460 --> 04:00.460
 I unfortunately dodged both the Pascal and the Fortran bullets.

04:00.460 --> 04:04.460
 Could you maybe linger on the Pascal?

04:04.460 --> 04:06.460
 Like what kind of programming language was it?

04:06.460 --> 04:08.460
 What is the reminiscent of today?

04:08.460 --> 04:11.460
 Because it sounds like it may have had an impact

04:11.460 --> 04:12.460
 on your own trajectory.

04:12.460 --> 04:14.460
 Yeah, it was in the Algoel family.

04:14.460 --> 04:20.460
 And Algoel was the big successful language design

04:20.460 --> 04:22.460
 and compiler project in the 60s.

04:22.460 --> 04:24.460
 They had a successor called Algoel 68,

04:24.460 --> 04:27.460
 which was ambitious but not as successful.

04:27.460 --> 04:30.460
 But Pascal was kind of a wordy procedures

04:30.460 --> 04:32.460
 and functions language.

04:32.460 --> 04:33.460
 It distinguished between functions,

04:33.460 --> 04:35.460
 which are a turn of value and procedures,

04:35.460 --> 04:37.460
 which don't, which just compute.

04:37.460 --> 04:42.460
 And you could say that whole Algoel family went into ADA.

04:42.460 --> 04:45.460
 Pascal had a second life thanks to Borland with Turbo Pascal,

04:45.460 --> 04:48.460
 which was hugely successful.

04:48.460 --> 04:50.460
 I think in large part due to Anders Helzberg,

04:50.460 --> 04:53.460
 who then went to Microsoft and did C sharp and done that

04:53.460 --> 04:55.460
 with his team there and has done really well,

04:55.460 --> 04:57.460
 doing TypeScript, Type JavaScript.

04:57.460 --> 05:00.460
 So yeah, there's a lineage here.

05:00.460 --> 05:03.460
 But I was also interested in C and Unix

05:03.460 --> 05:05.460
 by the time I was an undergrad,

05:05.460 --> 05:08.460
 because people were bringing Unix up on all sorts of hardware.

05:08.460 --> 05:11.460
 I had some friends who were doing their own wire wrap computers,

05:11.460 --> 05:14.460
 6820 maybe.

05:14.460 --> 05:18.460
 And I was wire wrapping for my engineering course,

05:18.460 --> 05:20.460
 6809 or something simpler,

05:20.460 --> 05:22.460
 building a computer on a board.

05:22.460 --> 05:24.460
 And I wanted to build a more ambitious one

05:24.460 --> 05:25.460
 and port Unix to it,

05:25.460 --> 05:26.460
 but I picked the wrong processor.

05:26.460 --> 05:30.460
 I picked the National Semiconductor NS 16032,

05:30.460 --> 05:33.460
 which was this amazing, you know,

05:33.460 --> 05:36.460
 SISC complex instructions that computer

05:36.460 --> 05:38.460
 and not the reduced instructions that computers

05:38.460 --> 05:42.460
 that were just being contemplated into the mid 80s.

05:42.460 --> 05:44.460
 And risk ultimately went out.

05:44.460 --> 05:47.460
 Risk one, in some ways, it dissolved into,

05:47.460 --> 05:48.460
 you have both.

05:48.460 --> 05:50.460
 Now you have these superscalar architectures

05:50.460 --> 05:52.460
 where like Intel has kept

05:52.460 --> 05:54.460
 probably too much backward compatibility

05:54.460 --> 05:56.460
 at the instruction level,

05:56.460 --> 05:58.460
 but that's just, there's a front end that parses that

05:58.460 --> 06:00.460
 into these, you know, these wide internal instructions.

06:00.460 --> 06:03.460
 So, you know, the very long instruction word research

06:03.460 --> 06:06.460
 that was also interesting at the time

06:06.460 --> 06:08.460
 kind of became the micro architecture inside

06:08.460 --> 06:10.460
 the backward compatible Intel.

06:10.460 --> 06:12.460
 But I picked the National Semi chip

06:12.460 --> 06:14.460
 and it never got made successfully.

06:14.460 --> 06:17.460
 It was full of bugs and I never could have brought it up.

06:17.460 --> 06:20.460
 But I went on out of physics after three years

06:20.460 --> 06:22.460
 into math computer science.

06:22.460 --> 06:24.460
 And like I said, I did it because I saw,

06:24.460 --> 06:27.460
 I was being sort of childlike and naive about physics.

06:27.460 --> 06:29.460
 And I thought, meanwhile,

06:29.460 --> 06:31.460
 the Valley is go, go for computers.

06:31.460 --> 06:34.460
 The Apple to write the PC,

06:34.460 --> 06:38.460
 the Intel 8086,

06:38.460 --> 06:41.460
 8088 base PC, the IBM, you know,

06:41.460 --> 06:44.460
 gave Microsoft the future for,

06:44.460 --> 06:46.460
 you know, a somewhat fishy deal.

06:46.460 --> 06:48.460
 So it was wide open in the computing space,

06:48.460 --> 06:51.460
 but in physics, you were as optimistic about physics.

06:51.460 --> 06:54.460
 No, I mean, I was one of three brothers

06:54.460 --> 06:56.460
 who were all in the same grade.

06:56.460 --> 06:58.460
 I have a twin and a younger brother

06:58.460 --> 07:00.460
 who skipped second grade

07:00.460 --> 07:02.460
 and was with us the whole time after that.

07:02.460 --> 07:04.460
 And, you know, he went on,

07:04.460 --> 07:06.460
 he actually studied under Kip Thorne at Caltech.

07:06.460 --> 07:07.460
 Wow.

07:07.460 --> 07:09.460
 But he also ended up in software.

07:11.460 --> 07:15.460
 Does it make you sad that theoretical physics,

07:15.460 --> 07:17.460
 even with strength theory,

07:17.460 --> 07:20.460
 hasn't really had any foundation breakthroughs

07:20.460 --> 07:22.460
 in the latter part of the 20th century?

07:22.460 --> 07:23.460
 Yeah.

07:23.460 --> 07:26.460
 In fact, I'd say the problem is theory over experiment.

07:26.460 --> 07:28.460
 I would say, you know,

07:28.460 --> 07:30.460
 we need more Aristotle and less Plato.

07:30.460 --> 07:33.460
 You know, mathematics is not all physical.

07:33.460 --> 07:35.460
 There are lots of mathematics that cannot be realized

07:35.460 --> 07:37.460
 as far as I know in this world.

07:37.460 --> 07:39.460
 So to understand the world,

07:39.460 --> 07:41.460
 you need to do experiments.

07:41.460 --> 07:44.460
 You need to not just dream up inductive theories

07:44.460 --> 07:47.460
 that could have lots of alternative theories

07:47.460 --> 07:48.460
 competing with them,

07:48.460 --> 07:50.460
 with no way to decide between them except aesthetics,

07:50.460 --> 07:52.460
 which is not a good guide in my opinion.

07:52.460 --> 07:54.460
 I don't know if you are friends

07:54.460 --> 07:56.460
 or have a relationship with Elon Musk.

07:56.460 --> 08:00.460
 Where's the, in terms of what you would love to see

08:00.460 --> 08:02.460
 our society investing in, building up,

08:02.460 --> 08:06.460
 is it closer to Elon or is it closer to Feynman

08:06.460 --> 08:08.460
 and Einstein and those?

08:08.460 --> 08:10.460
 Well, those gentlemen are no longer with us.

08:10.460 --> 08:11.460
 And I think that's noticed.

08:11.460 --> 08:14.460
 So like I said, the real glory day is of physics.

08:14.460 --> 08:17.460
 The famous pictures from Germany before the Second War

08:17.460 --> 08:20.460
 were just a fantastic assembly of brains,

08:20.460 --> 08:22.460
 Schrodinger and Einstein.

08:22.460 --> 08:26.460
 And physics, I think, took a wrong turn

08:26.460 --> 08:30.460
 that maybe all of, I would say, western science took

08:30.460 --> 08:33.460
 in going for models over reality, right?

08:33.460 --> 08:35.460
 You see this in all sorts of fields.

08:35.460 --> 08:38.460
 Now, we can build models that are very predictive and generative

08:38.460 --> 08:40.460
 and then we build actual devices or, you know,

08:40.460 --> 08:42.460
 semiconductors, things like that.

08:42.460 --> 08:44.460
 That's good. I'm not dismissing that.

08:44.460 --> 08:45.460
 We need good models.

08:45.460 --> 08:49.460
 We need to experiment and prove them and test them.

08:49.460 --> 08:52.460
 But the problem I've seen in physics, which you see,

08:52.460 --> 08:55.460
 certainly in economics, the dismal science,

08:55.460 --> 08:58.460
 and you see surprisingly in other so called hard sciences,

08:58.460 --> 09:05.460
 is models that don't really have to be tested against reality.

09:05.460 --> 09:08.460
 They can instead become policy tools or they can become,

09:08.460 --> 09:12.460
 like I said, one of a large family of alternate theories

09:12.460 --> 09:14.460
 that could be as predictive,

09:14.460 --> 09:16.460
 but nobody's doing the winnowing out.

09:16.460 --> 09:18.460
 That's such an interesting tension in society.

09:18.460 --> 09:20.460
 You see this in even the software sciences,

09:20.460 --> 09:23.460
 which have a deep love for psychology.

09:23.460 --> 09:26.460
 You see this in epidemiology, now the virus.

09:26.460 --> 09:27.460
 Absolutely.

09:27.460 --> 09:29.460
 It's this tension of, you know,

09:29.460 --> 09:31.460
 how much of the world can we understand

09:31.460 --> 09:34.460
 through just a beautifully fit model?

09:34.460 --> 09:38.460
 And then at the same time, my main work is a machine learning

09:38.460 --> 09:43.460
 where it's like there is no provable thing usually.

09:43.460 --> 09:46.460
 It's just kind of you, it's all about just getting the right

09:46.460 --> 09:49.460
 data set and getting tricks and so on.

09:49.460 --> 09:51.460
 And there's this tension, even in my own soul,

09:51.460 --> 09:54.460
 of like I grew up on theoretical computer science,

09:54.460 --> 09:58.460
 like I loved approximation algorithms,

09:58.460 --> 10:01.460
 like all of that, like different complexity classes,

10:01.460 --> 10:03.460
 just those little puzzles.

10:03.460 --> 10:04.460
 I mean, I don't know.

10:04.460 --> 10:08.460
 Do you, to you as somebody who was in math and computer science

10:08.460 --> 10:12.460
 and then end up going into places where you engineer

10:12.460 --> 10:14.460
 some of the most impactful things in this world,

10:14.460 --> 10:18.460
 do you see the P versus NP,

10:18.460 --> 10:21.460
 all that whole space as interesting at all?

10:21.460 --> 10:24.460
 Yeah, it's not that useful in practice, right?

10:24.460 --> 10:27.460
 People are using it with sort of crypto analysis

10:27.460 --> 10:30.460
 or asymptotic arguments about, you know,

10:30.460 --> 10:33.460
 can we have a quantum resistant crypto algorithm,

10:33.460 --> 10:36.460
 things like that, which may not be practical, right?

10:36.460 --> 10:39.460
 If you follow Mikhail Diakonov or Gil Kolay,

10:39.460 --> 10:43.460
 there are big questions about how quantum computing

10:43.460 --> 10:46.460
 will scale up, how practical it will be.

10:46.460 --> 10:49.460
 Is that something that you think about quantum computing?

10:49.460 --> 10:50.460
 Except for spare time.

10:50.460 --> 10:53.460
 Like you said, I'm not using this kind of computer science

10:53.460 --> 10:57.460
 in practice because almost everything now is engineering

10:57.460 --> 11:03.460
 and finding ways to get computers to be more useful for people,

11:03.460 --> 11:05.460
 which goes from, you know, design problems,

11:05.460 --> 11:07.460
 which are really kind of an art.

11:07.460 --> 11:09.460
 Like Newt said, anything you can't automate is an art.

11:09.460 --> 11:12.460
 Well, we can have, you know, machine learning,

11:12.460 --> 11:14.460
 compose music, and it can imitate, you can train it,

11:14.460 --> 11:16.460
 and it can sound kind of decent,

11:16.460 --> 11:18.460
 but maybe lacking that je ne sais quoi.

11:18.460 --> 11:23.460
 But, you know, user interface still I think requires human art.

11:23.460 --> 11:27.460
 So speaking of things that didn't follow a perfect theory

11:27.460 --> 11:31.460
 and model, JavaScript, so there's two things.

11:31.460 --> 11:34.460
 One had an impact on the world at a huge scale, obviously,

11:34.460 --> 11:39.460
 and it also still is one of probably the most popular

11:39.460 --> 11:41.460
 programming language in the world.

11:41.460 --> 11:44.460
 So can we go back to the origin story?

11:44.460 --> 11:47.460
 Can you tell the story of how JavaScript was created?

11:47.460 --> 11:48.460
 Yeah.

11:48.460 --> 11:52.460
 I was at Silicon Graphics after graduate school for seven years,

11:52.460 --> 11:55.460
 and it got to be big and successful and divisionalized

11:55.460 --> 12:00.460
 and political, and I thought kind of boring.

12:00.460 --> 12:03.460
 And a friend who'd been there went to one of the last

12:03.460 --> 12:07.460
 of the super companies, the super startups in the early 90s.

12:07.460 --> 12:10.460
 There were several, I suppose General Magic was a little after

12:10.460 --> 12:13.460
 that around the same time, but Micro Unity was that company

12:13.460 --> 12:15.460
 that I went to, and it was because my friend,

12:15.460 --> 12:17.460
 Jeff Weinstein had gone there from Silicon Graphics.

12:17.460 --> 12:21.460
 He recruited me, and Micro Unity was doing everything.

12:21.460 --> 12:25.460
 So this was like the ultimate sort of pretend grad school.

12:25.460 --> 12:28.460
 It was doing a new fab, new semiconductor process.

12:28.460 --> 12:32.460
 It was doing new analog and digital circuits on the same,

12:32.460 --> 12:35.460
 very large, but not way for scale chip.

12:35.460 --> 12:39.460
 Originally it was five centimeters on the side.

12:39.460 --> 12:41.460
 It was really hot too.

12:41.460 --> 12:43.460
 So I needed a water cooler.

12:43.460 --> 12:45.460
 It was a Craig Hiller, and then they shrunk it,

12:45.460 --> 12:48.460
 and they tried to do a home sort of media processor

12:48.460 --> 12:51.460
 that was essentially a barrel processor,

12:51.460 --> 12:55.460
 but you could think of trying to do all the things that we now

12:55.460 --> 12:59.460
 see in modern architectures with short vector instructions

12:59.460 --> 13:04.460
 and sort of wide instructions or multiple issue.

13:04.460 --> 13:07.460
 And doing a lot of the stuff in software,

13:07.460 --> 13:10.460
 because the second iteration, the Set Top Box,

13:10.460 --> 13:13.460
 was really for avoiding the cost to the cable company

13:13.460 --> 13:16.460
 of rolling the trucks out to replace your garbage

13:16.460 --> 13:19.460
 General Atlantic Set Top Box with a totally newer,

13:19.460 --> 13:21.460
 less garbagey one.

13:21.460 --> 13:24.460
 So if you could have software gradable Set Top Boxes,

13:24.460 --> 13:26.460
 the cable companies thought they could save a lot of money

13:26.460 --> 13:27.460
 and add features.

13:27.460 --> 13:28.460
 Is this assembly?

13:28.460 --> 13:30.460
 Or which level of the software?

13:30.460 --> 13:33.460
 We were using GCC.

13:33.460 --> 13:36.460
 We were writing C++ and C.

13:36.460 --> 13:39.460
 Today, I worked with their really very smart guy,

13:39.460 --> 13:44.460
 hired from a sort of Wall Street hotshot programming consultancy,

13:44.460 --> 13:47.460
 did his own hardware design as well as software.

13:47.460 --> 13:50.460
 We were working on how to make not only short vector units,

13:50.460 --> 13:53.460
 but general bit shufflers and promoters,

13:53.460 --> 13:57.460
 so you could do things like crypto algorithms efficiently,

13:57.460 --> 14:03.460
 and you could do demodulation of the cable complex quadrature

14:03.460 --> 14:05.460
 amplitude modulated signal.

14:05.460 --> 14:07.460
 You're basically taking A to D converters,

14:07.460 --> 14:08.460
 dumping things in buffers,

14:08.460 --> 14:10.460
 and then doing the rest in software.

14:10.460 --> 14:13.460
 All the framing and the Reed Solomon and Viterbi

14:13.460 --> 14:14.460
 and all that error correction.

14:14.460 --> 14:15.460
 So that was really great learning experience,

14:15.460 --> 14:16.460
 but it was not going to work.

14:16.460 --> 14:18.460
 It was doing too many risky things at once, right?

14:18.460 --> 14:21.460
 If you, as Jim Clark said to me when I hopped in Netscape

14:21.460 --> 14:23.460
 after three years at Micro Unity, he said,

14:23.460 --> 14:25.460
 oh yeah, you do 10 things each,

14:25.460 --> 14:29.460
 one in 10 odds, it's going to be one in 10 billion, right?

14:29.460 --> 14:31.460
 The multiplication principle.

14:31.460 --> 14:33.460
 So Netscape was already a rocket,

14:33.460 --> 14:36.460
 and I had passed the chance to go there in 1994.

14:36.460 --> 14:40.460
 I knew the founders because I worked at SGI Clark's company.

14:40.460 --> 14:42.460
 Could you pause for a second in Netscape?

14:42.460 --> 14:44.460
 When was the launch of this rocket?

14:44.460 --> 14:45.460
 1994.

14:45.460 --> 14:47.460
 1994 was the launch of Netscape?

14:47.460 --> 14:49.460
 And I went there in early 95 in April.

14:49.460 --> 14:50.460
 Okay.

14:50.460 --> 14:52.460
 So you said you missed the launch?

14:52.460 --> 14:55.460
 Well, I missed the first floor employment opportunity,

14:55.460 --> 14:59.460
 but the IPO was August 1995, so I was there for that.

14:59.460 --> 15:02.460
 How obvious was it that Netscape was like world changing?

15:02.460 --> 15:04.460
 How was the layout?

15:04.460 --> 15:06.460
 Was Netscape one of the first big browsers?

15:06.460 --> 15:07.460
 Yes.

15:07.460 --> 15:09.460
 So when I was at Micro Unity still in 93,

15:09.460 --> 15:11.460
 we saw a browser called Mosaic.

15:11.460 --> 15:13.460
 And up till then, we'd used email,

15:13.460 --> 15:15.460
 and we'd used Usenet, the NNTP protocol.

15:15.460 --> 15:17.460
 We'd used Newsreaders.

15:17.460 --> 15:18.460
 We used FTP.

15:18.460 --> 15:20.460
 We used all these old internet protocols,

15:20.460 --> 15:25.460
 all relying on the DNS and TCPIP and UDP for that matter.

15:25.460 --> 15:26.460
 When I was at Silicon Graphics,

15:26.460 --> 15:28.460
 we brought up the whole stack, right?

15:28.460 --> 15:31.460
 We had to discover how to find the ethernet,

15:31.460 --> 15:33.460
 find the IP addresses on your network,

15:33.460 --> 15:35.460
 and then find IP addresses for them,

15:35.460 --> 15:37.460
 ARP protocol, all that stuff.

15:37.460 --> 15:39.460
 And it was great because nobody knew in the 80s

15:39.460 --> 15:41.460
 what was going to win.

15:41.460 --> 15:43.460
 All the proprietary stacks like IBM,

15:43.460 --> 15:46.460
 SNA, and DeckNet, and all these other protocols were saying,

15:46.460 --> 15:49.460
 we're going to do it, or it's going to be heterogeneous future.

15:49.460 --> 15:53.460
 Instead, it was Berkeley Unix and the TCPIP stack

15:53.460 --> 15:56.460
 that dated back to the ARPANET that won.

15:56.460 --> 15:57.460
 And I think we knew it.

15:57.460 --> 16:00.460
 We all knew it at SGI, but the salespeople didn't.

16:00.460 --> 16:02.460
 Multiple network stacks interoperating.

16:02.460 --> 16:04.460
 But in the end, it won.

16:04.460 --> 16:06.460
 And so that was the internet.

16:06.460 --> 16:09.460
 And it was email and texty, and it was used as very texty.

16:09.460 --> 16:12.460
 And then Tim Berners Lee did his thing,

16:12.460 --> 16:14.460
 but I don't think I was paying attention.

16:14.460 --> 16:16.460
 And I think the date when he first did it,

16:16.460 --> 16:19.460
 or when he wrote the famous emails and pushed back to 89,

16:19.460 --> 16:22.460
 but I noticed Mosaic in 93 because one of the things

16:22.460 --> 16:26.460
 that Mark Andreessen and Eric Bina did at NCSA

16:26.460 --> 16:31.460
 was they innovated on the early HTML standard.

16:31.460 --> 16:33.460
 In particular, Mark sent this email saying, hey, everybody,

16:33.460 --> 16:36.460
 we think you should be able to put an image in a page.

16:36.460 --> 16:38.460
 And you know when he sent that, Eric Bina had already written

16:38.460 --> 16:39.460
 the code.

16:39.460 --> 16:42.460
 And I talked to Tim Berners Lee more recently just a few years ago,

16:42.460 --> 16:44.460
 and he was like, oh, we had another way of doing it.

16:44.460 --> 16:48.460
 And it didn't work out because Mark shipped his in Mosaic.

16:48.460 --> 16:50.460
 And this convinced me of several things.

16:50.460 --> 16:54.460
 One, the internet meant there was a huge first mover advantage

16:54.460 --> 16:58.460
 and being fast, getting on first mattered a lot.

16:58.460 --> 17:01.460
 And so Richard Gabriel of Scheme and Poetry fame

17:01.460 --> 17:02.460
 has written about this.

17:02.460 --> 17:03.460
 Poetry.

17:03.460 --> 17:04.460
 Poetry.

17:04.460 --> 17:05.460
 What's poetry?

17:05.460 --> 17:06.460
 Well, he's a poet.

17:06.460 --> 17:07.460
 Oh, actual poetry.

17:07.460 --> 17:08.460
 He thought it was something.

17:08.460 --> 17:09.460
 No, no.

17:09.460 --> 17:10.460
 I mean, he's the founder of Lucid,

17:10.460 --> 17:13.460
 which is where Jamie Zewinski worked before in Netscape.

17:13.460 --> 17:16.460
 And Lucid was doing compilers and Lucid Emacs,

17:16.460 --> 17:19.460
 which was a fork of Emacs, famously Jamie fighting

17:19.460 --> 17:22.460
 against Richard Stallman, Stallmax.

17:22.460 --> 17:25.460
 And so Richard Gabriel, you know, very, very brainy computer guy,

17:25.460 --> 17:27.460
 but also a poet, but he wrote a nice essay

17:27.460 --> 17:28.460
 that gets abused all the time.

17:28.460 --> 17:30.460
 In fact, Jamie's put a kind of warning

17:30.460 --> 17:32.460
 in front of his version of it on his site,

17:32.460 --> 17:33.460
 JWC.

17:33.460 --> 17:34.460
 They were called worse is better.

17:34.460 --> 17:38.460
 And this is about survival advantage of software

17:38.460 --> 17:39.460
 in the network world, in my opinion.

17:39.460 --> 17:41.460
 It's about Unix.

17:41.460 --> 17:43.460
 It started out being framed as Unix and Lisp,

17:43.460 --> 17:45.460
 good news, bad news, because all the Lisp people,

17:45.460 --> 17:48.460
 the MIT people were like, oh, you know,

17:48.460 --> 17:51.460
 the crown jewel, right, Scheme, this Faberge egg

17:51.460 --> 17:53.460
 or common Lisp, this giant cathedral.

17:53.460 --> 17:54.460
 Of course we're going to win.

17:54.460 --> 17:55.460
 This is civilization.

17:55.460 --> 17:57.460
 And those, you know, those farmers in New Jersey

17:57.460 --> 18:00.460
 to borrow from the Sopranos, those hicks down at Bell Labs,

18:00.460 --> 18:03.460
 they're just, you know, there's nothing sound there.

18:03.460 --> 18:04.460
 It's all hacking.

18:04.460 --> 18:06.460
 Well, guess what one.

18:06.460 --> 18:07.460
 Wow.

18:07.460 --> 18:09.460
 So you're saying this is a fundamental,

18:09.460 --> 18:14.460
 like principle of the internet is moving fast winds.

18:14.460 --> 18:16.460
 You could say in almost any network system,

18:16.460 --> 18:19.460
 like biological evolution, you see successful,

18:19.460 --> 18:22.460
 real sweet populations and they don't always have,

18:22.460 --> 18:24.460
 you know, they aren't free of flaws.

18:24.460 --> 18:26.460
 The heterozygous advantage, right?

18:26.460 --> 18:29.460
 You can get both parents, give you the gene variant

18:29.460 --> 18:31.460
 and you get sickle cell anemia, right?

18:31.460 --> 18:34.460
 But if one of them does, you're more resistant to malaria.

18:34.460 --> 18:37.460
 And so this isn't a beautiful process,

18:37.460 --> 18:39.460
 except at large scale.

18:39.460 --> 18:41.460
 And then you realize that because it moves fast

18:41.460 --> 18:43.460
 and can adapt, it can win.

18:43.460 --> 18:46.460
 And people still struggle with this.

18:46.460 --> 18:48.460
 I used to struggle with this because JavaScript

18:48.460 --> 18:51.460
 was done in such a hurry and the force of web compatibility

18:51.460 --> 18:54.460
 meant early mistakes couldn't be fixed.

18:54.460 --> 18:57.460
 And even the standards process injected new mistakes,

18:57.460 --> 18:58.460
 as it will.

18:58.460 --> 19:00.460
 But often standards bodies go back

19:00.460 --> 19:01.460
 and making compatible changes.

19:01.460 --> 19:03.460
 You can't do that with the web.

19:03.460 --> 19:05.460
 It's more like, again, like biology,

19:05.460 --> 19:07.460
 you preserve what still works.

19:07.460 --> 19:10.460
 You don't want to break ATP metabolism or whatever.

19:10.460 --> 19:14.460
 So you have to kind of resign yourself to the reality

19:14.460 --> 19:19.460
 of versus better being enshrined

19:19.460 --> 19:22.460
 in actual design points you might not like.

19:22.460 --> 19:24.460
 And that happened with JavaScript.

19:24.460 --> 19:25.460
 And I'm way over it.

19:25.460 --> 19:28.460
 But it also, I think, was a huge advantage

19:28.460 --> 19:32.460
 why JavaScript has kind of swept a lot of programming domains.

19:32.460 --> 19:34.460
 People will say, oh, it's not because of merit.

19:34.460 --> 19:35.460
 Well, you're right.

19:35.460 --> 19:37.460
 But we also improved it over time in the standards body.

19:37.460 --> 19:38.460
 I spent 20 years doing that.

19:38.460 --> 19:41.460
 And you don't get that choice.

19:41.460 --> 19:44.460
 It's like, I'm not saying that that was the best language.

19:44.460 --> 19:46.460
 I'm just saying that was the right time to do it.

19:46.460 --> 19:49.460
 And I like to say the alternative was not to do it.

19:49.460 --> 19:51.460
 I could have told Netscape, I can't do this.

19:51.460 --> 19:52.460
 It's too rushed.

19:52.460 --> 19:54.460
 And it would have been visual basic script.

19:54.460 --> 19:57.460
 And it would have been bad.

19:57.460 --> 19:59.460
 So that's a good way to present the alternative.

19:59.460 --> 20:01.460
 But so it was a Netscape.

20:01.460 --> 20:03.460
 And you have written it how many days

20:03.460 --> 20:05.460
 and why was it only that many days?

20:05.460 --> 20:08.460
 And what was the goal and the underlying principles

20:08.460 --> 20:09.460
 in your mind?

20:09.460 --> 20:11.460
 So the whole, I'm sort of describing worse is better

20:11.460 --> 20:14.460
 in a frenetic way because it fit the model of Netscape.

20:14.460 --> 20:18.460
 When it was known that Jim Clark and Mark Andrius

20:18.460 --> 20:22.460
 were founding Netscape and they did the first release in 1994,

20:22.460 --> 20:24.460
 that browser took over from Mosaic.

20:24.460 --> 20:26.460
 In fact, that's why Mozilla is called that.

20:26.460 --> 20:27.460
 It's the Mosaic killer.

20:27.460 --> 20:29.460
 It's like the giant monster that kills Mosaic.

20:29.460 --> 20:30.460
 It's awesome.

20:30.460 --> 20:33.460
 And they knew that it wasn't that, again,

20:33.460 --> 20:35.460
 it's not like you're doing advanced scientific research

20:35.460 --> 20:37.460
 that is changing the world.

20:37.460 --> 20:40.460
 It's more like taking down the last iteration

20:40.460 --> 20:42.460
 in the browser Mark did, which had images

20:42.460 --> 20:45.460
 and other affordances before you stopped working on it.

20:45.460 --> 20:48.460
 And you're making Netscape the new thing that has images,

20:48.460 --> 20:51.460
 plug ins, which was the way to do video back in the day.

20:51.460 --> 20:53.460
 It had something that's kind of died now for tiled windows

20:53.460 --> 20:55.460
 called frames and frame sets.

20:55.460 --> 20:57.460
 Oh, yeah, yeah, yeah, yeah.

20:57.460 --> 20:58.460
 HTML tables.

20:58.460 --> 20:59.460
 That was new.

20:59.460 --> 21:01.460
 Eric Bina did tables in Netscape 11.

21:01.460 --> 21:04.460
 So when I got there, they were heading toward IPO.

21:04.460 --> 21:06.460
 Clark wanted to IPO early.

21:06.460 --> 21:08.460
 I think his instinct was right.

21:08.460 --> 21:10.460
 And that kicked off the whole dot com era.

21:10.460 --> 21:13.460
 There was a recession in the US in 91.

21:13.460 --> 21:15.460
 You can see old law and order reruns

21:15.460 --> 21:17.460
 where they talk about the recession, how hard it's hitting

21:17.460 --> 21:18.460
 New Yorkers.

21:18.460 --> 21:20.460
 And after that, Greenspan really goose things

21:20.460 --> 21:21.460
 at the Federal Reserve.

21:21.460 --> 21:25.460
 And technology had been sort of fermenting in a way that came

21:25.460 --> 21:26.460
 together with the internet.

21:26.460 --> 21:30.460
 And Netscape made it possible to do pets.com,

21:30.460 --> 21:34.460
 to do eBay, to get people to recognize a URL on a billboard

21:34.460 --> 21:35.460
 and then type it in when they get home.

21:35.460 --> 21:37.460
 And that was huge.

21:37.460 --> 21:43.460
 That was so fast moving a rocket that Mark and the

21:43.460 --> 21:46.460
 engineering team there thought we need to make this a

21:46.460 --> 21:49.460
 programmable browser, not just a document viewer,

21:49.460 --> 21:50.460
 not just a video.

21:50.460 --> 21:53.460
 It was all HTML with images and tables.

21:53.460 --> 21:54.460
 And also, like you said, frames.

21:54.460 --> 21:55.460
 Really plug ins.

21:55.460 --> 21:57.460
 There's no dynamic element at all.

21:57.460 --> 21:58.460
 Yeah.

21:58.460 --> 21:59.460
 The most dynamism you get was from a plug in,

21:59.460 --> 22:02.460
 which there are a few of them then flash didn't exist

22:02.460 --> 22:05.460
 at that point.

22:05.460 --> 22:06.460
 Java applets yet?

22:06.460 --> 22:07.460
 No.

22:07.460 --> 22:08.460
 Well, that's the thing.

22:08.460 --> 22:09.460
 We did the deal with Sun.

22:09.460 --> 22:12.460
 In fact, I was recruited to go do Scheme in the browser.

22:12.460 --> 22:14.460
 Remember Guy Steele and Gerald Susman's beautiful

22:14.460 --> 22:16.460
 list variant?

22:16.460 --> 22:18.460
 I was going to do it in the browser because my friends

22:18.460 --> 22:20.460
 from SGI thought, hey, we like Scheme.

22:20.460 --> 22:21.460
 You like Scheme.

22:21.460 --> 22:22.460
 And I'm like, I hardly ever use Scheme.

22:22.460 --> 22:25.460
 It's not really used in industry except in sort of silos.

22:25.460 --> 22:26.460
 But I like it.

22:26.460 --> 22:27.460
 Okay.

22:27.460 --> 22:29.460
 I'll come do Scheme in the browser.

22:29.460 --> 22:33.460
 I have a slide from my 2017 talk where I have Bruce Willis

22:33.460 --> 22:35.460
 crawling through the duct in diehard.

22:35.460 --> 22:37.460
 He's like, come out to the coast.

22:37.460 --> 22:38.460
 Have a lot of fun.

22:38.460 --> 22:40.460
 Come on, do Scheme in the browser.

22:40.460 --> 22:42.460
 But when I got there, there was no Scheme in the browser

22:42.460 --> 22:45.460
 because they'd started a deal with Sun Microsystems.

22:45.460 --> 22:47.460
 And my best contact there was Bill Joy,

22:47.460 --> 22:50.460
 who I admired as a Berkeley UNIX founder and a Sun founder.

22:50.460 --> 22:54.460
 And Bill got the idea of making the browser programmable too.

22:54.460 --> 22:57.460
 And so the main idea was to put the Java VM,

22:57.460 --> 23:00.460
 which at that point was not really easy to embed,

23:00.460 --> 23:04.460
 into Netscape, including the Netscape version of Windows

23:04.460 --> 23:08.460
 that was still most popular, which was the 16 bit Windows 3.1,

23:08.460 --> 23:09.460
 which was going away.

23:09.460 --> 23:11.460
 Microsoft was coming out with Windows 95.

23:11.460 --> 23:14.460
 And everyone was afraid they were going to do Internet Explorer,

23:14.460 --> 23:17.460
 I guess, two at that point, three the next year.

23:17.460 --> 23:21.460
 They already bought or invested in somehow Spyglass,

23:21.460 --> 23:26.460
 this other company that shot out from NCSA at University of Illinois.

23:26.460 --> 23:30.460
 And in fact, Microsoft had tried to buy Netscape in late 94

23:30.460 --> 23:31.460
 before I got there.

23:31.460 --> 23:32.460
 And I heard about this later.

23:32.460 --> 23:35.460
 I heard they offered way too little money.

23:35.460 --> 23:38.460
 And so Jim Barksdale and Jim Clark said, get out of here,

23:38.460 --> 23:39.460
 pound sand.

23:39.460 --> 23:43.460
 But then they realized, oh, this is going to hurt us

23:43.460 --> 23:45.460
 because now they're going to copy us.

23:45.460 --> 23:46.460
 It didn't happen right away.

23:46.460 --> 23:50.460
 I'm not sure when Gates Internet Title Wave memo was written.

23:50.460 --> 23:53.460
 That's the famous memo he wrote when Bill Gates realized

23:53.460 --> 23:56.460
 that Microsoft was going down this old copy AOL path

23:56.460 --> 24:00.460
 or copy compuser path, a project called Blackbird,

24:00.460 --> 24:02.460
 presumably after the SSR 71, I don't know.

24:02.460 --> 24:05.460
 But they were going to make a dial up service with a custom

24:05.460 --> 24:08.460
 content language stack and custom rendering.

24:08.460 --> 24:10.460
 It wasn't the web.

24:10.460 --> 24:12.460
 They could have content partners.

24:12.460 --> 24:13.460
 They have a lot of money.

24:13.460 --> 24:15.460
 But it still wasn't to scale the web.

24:15.460 --> 24:16.460
 It wasn't going to be compelling.

24:16.460 --> 24:19.460
 And Gates realized this and he turned the company on at a dime

24:19.460 --> 24:21.460
 and they couldn't buy Netscape.

24:21.460 --> 24:24.460
 Again, I'm not sure the timing, so they decided to copy it.

24:24.460 --> 24:27.460
 And once we realized that everybody inside Netscape

24:27.460 --> 24:30.460
 felt even more urgency and more of a frenetic mood.

24:30.460 --> 24:34.460
 And so my chance to do scheme disappeared when the Java deal

24:34.460 --> 24:35.460
 started brewing.

24:35.460 --> 24:39.460
 But there was still a chance to do a companion language to Java

24:39.460 --> 24:42.460
 because Java is a compiled language.

24:42.460 --> 24:44.460
 It's evolved and improved quite a lot since then too.

24:44.460 --> 24:48.460
 But it was for sort of serious advanced programmers

24:48.460 --> 24:50.460
 that cost a certain salary or hourly rate.

24:50.460 --> 24:54.460
 And people observed, Bill Joy observed, and Mark Andreessen

24:54.460 --> 24:57.460
 and I observed that in a mature stack like Microsoft,

24:57.460 --> 24:59.460
 you really benefit from having a scripting language

24:59.460 --> 25:03.460
 like Visual Basic, which became Visual Basic Script in IE3

25:03.460 --> 25:06.460
 but didn't take over and kill JavaScript,

25:06.460 --> 25:08.460
 that you need two languages.

25:08.460 --> 25:11.460
 One is for the component writers who are higher price

25:11.460 --> 25:12.460
 and more expert.

25:12.460 --> 25:18.460
 And the other is for scripters, certified public accountants,

25:18.460 --> 25:21.460
 designers, graphic designers with some programming inclination.

25:21.460 --> 25:23.460
 Anybody, amateurs, doesn't matter.

25:23.460 --> 25:26.460
 There's a much more demotic approach there

25:26.460 --> 25:29.460
 for programming the components together, gluing them together.

25:29.460 --> 25:31.460
 Some people will say ducked tape language,

25:31.460 --> 25:32.460
 which I don't really like.

25:32.460 --> 25:35.460
 But we saw Bill Joy and Mark Andreessen

25:35.460 --> 25:37.460
 and we saw the need for companion language.

25:37.460 --> 25:40.460
 And Gleaminar, I was to call it JavaScript.

25:40.460 --> 25:41.460
 I didn't like it.

25:41.460 --> 25:42.460
 That was marketing's plan.

25:42.460 --> 25:44.460
 Mark called it Mocha, which I liked.

25:44.460 --> 25:46.460
 And Netscape marketing, I think, didn't like that.

25:46.460 --> 25:49.460
 So they said, oh, there's some trademark and some software,

25:49.460 --> 25:50.460
 somewhere that uses Mocha.

25:50.460 --> 25:51.460
 So we can't use that.

25:51.460 --> 25:54.460
 And they tried live script in August and that didn't last.

25:54.460 --> 25:57.460
 And then finally, we got the trademark license in December,

25:57.460 --> 25:58.460
 1995.

25:58.460 --> 26:01.460
 But the work I did to prove that it could be done was important

26:01.460 --> 26:07.460
 because I came in in April and even then Netscape was growing

26:07.460 --> 26:10.460
 so fast that they couldn't find an open hiring requisition

26:10.460 --> 26:11.460
 in the client team for me.

26:11.460 --> 26:13.460
 So they hired me into the server team.

26:13.460 --> 26:18.460
 And I worked for a month on server team on what became HP11.

26:18.460 --> 26:20.460
 So I was actually, I had done protocol work at Silicon

26:20.460 --> 26:24.460
 Graphics with Greg Cheson, former Bell Labs intern,

26:24.460 --> 26:26.460
 grad student intern who knew all the UNIX founders.

26:26.460 --> 26:31.460
 And Greg was very interested in taking protocols to the next level

26:31.460 --> 26:35.460
 with VLSI because he thought that CPUs wouldn't scale up.

26:35.460 --> 26:37.460
 He was mistaken in that, unfortunately.

26:37.460 --> 26:38.460
 Moore's law more than kept up.

26:38.460 --> 26:42.460
 And you have gigabit ethernet running with conventional processors.

26:42.460 --> 26:47.460
 But I worked on protocols at SGI as well as UNIX kernel hacking

26:47.460 --> 26:49.460
 and NFS and things like that.

26:49.460 --> 26:53.460
 So I came into Netscape to work on the server side for a month.

26:53.460 --> 26:56.460
 But I was thinking the whole time, what should this language be like?

26:56.460 --> 26:58.460
 Should it be easy to use?

26:58.460 --> 27:00.460
 Might it syntax even be more like natural language?

27:00.460 --> 27:05.460
 Like hyper talk, which is Bill Atkinson's language in hypercard,

27:05.460 --> 27:08.460
 if you have ever used hypercard on an early Mac.

27:08.460 --> 27:12.460
 And I thought, well, I'd like to do that.

27:12.460 --> 27:14.460
 But my management is saying, make it look like Java,

27:14.460 --> 27:17.460
 which looks like C from a distance.

27:17.460 --> 27:18.460
 What does that mean?

27:18.460 --> 27:19.460
 Is it braces?

27:19.460 --> 27:20.460
 We're talking about visually.

27:20.460 --> 27:22.460
 Does it mean like management?

27:22.460 --> 27:24.460
 Do they understand what you think about it?

27:24.460 --> 27:25.460
 No, marketing didn't know.

27:25.460 --> 27:26.460
 But management did.

27:26.460 --> 27:29.460
 Like Rick Shell, the VP of Engineering knew.

27:29.460 --> 27:32.460
 And we had a plan even that was, if you have this companion language,

27:32.460 --> 27:35.460
 you're going to glue things together between Java and JavaScript.

27:35.460 --> 27:39.460
 So you're going to have commerce in memory in the heap with data types.

27:39.460 --> 27:42.460
 So you're going to want some of the data types in Java

27:42.460 --> 27:43.460
 to reflect in the JavaScript.

27:43.460 --> 27:46.460
 You're going to want the primitive types that Java unfortunately

27:46.460 --> 27:47.460
 severed it from objects.

27:47.460 --> 27:51.460
 So at least some of them number double, let's call it in Java's terms,

27:51.460 --> 27:56.460
 from the C term for double precision floating point or strings

27:56.460 --> 28:00.460
 or Booleans and objects.

28:00.460 --> 28:05.460
 And so right away, there was this constraint that looking like Java meant

28:05.460 --> 28:07.460
 kind of the C curly brace syntax,

28:07.460 --> 28:09.460
 but also some of the data types and objects.

28:09.460 --> 28:10.460
 Like objects and so on and so forth.

28:10.460 --> 28:11.460
 Yeah, I thought it called.

28:11.460 --> 28:12.460
 Comparison operator.

28:12.460 --> 28:13.460
 Garbage collection.

28:13.460 --> 28:14.460
 Garbage collection.

28:14.460 --> 28:15.460
 Yeah.

28:15.460 --> 28:17.460
 Even the bitwise operators and the shift operators,

28:17.460 --> 28:19.460
 including the unsigned right shift,

28:19.460 --> 28:22.460
 which Java had because it didn't have unsigned integer types.

28:22.460 --> 28:25.460
 It said, if you want to do unsigned operations, use an operator.

28:25.460 --> 28:27.460
 And that turned out to be important much later.

28:27.460 --> 28:28.460
 I'll tell that story five times.

28:28.460 --> 28:34.460
 But JavaScript inherited a set of operators,

28:34.460 --> 28:39.460
 the expression grammar, the statement grammar up to a point from Java.

28:39.460 --> 28:40.460
 But I wanted a functional language.

28:40.460 --> 28:42.460
 I want to scheme a little bit of scheme,

28:42.460 --> 28:44.460
 even though it wasn't as clean as scheme.

28:44.460 --> 28:45.460
 You had a love search interrupt.

28:45.460 --> 28:47.460
 You had a love for scheme and list,

28:47.460 --> 28:49.460
 but that functional language last game.

28:49.460 --> 28:50.460
 Yes.

28:50.460 --> 28:53.460
 I wanted first class functions because I saw the need for callbacks

28:53.460 --> 28:55.460
 in the browser where it's a single threaded program.

28:55.460 --> 28:56.460
 Wow.

28:56.460 --> 28:57.460
 All the early browsers were single threaded.

28:57.460 --> 28:58.460
 And it's the right model for users.

28:58.460 --> 29:01.460
 Most users weren't ready for mutual exclusion and threading.

29:01.460 --> 29:03.460
 So in a single threaded world,

29:03.460 --> 29:05.460
 you cannot block the user interface.

29:05.460 --> 29:07.460
 So you have to use a callback and run later.

29:07.460 --> 29:11.460
 And without getting too fancy and trying to capture the continuation

29:11.460 --> 29:13.460
 like call CC does in scheme,

29:13.460 --> 29:16.460
 I thought I'll just make it easy to have fun arcs.

29:16.460 --> 29:19.460
 First class functions, you pass downward and they can call back.

29:19.460 --> 29:21.460
 It'd be called back.

29:21.460 --> 29:23.460
 And Java didn't have that at the time.

29:23.460 --> 29:27.460
 It took forever to get proper first class functions.

29:27.460 --> 29:29.460
 Lambda is now into Java.

29:29.460 --> 29:30.460
 Java 7 or 8, I think.

29:30.460 --> 29:32.460
 It did have concurrency, right?

29:32.460 --> 29:33.460
 Yes.

29:33.460 --> 29:34.460
 From the very beginning,

29:34.460 --> 29:36.460
 but you were thinking that a JavaScript in the browser

29:36.460 --> 29:39.460
 would not have the luxury of being concurrent.

29:39.460 --> 29:40.460
 That's right.

29:40.460 --> 29:42.460
 And the reason was Java was going to run in a plug in

29:42.460 --> 29:44.460
 so it could fork threads and go to town.

29:44.460 --> 29:48.460
 But the main action in the browser was in the single threaded program,

29:48.460 --> 29:51.460
 single UNIX process on UNIX or Windows.

29:51.460 --> 29:54.460
 And it was where you had to service the event loop

29:54.460 --> 29:56.460
 and then go do things.

29:56.460 --> 29:59.460
 Respond to the network, lay out some HTML, render it,

29:59.460 --> 30:02.460
 turn widths into heights by filling containers,

30:02.460 --> 30:05.460
 boxes, the early, what became the CSS box model.

30:05.460 --> 30:09.460
 And run scripts to make the thing livelier,

30:09.460 --> 30:11.460
 respond to user input.

30:11.460 --> 30:15.460
 And all that event driven programming was in part like Hypercard

30:15.460 --> 30:19.460
 because Hypercard had this on event name syntax.

30:19.460 --> 30:21.460
 And so that's why you have in JavaScript on click

30:21.460 --> 30:24.460
 running together as the name of the event handler.

30:24.460 --> 30:27.460
 And there's some funny ones on mouse over and on mouse out.

30:27.460 --> 30:28.460
 People still complain about those.

30:28.460 --> 30:30.460
 But, you know, there are many more events now

30:30.460 --> 30:31.460
 over the years standardized.

30:31.460 --> 30:35.460
 But it was a mix of event driven single threaded programming

30:35.460 --> 30:38.460
 because it had to run in the main thread of the browser

30:38.460 --> 30:39.460
 where the action is.

30:39.460 --> 30:40.460
 And Java never got there,

30:40.460 --> 30:43.460
 which meant Java could not interact easily or quickly

30:43.460 --> 30:46.460
 or in a nested way with the document,

30:46.460 --> 30:49.460
 with the objects reflected from the HTML document,

30:49.460 --> 30:51.460
 with the tables and forms and so on.

30:51.460 --> 30:54.460
 And that is one of the reasons I think JavaScript survived

30:54.460 --> 30:55.460
 and Java kind of died.

30:55.460 --> 30:56.460
 Java was in this plugin prison.

30:56.460 --> 30:58.460
 It essentially was confined to a rectangle,

30:58.460 --> 30:59.460
 the Apple rectangle.

30:59.460 --> 31:02.460
 And while we even built a next year,

31:02.460 --> 31:04.460
 Nick Thompson, a friend from SGI,

31:04.460 --> 31:08.460
 who was an intern grad student at CMU at the time,

31:08.460 --> 31:10.460
 built the first version of LiveConnect to glue Java

31:10.460 --> 31:13.460
 and JavaScript together to deliver on that vision

31:13.460 --> 31:17.460
 where you do have commerce between the data types and the heap.

31:17.460 --> 31:18.460
 Did it work?

31:18.460 --> 31:19.460
 It worked.

31:19.460 --> 31:21.460
 But Java was in charge.

31:21.460 --> 31:22.460
 JavaScript was in charge.

31:22.460 --> 31:24.460
 And Java was just these components, these helper objects.

31:24.460 --> 31:25.460
 You might as well do everything in JavaScript.

31:25.460 --> 31:26.460
 And what happened over time,

31:26.460 --> 31:27.460
 it's like an evolutionary filter.

31:27.460 --> 31:29.460
 It's just kind of who needs the plugin.

31:29.460 --> 31:32.460
 And in fact, Sun mismanaged Java as a plugin.

31:32.460 --> 31:36.460
 They thought, oh, Netscape is giving us the distribution vehicle

31:36.460 --> 31:38.460
 and we don't care about the browser.

31:38.460 --> 31:39.460
 It's just about getting Java out there.

31:39.460 --> 31:40.460
 And that was a big miscalculation.

31:40.460 --> 31:43.460
 They then tried, because Microsoft's killing Netscape

31:43.460 --> 31:45.460
 after a few years, they tried getting into Microsoft.

31:45.460 --> 31:48.460
 And you may remember there was a Sun Microsoft deal,

31:48.460 --> 31:50.460
 which famously blew up.

31:50.460 --> 31:54.460
 And Microsoft kicked Java out of Windows.

31:54.460 --> 31:56.460
 And that's when they really pulled the trigger.

31:56.460 --> 31:57.460
 I think they'd already evaluated it

31:57.460 --> 32:01.460
 and liked it on AndersHelsberg's.net and C Sharp

32:01.460 --> 32:03.460
 and decided we're going to just not have Java.

32:03.460 --> 32:06.460
 We don't want any of that Sun stuff.

32:06.460 --> 32:07.460
 We don't want the patent risk.

32:07.460 --> 32:10.460
 We don't want, I'm not sure what all fights were about.

32:10.460 --> 32:12.460
 There was some patent angle to it, I think.

32:12.460 --> 32:16.460
 And up till then, Microsoft had been using Java components,

32:16.460 --> 32:20.460
 like in Outlook Web Access, which had a lot of JavaScript

32:20.460 --> 32:22.460
 to be a webmail, like hotmail, like user interface.

32:22.460 --> 32:27.460
 They had to call the mail server through HTTP

32:27.460 --> 32:30.460
 and they used a Java object to do this.

32:30.460 --> 32:33.460
 And when they gave the boot to Sun,

32:33.460 --> 32:37.460
 suddenly, the left hand gave the boot and the right hand said,

32:37.460 --> 32:39.460
 we better do something else in Outlook Web Access.

32:39.460 --> 32:40.460
 What are we going to do?

32:40.460 --> 32:43.460
 And they said, let's just add an ActiveX component,

32:43.460 --> 32:46.460
 which is their own native way of embedding things in languages.

32:46.460 --> 32:51.460
 And it'll be what became XML HTTP request,

32:51.460 --> 32:54.460
 which is now a web standard for calling asynchronously.

32:54.460 --> 32:56.460
 And it's been replaced by the Fetch API

32:56.460 --> 32:59.460
 and HTML5 or HTML living document.

32:59.460 --> 33:01.460
 But this whole lineage goes back to Java

33:01.460 --> 33:04.460
 being successfully the loser and getting kicked out.

33:04.460 --> 33:07.460
 And after Microsoft kicked it out, it was a plug in

33:07.460 --> 33:10.460
 and you would find it required for smart card banking

33:10.460 --> 33:14.460
 in Nordic countries where that was mandated by law

33:14.460 --> 33:16.460
 but really didn't get used much.

33:16.460 --> 33:20.460
 Or there were pilots who used it for flight information.

33:20.460 --> 33:23.460
 But Flash, which Netscape could have bought

33:23.460 --> 33:25.460
 but fortunately didn't.

33:25.460 --> 33:26.460
 Fortunately didn't.

33:26.460 --> 33:27.460
 We would have screwed it up.

33:27.460 --> 33:29.460
 What year were we talking about with Flash?

33:29.460 --> 33:32.460
 I think after that PO, so it was probably late 95.

33:32.460 --> 33:34.460
 Flash was around. Was it Adobe? No, it wasn't.

33:34.460 --> 33:36.460
 No, it was called Future Splash.

33:36.460 --> 33:39.460
 And it was these brothers, Jonathan Gay, I think his name was.

33:39.460 --> 33:43.460
 He came knocking and the marketing guy at Netscape

33:43.460 --> 33:45.460
 who was screening the technology partners

33:45.460 --> 33:47.460
 or wannabe acquisitions was brutal

33:47.460 --> 33:51.460
 and just everybody wanted to get in on the Netscape stock gravy train

33:51.460 --> 33:54.460
 and he sent them packing and they ended up selling to Macromedia.

33:54.460 --> 33:57.460
 And Macromedia was where Flash was created.

33:57.460 --> 34:01.460
 And the good thing about Macromedia was it was a tool company.

34:01.460 --> 34:05.460
 So it invested in the best ideas I think

34:05.460 --> 34:07.460
 which are still somewhat lost to us of Flash.

34:07.460 --> 34:13.460
 The timeline animation has sort of been immutable function over time.

34:13.460 --> 34:14.460
 They had the tooling around that too.

34:14.460 --> 34:16.460
 Like the Dreamweaver, there's a Flash.

34:16.460 --> 34:18.460
 Flash director, there were a bunch of them.

34:18.460 --> 34:20.460
 Yeah, I mean, yeah, that was a great...

34:20.460 --> 34:22.460
 Flash builder was one of the last ones.

34:22.460 --> 34:26.460
 These tools were used by real artists and special effects people

34:26.460 --> 34:27.460
 and designers.

34:27.460 --> 34:30.460
 All the restaurant websites around 2005 were done in Flash

34:30.460 --> 34:33.460
 which was, you know, we were trying to do HTML5 at the same time

34:33.460 --> 34:35.460
 that was the Firefox era.

34:35.460 --> 34:37.460
 We were trying to make the web capable enough.

34:37.460 --> 34:40.460
 You didn't need Flash, but if you recall, you go to a restaurant

34:40.460 --> 34:42.460
 and it's like, this is kind of like a game or something.

34:42.460 --> 34:43.460
 It's like a Flash.

34:43.460 --> 34:44.460
 All the font looks small.

34:44.460 --> 34:46.460
 You didn't like Flash from the beginning.

34:46.460 --> 34:47.460
 This doesn't feel right.

34:47.460 --> 34:48.460
 Not really.

34:48.460 --> 34:50.460
 I actually admire Flash's technology.

34:50.460 --> 34:52.460
 I'm pretty pragmatic about these things.

34:52.460 --> 34:56.460
 I realized that, you know, it doesn't matter if your delta bad hand

34:56.460 --> 35:00.460
 like JavaScript was a rush job or if you have Flash as a plugin

35:00.460 --> 35:03.460
 and you can invest in the tools and make it pretty good.

35:03.460 --> 35:07.460
 You should make it better for your users and grow it as best you can.

35:07.460 --> 35:11.460
 And what happened with the browser due to Microsoft's monopoly abuse

35:11.460 --> 35:15.460
 for which they were convicted and, you know, even after that

35:15.460 --> 35:18.460
 until I think Firefox and then Chrome was people kept saying,

35:18.460 --> 35:20.460
 oh, the web can't do X.

35:20.460 --> 35:21.460
 Can't do Y.

35:21.460 --> 35:22.460
 You have to have a plugin.

35:22.460 --> 35:23.460
 You have to have a new approach.

35:23.460 --> 35:26.460
 Well, we'll clean the slate and have a new web.

35:26.460 --> 35:28.460
 And everyone who said that failed.

35:28.460 --> 35:32.460
 And the reason they failed is because there's too much value in the web,

35:32.460 --> 35:36.460
 this huge network, and the worst is better principle means that you can

35:36.460 --> 35:40.460
 not only start bad, which they all sneer at, but get on first

35:40.460 --> 35:44.460
 and get wide distribution and get sort of evolutionary advantage

35:44.460 --> 35:48.460
 in the priority of place, but you can also improve it over time.

35:48.460 --> 35:49.460
 Yes.

35:49.460 --> 35:52.460
 So if you're going to improve flash and for some reason, flash is now

35:52.460 --> 35:53.460
 out of favor.

35:53.460 --> 35:55.460
 Steve Jobs said you can't have flash on the iPhone.

35:55.460 --> 35:56.460
 That was probably the death now.

35:56.460 --> 35:58.460
 Put your energy into JavaScript.

35:58.460 --> 35:59.460
 And that happened, right?

35:59.460 --> 36:02.460
 So we did things at Mozilla with Adobe to improve,

36:02.460 --> 36:05.460
 which bought my macro media, to improve flash and to improve

36:05.460 --> 36:07.460
 the version of JavaScript that was in flash.

36:07.460 --> 36:08.460
 We tried to standardize that.

36:08.460 --> 36:09.460
 Oh, that's right.

36:09.460 --> 36:10.460
 I'm getting ahead of myself.

36:10.460 --> 36:11.460
 That was ES4.

36:11.460 --> 36:12.460
 That's right.

36:12.460 --> 36:16.460
 Can we just rewind to the magical, like, you know,

36:16.460 --> 36:19.460
 it's a special moment in the history of all of computing.

36:19.460 --> 36:22.460
 We'll talk about it later, but it's arguable.

36:22.460 --> 36:25.460
 It's possible that the entirety of the world will run

36:25.460 --> 36:27.460
 in JavaScript at some point.

36:27.460 --> 36:31.460
 It's like those days, it would be interesting if you could just

36:31.460 --> 36:37.460
 describe actually zooming in on the how the cake was baked

36:37.460 --> 36:41.460
 from the several days that you were working on it.

36:41.460 --> 36:42.460
 What was in your mind?

36:42.460 --> 36:44.460
 How much coffee were you drinking?

36:44.460 --> 36:46.460
 Were you nervous?

36:46.460 --> 36:47.460
 Why the freaking out?

36:47.460 --> 36:48.460
 I'll try to remember it.

36:48.460 --> 36:49.460
 I mean, you're right.

36:49.460 --> 36:50.460
 There are these pregnant moments you see in hindsight.

36:50.460 --> 36:52.460
 Maybe they're overrated, but like,

36:52.460 --> 36:55.460
 Hegel sees Napoleon on horseback at Yena and says,

36:55.460 --> 36:59.460
 there's the world spirit on horse.

36:59.460 --> 37:03.460
 And I knew that there was a chance to do it.

37:03.460 --> 37:07.460
 Mark knew and he was my, you know, executive sponsor

37:07.460 --> 37:10.460
 and he was the one, you know, sort of brainstorming

37:10.460 --> 37:13.460
 how the JavaScript should be right there in the page.

37:13.460 --> 37:15.460
 That was important for him to say that because I thought so too.

37:15.460 --> 37:17.460
 But a lot of people were like, well,

37:17.460 --> 37:19.460
 you can't write programming language in the middle of the markup.

37:19.460 --> 37:21.460
 And indeed there are problems if you did it naively,

37:21.460 --> 37:24.460
 you'd see the code laid out as like random gibberish.

37:24.460 --> 37:26.460
 So I had to figure out how to hide that.

37:26.460 --> 37:27.460
 That was a challenge.

37:27.460 --> 37:29.460
 Is that a breakthrough idea?

37:29.460 --> 37:32.460
 I mean, so you and Mark thinking about this idea

37:32.460 --> 37:35.460
 that you just inject code in the middle of the markup.

37:35.460 --> 37:36.460
 Of the web page.

37:36.460 --> 37:37.460
 Yeah, I was considered kind of heretical.

37:37.460 --> 37:39.460
 There was an SGML guru, I forget his name,

37:39.460 --> 37:41.460
 but he corresponded with me and at first he was angry.

37:41.460 --> 37:44.460
 He's like, you should have used a marked section.

37:44.460 --> 37:45.460
 Why didn't you use a marked section?

37:45.460 --> 37:48.460
 And I said, well, SGML marked sections are not part of HTML,

37:48.460 --> 37:50.460
 by the way, and they're not supported in the browser.

37:50.460 --> 37:52.460
 And so I did some hack that was equivalent.

37:52.460 --> 37:54.460
 And over time you could do the proper SGML thing.

37:54.460 --> 37:57.460
 But eventually he came around and it was again,

37:57.460 --> 37:59.460
 sort of a revolutionary necessity.

37:59.460 --> 38:01.460
 It was almost like introgression, like, you know,

38:01.460 --> 38:06.460
 the idea which Lynn Margulies, I think, helped get across

38:06.460 --> 38:10.460
 that we have to consider mutualism and biology

38:10.460 --> 38:13.460
 that maybe, you know, mitochondria were ancient prokaryotes

38:13.460 --> 38:16.460
 that got into the cell and became beneficial.

38:16.460 --> 38:20.460
 Somehow the same sort of thinking applies.

38:20.460 --> 38:22.460
 You have to embed JavaScript in HTML.

38:22.460 --> 38:24.460
 It's going to be a good virus.

38:24.460 --> 38:29.460
 The code becomes data in a sense that just gets carried along.

38:29.460 --> 38:32.460
 But is there the side of the,

38:32.460 --> 38:34.460
 you were focusing on the Nescape at that time.

38:34.460 --> 38:36.460
 Doesn't the browser have to support,

38:36.460 --> 38:39.460
 interpret correctly this mix of HTML?

38:39.460 --> 38:40.460
 Yeah.

38:40.460 --> 38:41.460
 And whatever code?

38:41.460 --> 38:43.460
 I had to hide it from old browsers, including Netscape 1.1,

38:43.460 --> 38:45.460
 which was predominant then.

38:45.460 --> 38:47.460
 So I used an HTML comment.

38:47.460 --> 38:49.460
 But inside the container that comment lived in,

38:49.460 --> 38:51.460
 the script tag, which is a new element,

38:51.460 --> 38:54.460
 I could make different semantics in Netscape 2,

38:54.460 --> 38:56.460
 where those HTML comment delimiters,

38:56.460 --> 38:58.460
 instead of being multi line brackets,

38:58.460 --> 39:00.460
 became one line, or essentially one line.

39:00.460 --> 39:02.460
 So you wrote, so JavaScript was written,

39:02.460 --> 39:04.460
 the programming language was written as a comment?

39:04.460 --> 39:07.460
 A comment for old browsers and a set of brackets

39:07.460 --> 39:09.460
 that were ignored with real code for new.

39:09.460 --> 39:11.460
 And it was this two way comment hiding hack,

39:11.460 --> 39:13.460
 as I called it, that was absolutely necessary

39:13.460 --> 39:15.460
 for us to get off the ground.

39:15.460 --> 39:17.460
 We couldn't have bootstrapped JavaScript without it.

39:17.460 --> 39:19.460
 We didn't have scripts that were loaded from a separate file.

39:19.460 --> 39:22.460
 The only scripts in Netscape 2 were in line in the document.

39:22.460 --> 39:24.460
 What were the challenges here?

39:24.460 --> 39:27.460
 Like what, you know, typing,

39:27.460 --> 39:29.460
 what were the choices you were thinking about?

39:29.460 --> 39:30.460
 Garbage collection?

39:30.460 --> 39:32.460
 I didn't have time to write a garbage collector.

39:32.460 --> 39:34.460
 So I just, I didn't at first.

39:34.460 --> 39:37.460
 So the thing was using essentially arenas,

39:37.460 --> 39:39.460
 or what GNU calls object pools,

39:39.460 --> 39:41.460
 and just would run out of memory eventually.

39:41.460 --> 39:43.460
 And I added reference counting in a hurry

39:43.460 --> 39:45.460
 after the 10 days in which I hacked.

39:45.460 --> 39:47.460
 So after I was in the server team doing HTTP11

39:47.460 --> 39:49.460
 and thinking about the language,

39:49.460 --> 39:52.460
 I finally got transferred to the client team in early May.

39:52.460 --> 39:55.460
 And that's when I, you know, I got the go sign from Mark,

39:55.460 --> 39:57.460
 and it was like, we can't wait,

39:57.460 --> 39:59.460
 because people inside Netscape are doubting,

39:59.460 --> 40:01.460
 even people inside Sun are definitely doubting.

40:01.460 --> 40:04.460
 Bill Joy was the champion, but he was like alone in that,

40:04.460 --> 40:07.460
 in seeing there was a role for JavaScript as the,

40:07.460 --> 40:10.460
 as I call it, the sidekick language,

40:10.460 --> 40:12.460
 robbing the boy hostage.

40:12.460 --> 40:15.460
 Frank Miller put it in The Dark Knight Returns,

40:15.460 --> 40:18.460
 that there was this silly little language

40:18.460 --> 40:19.460
 that would be the glue language,

40:19.460 --> 40:20.460
 and it could become important over time.

40:20.460 --> 40:23.460
 And you were better off having that complementarity,

40:23.460 --> 40:26.460
 that pairing of languages, just like Microsoft stacked it

40:26.460 --> 40:28.460
 with Visual C++ and Visual Basic.

40:28.460 --> 40:32.460
 So what was the big moment of I'm done?

40:32.460 --> 40:34.460
 So I had to do a demo.

40:34.460 --> 40:35.460
 I forget the dates.

40:35.460 --> 40:38.460
 I think I, for a history of programming languages,

40:38.460 --> 40:40.460
 paper that Alan Worsbrock did with my help,

40:40.460 --> 40:42.460
 he did a lot of the writing.

40:42.460 --> 40:47.460
 I think it was the 10 days from like Thursday evening

40:47.460 --> 40:50.460
 through to the following weeks, you know,

40:50.460 --> 40:52.460
 the whole of that week and then into Monday.

40:52.460 --> 40:53.460
 Did you get sleep?

40:53.460 --> 40:54.460
 Not, not enough.

40:54.460 --> 40:56.460
 And I was really going fast,

40:56.460 --> 40:59.460
 and I'd already used a lot of C compiler

40:59.460 --> 41:01.460
 and front end compiler knowledge

41:01.460 --> 41:04.460
 that I'd gained from undergraduate school.

41:04.460 --> 41:06.460
 When I started getting into computing

41:06.460 --> 41:09.460
 as a Renegade Physics major,

41:09.460 --> 41:12.460
 people were formalizing more efficient

41:12.460 --> 41:16.460
 bottom up grammars, parsers for bottom up languages.

41:16.460 --> 41:19.460
 Really, LALR1 was the big thing.

41:19.460 --> 41:21.460
 And I studied all this and learned how to parse them.

41:21.460 --> 41:24.460
 And in the end, if you're doing C languages,

41:24.460 --> 41:27.460
 you often do what Dennis Ritchie did anyway,

41:27.460 --> 41:30.460
 which is the recursive descent parser.

41:30.460 --> 41:31.460
 You can hand code it.

41:31.460 --> 41:35.460
 And I did that for JavaScript in a blazing hurry.

41:35.460 --> 41:36.460
 Mostly got it right.

41:36.460 --> 41:39.460
 I didn't have precedence inversion problems or other bugs,

41:39.460 --> 41:42.460
 but I copied a lot from Java NC.

41:42.460 --> 41:44.460
 And I tried to keep things simple,

41:44.460 --> 41:48.460
 like the equality operator in those 10 days sprint

41:48.460 --> 41:51.460
 between two objects of different dynamic type said,

41:51.460 --> 41:52.460
 no, they're not equal.

41:52.460 --> 41:53.460
 Their types are different.

41:53.460 --> 41:54.460
 They're not too different.

41:54.460 --> 41:57.460
 And then after that, I had internal early adopters

41:57.460 --> 42:01.460
 and they were using JavaScript to match a number

42:01.460 --> 42:03.460
 against a database field that had been stringized.

42:03.460 --> 42:06.460
 And they said, oh, can we just have implicit conversion?

42:06.460 --> 42:07.460
 Like an idiot, I agreed.

42:07.460 --> 42:08.460
 I gave them what they wanted.

42:08.460 --> 42:10.460
 I was trying to please them and get adoption.

42:10.460 --> 42:17.460
 And that broke what equivalence relation nature there was

42:17.460 --> 42:19.460
 to the double equal.

42:19.460 --> 42:22.460
 There's some edge cases with not a number

42:22.460 --> 42:23.460
 that break that up too.

42:23.460 --> 42:24.460
 But it really broke it.

42:24.460 --> 42:27.460
 Having implicit conversions in the operator is something

42:27.460 --> 42:29.460
 that people still roast me over.

42:29.460 --> 42:31.460
 So let's talk about two things.

42:31.460 --> 42:34.460
 One, it sounds like the comparison operator,

42:34.460 --> 42:38.460
 the equality operator is the thing that you regret.

42:38.460 --> 42:39.460
 So maybe can you...

42:39.460 --> 42:40.460
 Making it sloppy.

42:40.460 --> 42:41.460
 Making it sloppy.

42:41.460 --> 42:45.460
 So what is the biggest thing you regret in those 10 days?

42:45.460 --> 42:47.460
 And what is the biggest thing you're proud of?

42:47.460 --> 42:49.460
 So that making it sloppy came after the 10 days.

42:49.460 --> 42:51.460
 And my lesson there, which I've tweeted is,

42:51.460 --> 42:53.460
 when people come to you saying,

42:53.460 --> 42:56.460
 can you please make it sloppy or add this cute feature?

42:56.460 --> 42:57.460
 The answer should be no.

42:57.460 --> 42:59.460
 And I should have known that because I think,

42:59.460 --> 43:01.460
 Nikolas, one of my heroes said,

43:01.460 --> 43:04.460
 the essence of design is leaving things out.

43:04.460 --> 43:06.460
 But during the 10 days, I also, like I said,

43:06.460 --> 43:08.460
 I was in such a hurry, I left out garbage collection,

43:08.460 --> 43:11.460
 came back to haunt me, but I got reference counting in in time

43:11.460 --> 43:14.460
 that people weren't running out of memory right away

43:14.460 --> 43:16.460
 on long live jobs.

43:16.460 --> 43:17.460
 What happens when you don't have garbage collection

43:17.460 --> 43:18.460
 and you have objects?

43:18.460 --> 43:20.460
 Well, you just run out of memory.

43:20.460 --> 43:23.460
 And, you know, at first you write a short script

43:23.460 --> 43:25.460
 and the page doesn't last long or it doesn't do a lot

43:25.460 --> 43:26.460
 and it's okay.

43:26.460 --> 43:27.460
 Oh, I see. Yeah.

43:27.460 --> 43:28.460
 But if you're writing a game or something

43:28.460 --> 43:30.460
 and you're doing event based allocation,

43:30.460 --> 43:31.460
 you run out of memory.

43:31.460 --> 43:33.460
 And this was noticed in the summer of 1985

43:33.460 --> 43:35.460
 and people were like, what's going on?

43:35.460 --> 43:38.460
 I got to go back and do reference counting.

43:38.460 --> 43:40.460
 And then the problem with reference counting is

43:40.460 --> 43:42.460
 you're writing the language in the runtime in C,

43:42.460 --> 43:44.460
 an unsafe language.

43:44.460 --> 43:45.460
 And if you're reference counting

43:45.460 --> 43:47.460
 and you overflow the counter, you mismanage it

43:47.460 --> 43:49.460
 so it goes high, it gets stuck high,

43:49.460 --> 43:51.460
 you leak memory again and you run out.

43:51.460 --> 43:55.460
 If you underflow it, you pre memory that's still in use.

43:55.460 --> 43:59.460
 And even then we knew what all the security hackers

43:59.460 --> 44:02.460
 came to know that you therefore have a,

44:02.460 --> 44:05.460
 potentially a remote code execution vulnerability.

44:05.460 --> 44:09.460
 Because this was before things like non executable

44:09.460 --> 44:14.460
 heap memory and stack defenses against taking over memory.

44:14.460 --> 44:17.460
 So if you can, from the remote side,

44:17.460 --> 44:19.460
 write some HTML and JavaScript that just happens

44:19.460 --> 44:21.460
 to exploit a bug in memory safety,

44:21.460 --> 44:24.460
 like it causes JavaScript to underflow reference counter.

44:24.460 --> 44:27.460
 And the script still has its hands on that object.

44:27.460 --> 44:28.460
 And it's trying to call a method on it.

44:28.460 --> 44:30.460
 And there's some kind of lookup function table

44:30.460 --> 44:34.460
 in the object, but you've managed to stuff the heap

44:34.460 --> 44:36.460
 with strings that forge their own lookalike

44:36.460 --> 44:39.460
 for the function table.

44:39.460 --> 44:41.460
 You can call some other code.

44:41.460 --> 44:43.460
 And this was a problem right away.

44:43.460 --> 44:46.460
 So security, JavaScript up the ante.

44:46.460 --> 44:48.460
 Java had this problem too, but in its own VM.

44:48.460 --> 44:51.460
 And it just was, you know, a separate headache

44:51.460 --> 44:53.460
 for son to worry about.

44:53.460 --> 44:55.460
 We had this problem in Netscape right away.

44:55.460 --> 44:58.460
 So Netscape 2 came out after my 10 days

44:58.460 --> 45:00.460
 and after these, you know, follow along work

45:00.460 --> 45:03.460
 to embed JavaScript better in the browser

45:03.460 --> 45:05.460
 and to add garbage collection through reference counting.

45:05.460 --> 45:07.460
 Really, I call it reference counting.

45:07.460 --> 45:09.460
 And get it shipped.

45:09.460 --> 45:11.460
 We had a bunch of dot releases where we fixed security bugs

45:11.460 --> 45:13.460
 like maniacs.

45:13.460 --> 45:17.460
 But what is the thing you're, you know, when you sit back

45:17.460 --> 45:19.460
 on a porch and just look out into the sunset,

45:19.460 --> 45:21.460
 what are you most proud of from those 10 days?

45:21.460 --> 45:23.460
 I think the first class functions shines.

45:23.460 --> 45:25.460
 I think especially since Java didn't have it

45:25.460 --> 45:27.460
 and it was somewhat unusual.

45:27.460 --> 45:30.460
 The scheme made it in somehow at the end of the day.

45:30.460 --> 45:31.460
 In spirit.

45:31.460 --> 45:33.460
 I mean, people complain because scheme has, you know,

45:33.460 --> 45:34.460
 minimalism.

45:34.460 --> 45:36.460
 It has, you know, six or seven special forms.

45:36.460 --> 45:38.460
 It has hygienic macros.

45:38.460 --> 45:39.460
 It has call CC.

45:39.460 --> 45:44.460
 It has sort of a beautiful, complete set of forms

45:44.460 --> 45:48.460
 to make the Lambda Calculus pleasant to use in practice.

45:48.460 --> 45:53.460
 And JavaScript is, you know, kind of a multi paradigm

45:53.460 --> 45:55.460
 or shambolic.

45:55.460 --> 45:58.460
 Just in a small tangent, you mentioned Mark Andreessen.

45:58.460 --> 46:02.460
 It sounds like in Bill Joy, but staying on Mark,

46:02.460 --> 46:05.460
 it sounds like he had an impact on you

46:05.460 --> 46:08.460
 in that he sort of believed in what you were doing there.

46:08.460 --> 46:11.460
 Can you talk about, like, what role Mark had in your life?

46:11.460 --> 46:12.460
 Yeah.

46:12.460 --> 46:16.460
 We would meet at the Pencila Creamery in downtown Palo Alto.

46:16.460 --> 46:19.460
 And Mark was just fresh out of, you know, grad school

46:19.460 --> 46:20.460
 or whatever he was doing.

46:20.460 --> 46:24.460
 And he was a big dude and he got fitter later.

46:24.460 --> 46:25.460
 He had hair.

46:25.460 --> 46:28.460
 He would order giant milkshakes and burgers.

46:28.460 --> 46:30.460
 And we would meet there in brainstorm about what to do.

46:30.460 --> 46:33.460
 And it was very direct because we didn't have much time.

46:33.460 --> 46:35.460
 The sort of, we didn't talk about it.

46:35.460 --> 46:38.460
 The implication was Microsoft was coming after us.

46:38.460 --> 46:41.460
 Mark was saying things boldly, pre IPO,

46:41.460 --> 46:43.460
 like Netscape plus Java kills Windows, right?

46:43.460 --> 46:44.460
 It's ambitious.

46:44.460 --> 46:46.460
 Make a browser programmable.

46:46.460 --> 46:48.460
 It becomes the new runtime for programs.

46:48.460 --> 46:51.460
 It's the meta OS or it's the replacement OS.

46:51.460 --> 46:53.460
 But he still saw value in JavaScript.

46:53.460 --> 46:54.460
 Yes.

46:54.460 --> 46:57.460
 Even though he was saying that and Java was the big name,

46:57.460 --> 46:59.460
 hence the trademark license,

46:59.460 --> 47:01.460
 he saw JavaScript as important.

47:01.460 --> 47:03.460
 And he even thought, what if we got,

47:03.460 --> 47:05.460
 I told us another interviews, I can say,

47:05.460 --> 47:07.460
 he thought, what if we had my friend Kip Hickman,

47:07.460 --> 47:09.460
 who'd been at Netscape from the beginning

47:09.460 --> 47:12.460
 and who was a kernel hacker at SGI when I joined,

47:12.460 --> 47:15.460
 he'd started writing his own JVM before we consummated

47:15.460 --> 47:17.460
 the Sun deal and got our hands on their code.

47:17.460 --> 47:20.460
 And the Java compiler, Java C,

47:20.460 --> 47:22.460
 which Arthur Van Hoff had written, very nice code,

47:22.460 --> 47:24.460
 was all written in Java.

47:24.460 --> 47:26.460
 It was self hosted or so called bootstrap.

47:26.460 --> 47:29.460
 And so we could use that as soon as Kip's Java VM

47:29.460 --> 47:34.460
 would run the bytecode from the Sun JVM

47:34.460 --> 47:37.460
 running the self hosted compiler to emit the bytecode.

47:37.460 --> 47:39.460
 So once we could bootstrap into Kip's VM,

47:39.460 --> 47:41.460
 we wouldn't need Sun and Mark was like,

47:41.460 --> 47:45.460
 well, maybe we can just ditch Sun with Kip's Java VM

47:45.460 --> 47:47.460
 or if you're at JavaScript VM, we,

47:47.460 --> 47:48.460
 now we need graphics.

47:48.460 --> 47:51.460
 So Mark was thinking far ahead because he knew

47:51.460 --> 47:53.460
 you could do things with HTML and images,

47:53.460 --> 47:55.460
 but at some point you really want this.

47:55.460 --> 47:57.460
 Like 10 NEMA graphics or three dimensional.

47:57.460 --> 47:59.460
 Like even SGI had already started its downfall

47:59.460 --> 48:02.460
 because the first four to VLSI team there

48:02.460 --> 48:05.460
 had gone off to do 3DFX and all these other companies

48:05.460 --> 48:07.460
 that made the graphics card on your PC, right?

48:07.460 --> 48:09.460
 Doom was big and quake.

48:09.460 --> 48:10.460
 And so we were all playing quake.

48:10.460 --> 48:12.460
 I was old, so I was terrible.

48:12.460 --> 48:16.460
 But why not put that graphics capability on the web?

48:16.460 --> 48:18.460
 And in fact, it finally happened at Mozilla

48:18.460 --> 48:21.460
 with Firefox era with Vlad Vukicovic

48:21.460 --> 48:24.460
 taking OpenGLES and reflecting it as WebGL.

48:24.460 --> 48:27.460
 But OpenGLES is the mobile version of OpenGL,

48:27.460 --> 48:30.460
 which is a standard based on SGI GL.

48:30.460 --> 48:32.460
 So there's this whole lineage of graphics libraries

48:32.460 --> 48:35.460
 or really graphics languages for what became the GPU.

48:35.460 --> 48:37.460
 And Mark was thinking ahead.

48:37.460 --> 48:38.460
 It's like, we need graphics too.

48:38.460 --> 48:40.460
 And I thought, okay, I can try to get somebody I knew

48:40.460 --> 48:42.460
 at SGI, but he's a grad student at MIT.

48:42.460 --> 48:44.460
 He was studying at the Barbara Liskoff.

48:44.460 --> 48:45.460
 He laughed when he heard about this later.

48:45.460 --> 48:48.460
 Andrew Myers, he's at Cornell long time.

48:48.460 --> 48:49.460
 I think he's a full professor.

48:49.460 --> 48:51.460
 And Mark said, great, well, get him.

48:51.460 --> 48:53.460
 I'm not sure he's going to come.

48:53.460 --> 48:55.460
 We don't have any real money, you know, stock options.

48:55.460 --> 48:56.460
 We never did it.

48:56.460 --> 48:58.460
 And they did the Sun Deal.

48:58.460 --> 49:00.460
 So Kip Nobley put aside his own JVM

49:00.460 --> 49:02.460
 and we used the Sun JVM.

49:02.460 --> 49:04.460
 So that was an ambitious period.

49:04.460 --> 49:06.460
 And Mark was very generative because he was pushing hard.

49:06.460 --> 49:10.460
 He was ambitious and he wanted to have Netscape

49:10.460 --> 49:13.460
 possibly be in control of the ball.

49:13.460 --> 49:18.460
 Maybe you can speak to the dance of Netscape

49:18.460 --> 49:20.460
 versus Internet Explorer.

49:20.460 --> 49:25.460
 You've thrown some loving words towards Microsoft

49:25.460 --> 49:26.460
 throughout this conversation.

49:26.460 --> 49:28.460
 But that's a theme with, I mean, Steve Jobs

49:28.460 --> 49:30.460
 had a similar sort of commentary.

49:30.460 --> 49:34.460
 From a big sort of philosophical principle perspective,

49:34.460 --> 49:36.460
 can you comment on like the approach

49:36.460 --> 49:38.460
 that Microsoft has taken with Internet Explorer

49:38.460 --> 49:41.460
 from IE1 to Edge today?

49:41.460 --> 49:45.460
 Is there something that you see as valuable

49:45.460 --> 49:48.460
 that they're doing in the occasional copying

49:48.460 --> 49:53.460
 that kind of stuff or is it the world worse off

49:53.460 --> 49:55.460
 because Internet Explorer exists?

49:55.460 --> 49:57.460
 So I'm going to segment this into historical errors

49:57.460 --> 49:59.460
 because I think Microsoft is today with Satya.

49:59.460 --> 50:01.460
 It's quite a different company and what they're doing

50:01.460 --> 50:02.460
 with Edge is different.

50:02.460 --> 50:05.460
 But back then, Gates, you know, aggressive character,

50:05.460 --> 50:09.460
 not really original in my view, not an originator.

50:09.460 --> 50:12.460
 Steve Jobs famously said once, he doesn't have any taste

50:12.460 --> 50:14.460
 and I don't mean this in a small way.

50:14.460 --> 50:15.460
 There's no taste.

50:15.460 --> 50:16.460
 You can see this.

50:16.460 --> 50:19.460
 Apple at the time had beautiful typography

50:19.460 --> 50:22.460
 and ligatures and kerning and the fonts looked great.

50:22.460 --> 50:25.460
 And Windows had this sort of ugly system font

50:25.460 --> 50:27.460
 that was carefully aligned with Pixel

50:27.460 --> 50:28.460
 so it didn't get into anything.

50:28.460 --> 50:30.460
 Why is it, I'm sorry to keep interrupting,

50:30.460 --> 50:32.460
 but why was Internet Explorer winning

50:32.460 --> 50:34.460
 throughout the history of these competitions?

50:34.460 --> 50:35.460
 Distribution.

50:35.460 --> 50:36.460
 Distribution matters more than anything.

50:36.460 --> 50:39.460
 And this is why, you know, even now

50:39.460 --> 50:41.460
 we're seeing in the browser worse Edge doing better

50:41.460 --> 50:43.460
 because it's being foisted on people of Windows.

50:43.460 --> 50:45.460
 We have Windows 10 boxes at home.

50:45.460 --> 50:48.460
 Windows 7 boxes or laptops we keep running to

50:48.460 --> 50:50.460
 because we don't connect them to the Internet generally.

50:50.460 --> 50:55.460
 But once you have that operating system to hold,

50:55.460 --> 50:57.460
 you can force, you know, Edge.

50:57.460 --> 50:59.460
 And Apple did it with Safari too.

50:59.460 --> 51:01.460
 It's not unique to Microsoft.

51:01.460 --> 51:02.460
 That's sad.

51:02.460 --> 51:03.460
 Distribution matters.

51:03.460 --> 51:06.460
 And that's why I think IE was going to win.

51:06.460 --> 51:09.460
 That's why everybody at Netscape felt we're doomed.

51:09.460 --> 51:12.460
 This was something Michael Toy and Jamie Woodson were doomed.

51:12.460 --> 51:14.460
 But for a while there, we had a chance

51:14.460 --> 51:16.460
 and we innovated in Netscape too.

51:16.460 --> 51:19.460
 We did a big platform push, Java and JavaScript

51:19.460 --> 51:23.460
 and plugins, more plugins and, you know,

51:23.460 --> 51:26.460
 more HTML table features and really started making

51:26.460 --> 51:30.460
 a comparable stack out of what were pretty static web languages.

51:30.460 --> 51:33.460
 And even in the beta release of Netscape 2,

51:33.460 --> 51:35.460
 people were using JavaScript to build what you would call

51:35.460 --> 51:37.460
 single page applications like Gmail.

51:37.460 --> 51:40.460
 And they were using JavaScript locally to compute things

51:40.460 --> 51:43.460
 and to call the server on a hidden frame in the background.

51:43.460 --> 51:46.460
 So it was prefiguring a lot of what came later as AJAX

51:46.460 --> 51:48.460
 or Dynamic JavaScript, Dynamic HTML.

51:48.460 --> 51:49.460
 So people saw that.

51:49.460 --> 51:50.460
 Even when they saw it.

51:50.460 --> 51:52.460
 That's kind of, I don't know,

51:52.460 --> 51:54.460
 but from my perspective, that seems quite brilliant.

51:54.460 --> 51:56.460
 It seems like really innovative

51:56.460 --> 51:58.460
 that you would have code running in the browser.

51:58.460 --> 52:00.460
 It did impress me with something,

52:00.460 --> 52:03.460
 which I learned later about from Eric von Hippel of MIT,

52:03.460 --> 52:06.460
 which is user innovation networks, lead user effects,

52:06.460 --> 52:08.460
 that throwing out JavaScript,

52:08.460 --> 52:10.460
 even though we weren't doing open source,

52:10.460 --> 52:13.460
 we were doing beta releases early and permissively with Netscape.

52:13.460 --> 52:16.460
 Getting early developer feedback, absolutely critical.

52:16.460 --> 52:17.460
 I loved it.

52:17.460 --> 52:19.460
 I did some of that with SGI with some of the products I worked on,

52:19.460 --> 52:21.460
 but it really came to the fore in Netscape.

52:21.460 --> 52:23.460
 And that, you know, culminated in Mozilla,

52:23.460 --> 52:25.460
 where you're dealing with developers all the time

52:25.460 --> 52:27.460
 and early adopters, lead users.

52:27.460 --> 52:29.460
 But lead users helped improve JavaScript,

52:29.460 --> 52:32.460
 even in those last few betas where I could hardly change things.

52:32.460 --> 52:34.460
 I was under pretty rigid change control.

52:34.460 --> 52:36.460
 So we're talking about just a small collection of individuals

52:36.460 --> 52:38.460
 that are just like upfront.

52:38.460 --> 52:40.460
 My name is Bill Dorch. You can find his work in the Web Archive,

52:40.460 --> 52:42.460
 still from 1996.

52:42.460 --> 52:44.460
 It's a single page application.

52:44.460 --> 52:46.460
 It's an artist gallery of mountain art.

52:46.460 --> 52:47.460
 He uses JavaScript.

52:47.460 --> 52:49.460
 It doesn't quite work. He uses JavaScript locally.

52:49.460 --> 52:51.460
 He uses a local database.

52:51.460 --> 52:53.460
 What you would think of now is JSON,

52:53.460 --> 52:55.460
 but it's all pure JavaScript code,

52:55.460 --> 52:57.460
 a bunch of objects being constructed.

52:57.460 --> 52:59.460
 That's so cool.

52:59.460 --> 53:02.460
 So how is, if you can do sort of a big sweeping

53:02.460 --> 53:04.460
 progress of JavaScript,

53:04.460 --> 53:06.460
 how has JavaScript changed over the years,

53:06.460 --> 53:09.460
 nearly 10 days, with a quick addition of garbage collection

53:09.460 --> 53:11.460
 and fixes around security?

53:11.460 --> 53:14.460
 How is this evolution that now it's taken over the world?

53:14.460 --> 53:17.460
 It's been a bumpy ride because the standards body

53:17.460 --> 53:20.460
 got shut down after Microsoft, I think,

53:20.460 --> 53:22.460
 took over the web and then felt punished

53:22.460 --> 53:24.460
 by the USV Microsoft.

53:24.460 --> 53:25.460
 Antitrust case.

53:25.460 --> 53:27.460
 Can you speak to the standard body?

53:27.460 --> 53:30.460
 That was a fun ride, too, because Netscape had taken

53:30.460 --> 53:34.460
 the lead with the web and HTML innovations

53:34.460 --> 53:36.460
 like frames and frame sets, tables.

53:36.460 --> 53:39.460
 And the W3C was sort of off even then

53:39.460 --> 53:42.460
 in SGML land heading toward XML la la land.

53:42.460 --> 53:44.460
 I'm going to be a little harsh on it.

53:44.460 --> 53:45.460
 What's SGML? I'm sorry.

53:45.460 --> 53:48.460
 SGML was the precursor of markup language to HTML,

53:48.460 --> 53:50.460
 or it was sort of the more extensible

53:50.460 --> 53:53.460
 standard generalized markup language.

53:53.460 --> 53:56.460
 It was a pointy brackets, but it had

53:56.460 --> 53:58.460
 all sorts of elaborate syntax for doing

53:58.460 --> 54:00.460
 different semantics.

54:00.460 --> 54:03.460
 And this is why, I think, TBL and others

54:03.460 --> 54:05.460
 who wanted to do the semantic web then

54:05.460 --> 54:08.460
 took XML forward, but they had this,

54:08.460 --> 54:10.460
 or some of them anyway, had this strange idea

54:10.460 --> 54:12.460
 they could replace the web with XML

54:12.460 --> 54:15.460
 or that they would upgrade the web to be XML.

54:15.460 --> 54:16.460
 And it couldn't be done.

54:16.460 --> 54:18.460
 Worse is better had concrete meaning.

54:18.460 --> 54:21.460
 The web was very forgiving of HTML,

54:21.460 --> 54:24.460
 including sort of minor syntax errors

54:24.460 --> 54:26.460
 that could be error corrected.

54:26.460 --> 54:27.460
 Error correction isn't generally done

54:27.460 --> 54:29.460
 in programming languages because...

54:29.460 --> 54:31.460
 That's another amazing thing about HTML.

54:31.460 --> 54:34.460
 It's more like biology than programming.

54:34.460 --> 54:35.460
 Exactly.

54:35.460 --> 54:39.460
 And so, XML was, in its standard form,

54:39.460 --> 54:41.460
 super strict and could never have admitted

54:41.460 --> 54:44.460
 the kind of users who were committing these errors.

54:44.460 --> 54:46.460
 And the funniest part was Microsoft said,

54:46.460 --> 54:48.460
 hey, we're doing XML, but the way they put it

54:48.460 --> 54:50.460
 in Internet Explorer under the default media type,

54:50.460 --> 54:53.460
 put it through the HTML error corrector.

54:53.460 --> 54:54.460
 Oh, wow.

54:54.460 --> 54:56.460
 So they kind of bastardized it to make it

54:56.460 --> 54:58.460
 popular and usable and accessible.

54:58.460 --> 55:02.460
 And so, XML as a pure, you know,

55:02.460 --> 55:04.460
 thing was never going to take over.

55:04.460 --> 55:07.460
 And what W3C was kind of not fully functional

55:07.460 --> 55:09.460
 because Nescape wasn't cooperating with them.

55:09.460 --> 55:11.460
 We thought about where to take JavaScript

55:11.460 --> 55:14.460
 and we realized our standards guru Carl Cargo

55:14.460 --> 55:17.460
 realized there was a European standards body

55:17.460 --> 55:19.460
 that had already given Microsoft fits

55:19.460 --> 55:22.460
 by standardizing parts of the Windows 3.1 API,

55:22.460 --> 55:24.460
 which European governments insisted on.

55:24.460 --> 55:26.460
 They said, Microsoft, we can't use your operating system

55:26.460 --> 55:27.460
 without some standards.

55:27.460 --> 55:29.460
 And Microsoft said, you know, here's our docs.

55:29.460 --> 55:32.460
 And the government said, no, we need a European standard.

55:32.460 --> 55:35.460
 So this body called the European Computer Manufacturers Association,

55:35.460 --> 55:38.460
 ECMA, which eventually became global

55:38.460 --> 55:40.460
 and became a proper noun instead of an acronym.

55:40.460 --> 55:41.460
 Right.

55:41.460 --> 55:44.460
 It's just one capital E now with a lowercase CMA.

55:44.460 --> 55:45.460
 Right.

55:45.460 --> 55:47.460
 And as one of the early Microsoft guys I met

55:47.460 --> 55:50.460
 when we first convened a working group to talk

55:50.460 --> 55:52.460
 about JavaScript said, it sounds like a skin disease.

55:52.460 --> 55:55.460
 But it gave, I mean, maybe you'll speak to that,

55:55.460 --> 55:58.460
 but it gave the name to JavaScript of ECMA script.

55:58.460 --> 56:02.460
 That was the standard name because Java was a trademark of Suns.

56:02.460 --> 56:05.460
 They were so aggressive, they were sending cease and desist letters

56:05.460 --> 56:10.460
 to people whose middle European heritage meant their surname was Javonco

56:10.460 --> 56:12.460
 and they called their website Javonco.com

56:12.460 --> 56:15.460
 and Sun would send them a letter saying, you're using JAVA

56:15.460 --> 56:16.460
 at the start of your domain name.

56:16.460 --> 56:18.460
 You must cease and desist.

56:18.460 --> 56:21.460
 I love marketing more than anything else in this world.

56:21.460 --> 56:27.460
 So ECMA script and now is popularly named as ES plus version.

56:27.460 --> 56:29.460
 I would say people use JS more than anything.

56:29.460 --> 56:30.460
 People still say JavaScript.

56:30.460 --> 56:32.460
 JavaScript is in all the books.

56:32.460 --> 56:34.460
 So I mean, when you're referring to, it's usually JavaScript

56:34.460 --> 56:36.460
 and when you want to refer to a version of JavaScript,

56:36.460 --> 56:38.460
 you'll say ES6, ES5.

56:38.460 --> 56:39.460
 Yes.

56:39.460 --> 56:41.460
 Or now they've gone to years, which is kind of confusing

56:41.460 --> 56:50.460
 because it's an offset of 2009, ES6, ES 2016.

56:50.460 --> 56:52.460
 Yeah, it doesn't match the years perfectly.

56:52.460 --> 56:55.460
 Yeah, so what were the choices made

56:55.460 --> 56:57.460
 and how did JavaScript evolve here?

56:57.460 --> 57:00.460
 So we took this new standards body,

57:00.460 --> 57:05.460
 which we thought was sort of a proven record of standing up to Microsoft.

57:05.460 --> 57:07.460
 But Microsoft sent a lot of people.

57:07.460 --> 57:10.460
 They sent some people who were pretty good

57:10.460 --> 57:13.460
 and then when they realized that I was there and Netscape

57:13.460 --> 57:16.460
 was not going to just bend over and do whatever they wanted,

57:16.460 --> 57:17.460
 they sent somebody really good.

57:17.460 --> 57:20.460
 And this smart guy, he did a lot of the work on the first draft of the spec.

57:20.460 --> 57:23.460
 Sean Katzenberger, he's left Microsoft.

57:23.460 --> 57:25.460
 He even did what I sort of did.

57:25.460 --> 57:28.460
 He told his bosses, stop bugging me to do other things.

57:28.460 --> 57:30.460
 I'm focused on this because it took a lot of focused work

57:30.460 --> 57:32.460
 to create the first draft of the spec.

57:32.460 --> 57:35.460
 And I was still holding, I was spending almost all the plates.

57:35.460 --> 57:37.460
 I had like part time help in certain areas

57:37.460 --> 57:40.460
 and on the front end integrations, I had the front end guys.

57:40.460 --> 57:43.460
 But I couldn't take as much time as Sean was to write the draft spec,

57:43.460 --> 57:46.460
 but I had to participate because I was essentially helping write down

57:46.460 --> 57:47.460
 what the language did.

57:47.460 --> 57:49.460
 And in areas where we didn't like what it did

57:49.460 --> 57:54.460
 and Microsoft didn't agree, we sometimes got away with slight changes.

57:54.460 --> 57:55.460
 And that's the story of standards.

57:55.460 --> 57:57.460
 You have different implementations.

57:57.460 --> 58:00.460
 And depending on their market power, they interoperate

58:00.460 --> 58:02.460
 where you have agreement and where they don't,

58:02.460 --> 58:05.460
 the dominant one usually sets the de facto standard.

58:05.460 --> 58:08.460
 And then you should probably reflect that into the de jure standard.

58:08.460 --> 58:10.460
 And this happened with JavaScript.

58:10.460 --> 58:13.460
 Over time as Netscape went down and Microsoft went up,

58:13.460 --> 58:18.460
 we did the first edition of the standard codified in 1997 in France.

58:18.460 --> 58:21.460
 We had a trip to Nice, which was very memorable.

58:21.460 --> 58:24.460
 For any interesting reason or just because it's Nice?

58:24.460 --> 58:28.460
 And ECMAS European and IBM and others were, you know, there.

58:28.460 --> 58:31.460
 Mike Cowleshawn, IBM fellow was a Britisher.

58:31.460 --> 58:34.460
 And the guy who ran ECMAS at the time,

58:34.460 --> 58:38.460
 Jan van den Belb, was quite a raconteur and a very fun guy.

58:38.460 --> 58:41.460
 And he had us out for, you know, the great, you know,

58:41.460 --> 58:43.460
 the Fuitimer, the Bouillabaisse.

58:43.460 --> 58:46.460
 Was the standardization process beautiful or painful

58:46.460 --> 58:48.460
 that those early days you as a designer of the language?

58:48.460 --> 58:50.460
 It was painful because it was rushed.

58:50.460 --> 58:52.460
 Now Guy Steele was contributed by Sun.

58:52.460 --> 58:55.460
 So even more than Sean, you had this giant brain Guy Steele

58:55.460 --> 58:57.460
 helping bringing some of that scheme magic.

58:57.460 --> 58:59.460
 He even brought Richard Gabriel for fun.

58:59.460 --> 59:02.460
 And Richard wrote the fourth clause of the ECMAS standard,

59:02.460 --> 59:05.460
 which was kind of an intro to what JavaScript is all about.

59:05.460 --> 59:09.460
 So we had some really good people and we didn't fight too much.

59:09.460 --> 59:11.460
 There was a lot of tension where I was fixing bugs

59:11.460 --> 59:13.460
 and I was late to a meeting and Sean Katzenberger

59:13.460 --> 59:15.460
 or Microsoft was actually mad, like where is he?

59:15.460 --> 59:16.460
 We need him.

59:16.460 --> 59:20.460
 And when I got there, I saw that only he saw this sort of

59:20.460 --> 59:22.460
 off by one bug in somewhere in the spec.

59:22.460 --> 59:23.460
 And then I saw it too.

59:23.460 --> 59:25.460
 And I said, there's a fence post bug there.

59:25.460 --> 59:27.460
 And then we kind of locked eyes and we realized

59:27.460 --> 59:30.460
 we were on the same page and we kind of, he wasn't mad anymore.

59:30.460 --> 59:32.460
 What were the features that are being, like,

59:32.460 --> 59:34.460
 struggled over and debated and thought about?

59:34.460 --> 59:36.460
 It was mainly writing down what worked

59:36.460 --> 59:38.460
 and what we thought should work in the edge cases

59:38.460 --> 59:41.460
 that didn't interoperate or that seemed wrong.

59:41.460 --> 59:43.460
 But we were already laying the groundwork

59:43.460 --> 59:46.460
 for the future editions that I was already implementing.

59:46.460 --> 59:48.460
 I was still trying to lead the standard

59:48.460 --> 59:51.460
 by using the dominant market power to write the code

59:51.460 --> 59:52.460
 that actually shipped.

59:52.460 --> 59:54.460
 So the de facto standard would lead the deserter standard.

59:54.460 --> 59:57.460
 And I was putting in the missing, you know,

59:57.460 --> 1:00:00.460
 function forms that I didn't have time for in the 10 days.

1:00:00.460 --> 1:00:03.460
 So this is the engineering mindset versus the theoretician.

1:00:03.460 --> 1:00:05.460
 So you didn't want to create the perfect language,

1:00:05.460 --> 1:00:07.460
 but one that was the popular and shipped and all that kind of stuff.

1:00:07.460 --> 1:00:09.460
 And you could say there was, I was standing out of the shoulders of giants.

1:00:09.460 --> 1:00:12.460
 So there was a staged process where I had to hold back things

1:00:12.460 --> 1:00:15.460
 that were well designed by others in other languages

1:00:15.460 --> 1:00:18.460
 that I could imitate, but I couldn't do them all in the 10 days.

1:00:18.460 --> 1:00:22.460
 So they came in in 1996 and 97.

1:00:22.460 --> 1:00:24.460
 And they came into the third edition of the standard,

1:00:24.460 --> 1:00:27.460
 which was finalized in 1999.

1:00:27.460 --> 1:00:30.460
 But at that point, Netscape had been sold to AOL

1:00:30.460 --> 1:00:32.460
 and was, which was a decent exit considering

1:00:32.460 --> 1:00:36.460
 and, you know, had previously been mercilessly crushed.

1:00:36.460 --> 1:00:39.460
 Netscape was selling the browser along with server software

1:00:39.460 --> 1:00:42.460
 that it had acquired after its IPO.

1:00:42.460 --> 1:00:44.460
 And Microsoft was just underpricing it.

1:00:44.460 --> 1:00:47.460
 So there was no way to compete with that.

1:00:47.460 --> 1:00:49.460
 Microsoft was also, you know,

1:00:49.460 --> 1:00:52.460
 making Internet Explorer the default browser in Windows,

1:00:52.460 --> 1:00:55.460
 which is called tying in antitrust law.

1:00:55.460 --> 1:00:57.460
 And they were doing even more brutal things.

1:00:57.460 --> 1:00:59.460
 There was a famous investor.

1:00:59.460 --> 1:01:00.460
 He did very well on Google.

1:01:00.460 --> 1:01:01.460
 So he's a billionaire, Ram Shri Ram.

1:01:01.460 --> 1:01:04.460
 And he was sales guy or head of sales at Netscape.

1:01:04.460 --> 1:01:07.460
 And he got off the phone looking ashen faced

1:01:07.460 --> 1:01:09.460
 after a compact call and said,

1:01:09.460 --> 1:01:11.460
 Microsoft just told us they're going to pull

1:01:11.460 --> 1:01:13.460
 our Windows license if we ship Netscape

1:01:13.460 --> 1:01:14.460
 as the default browser.

1:01:14.460 --> 1:01:15.460
 Wow.

1:01:15.460 --> 1:01:17.460
 So there is some bullying going on.

1:01:17.460 --> 1:01:19.460
 It was totally material in the antitrust case.

1:01:19.460 --> 1:01:22.460
 But JavaScript escaped into the standard setting

1:01:22.460 --> 1:01:24.460
 where there was fairly good cooperation.

1:01:24.460 --> 1:01:26.460
 Microsoft had a really good guy on it

1:01:26.460 --> 1:01:28.460
 and, you know, Guy Steele was there for a time

1:01:28.460 --> 1:01:30.460
 and there was some good work.

1:01:30.460 --> 1:01:33.460
 But after the antitrust case and

1:01:33.460 --> 1:01:36.460
 Netscape kind of dissolving into AOL

1:01:36.460 --> 1:01:38.460
 and not really going anywhere quickly,

1:01:38.460 --> 1:01:41.460
 Mozilla took years to really bring up.

1:01:41.460 --> 1:01:42.460
 The standard froze.

1:01:42.460 --> 1:01:44.460
 And by 2003, even though they'd been sort of

1:01:44.460 --> 1:01:46.460
 noodling around with advanced versions,

1:01:46.460 --> 1:01:49.460
 JavaScript 2, I'd given the keys to the kingdom

1:01:49.460 --> 1:01:52.460
 to another MIT grad, Baltimore Horwatt.

1:01:52.460 --> 1:01:53.460
 Very big brain.

1:01:53.460 --> 1:01:54.460
 It's still at Google, I think.

1:01:54.460 --> 1:01:56.460
 He won the Putnam in 86.

1:01:56.460 --> 1:01:58.460
 So he's, you know, very mathematical.

1:01:58.460 --> 1:02:01.460
 He designed this successor language,

1:02:01.460 --> 1:02:06.460
 JavaScript 2, but it only showed up in mutated form

1:02:06.460 --> 1:02:09.460
 in Microsoft's ASP.NET server side.

1:02:09.460 --> 1:02:10.460
 And it didn't last there.

1:02:10.460 --> 1:02:12.460
 And it showed up in Flash.

1:02:12.460 --> 1:02:14.460
 And that's what became ActionScript 3.

1:02:14.460 --> 1:02:15.460
 ActionScript.

1:02:15.460 --> 1:02:16.460
 Interesting.

1:02:16.460 --> 1:02:18.460
 And then Flash was declined.

1:02:18.460 --> 1:02:22.460
 And so how did we arrive at ES6 where it's like,

1:02:22.460 --> 1:02:24.460
 there's so many, where everyone,

1:02:24.460 --> 1:02:26.460
 okay, there's this history of JavaScript

1:02:26.460 --> 1:02:29.460
 that people were just like, cool when you're like

1:02:29.460 --> 1:02:32.460
 having beers to talk crap about JavaScript.

1:02:32.460 --> 1:02:34.460
 Everyone loves to hate, like people who are married

1:02:34.460 --> 1:02:37.460
 say, ah, marriage sucks, is they just want to get,

1:02:37.460 --> 1:02:40.460
 let off some steam, even though everyone uses the language.

1:02:40.460 --> 1:02:45.460
 But ES6, it's become this like reputed,

1:02:45.460 --> 1:02:48.460
 like it fixed major pain points, I think.

1:02:48.460 --> 1:02:51.460
 It added things to the language and added something

1:02:51.460 --> 1:02:53.460
 that was already ES5 strict mode,

1:02:53.460 --> 1:02:56.460
 but made it implicit in class bodies and module bodies.

1:02:56.460 --> 1:03:00.460
 It was a big jump, but it accumulated some of the ES4 designs

1:03:00.460 --> 1:03:04.460
 that we'd done with Adobe for what we hoped would be

1:03:04.460 --> 1:03:06.460
 the fourth edition of ECMAScript,

1:03:06.460 --> 1:03:09.460
 that were supposed to fold in some of these old JavaScript

1:03:09.460 --> 1:03:12.460
 two ideas that had come into ActionScript 3.

1:03:12.460 --> 1:03:14.460
 So you look at the family tree and you see these forks

1:03:14.460 --> 1:03:19.460
 and the main ones are the ones that go into Adobe Flash,

1:03:19.460 --> 1:03:22.460
 acquired from Acromedia, and the one that went into the

1:03:22.460 --> 1:03:26.460
 server side of Microsoft's stack, which kind of died.

1:03:26.460 --> 1:03:28.460
 And then trying to bring them back into the standard

1:03:28.460 --> 1:03:31.460
 and not quite succeeding ES4 was mothballed,

1:03:31.460 --> 1:03:35.460
 but all the good parts that everyone liked made it into ES6.

1:03:35.460 --> 1:03:36.460
 And so that was a success.

1:03:36.460 --> 1:03:38.460
 And I said earlier, I had the wrong year.

1:03:38.460 --> 1:03:40.460
 I think it's 2015, so it's off by.

1:03:40.460 --> 1:03:41.460
 For ES6?

1:03:41.460 --> 1:03:43.460
 Yeah, it was done, finalized in 2015.

1:03:43.460 --> 1:03:45.460
 It took a little longer than we hoped,

1:03:45.460 --> 1:03:49.460
 but because ES5 was 2009 and that was a smaller increment

1:03:49.460 --> 1:03:51.460
 from ES3.

1:03:51.460 --> 1:03:52.460
 We skipped four again.

1:03:52.460 --> 1:03:53.460
 We mothballed.

1:03:53.460 --> 1:03:56.460
 And we had a split in the committee where some people said,

1:03:56.460 --> 1:03:57.460
 ES4 is too big.

1:03:57.460 --> 1:03:59.460
 We're going to work on incremental improvements,

1:03:59.460 --> 1:04:02.460
 no new syntax in particular, they promised.

1:04:02.460 --> 1:04:06.460
 Not quite true, but they added a bunch of interesting APIs.

1:04:06.460 --> 1:04:09.460
 Alan Weir Sprock, my coauthor of that Hubble paper.

1:04:09.460 --> 1:04:11.460
 And he was at Microsoft at the time.

1:04:11.460 --> 1:04:12.460
 I ended up hiring Mozilla.

1:04:12.460 --> 1:04:16.460
 He wanted to get to Mozilla and keep doing the sort of

1:04:16.460 --> 1:04:21.460
 editor job of the JavaScript standard ECMAScript.

1:04:21.460 --> 1:04:25.460
 And when we got ES6 done, it was a little late 2015,

1:04:25.460 --> 1:04:27.460
 and we switched to year numbers.

1:04:27.460 --> 1:04:28.460
 People still call it ES6.

1:04:28.460 --> 1:04:29.460
 I call it ES6.

1:04:29.460 --> 1:04:32.460
 But if you remember, off by nine plus 2000.

1:04:32.460 --> 1:04:35.460
 Yeah, ES6 is such a big job.

1:04:35.460 --> 1:04:38.460
 Like you said, there's a thread that connects all of it,

1:04:38.460 --> 1:04:42.460
 but ES6 is when it became this language that almost feels ready

1:04:42.460 --> 1:04:44.460
 to take over the world completely.

1:04:44.460 --> 1:04:46.460
 More programming in the large features,

1:04:46.460 --> 1:04:48.460
 more features you need for larger teams.

1:04:48.460 --> 1:04:49.460
 Software engineering.

1:04:49.460 --> 1:04:51.460
 Microsoft did something smart, too.

1:04:51.460 --> 1:04:54.460
 They, Anders and company, Luke Hoban,

1:04:54.460 --> 1:04:57.460
 who's left Microsoft, also did TypeScript.

1:04:57.460 --> 1:04:59.460
 And they realized something,

1:04:59.460 --> 1:05:01.460
 I think that Galat Braka's also popularized,

1:05:01.460 --> 1:05:04.460
 and he was involved in Darted.

1:05:04.460 --> 1:05:08.460
 Google, if you don't worry about soundness in the type system,

1:05:08.460 --> 1:05:11.460
 you don't try to enforce the type checks at runtime in particular,

1:05:11.460 --> 1:05:13.460
 just use it as sort of a warning system, a tool time.

1:05:13.460 --> 1:05:16.460
 You can still have a lot of value for developers,

1:05:16.460 --> 1:05:18.460
 especially in large projects.

1:05:18.460 --> 1:05:20.460
 So TypeScript has been a roaring success for Microsoft.

1:05:20.460 --> 1:05:23.460
 What do you think about TypeScript?

1:05:23.460 --> 1:05:26.460
 Is it adding confusion, or is it ultimately beneficial?

1:05:26.460 --> 1:05:27.460
 I think it's beneficial.

1:05:27.460 --> 1:05:30.460
 Now, it's technically a super set of JavaScript.

1:05:30.460 --> 1:05:32.460
 So of course I love it, right?

1:05:32.460 --> 1:05:35.460
 The shortest JavaScript program is still a TypeScript program.

1:05:35.460 --> 1:05:37.460
 Any JavaScript program is a TypeScript program,

1:05:37.460 --> 1:05:40.460
 which is brilliant because then you can start incrementally adding

1:05:40.460 --> 1:05:43.460
 type annotations, getting warnings, learning how to use them.

1:05:43.460 --> 1:05:47.460
 Microsoft had to kind of look around corners at the standard's body

1:05:47.460 --> 1:05:52.460
 and guess how their version of modules or decorators should work.

1:05:52.460 --> 1:05:55.460
 And the standard's body then may change things a bit.

1:05:55.460 --> 1:05:57.460
 So I think they're obligated with TypeScript,

1:05:57.460 --> 1:06:00.460
 either to carry their own version or to bring it back

1:06:00.460 --> 1:06:02.460
 with incompatible changes toward the standard over time.

1:06:02.460 --> 1:06:05.460
 And I think they've played generally fair there.

1:06:05.460 --> 1:06:07.460
 There's some sentiment that why don't they standardize TypeScript?

1:06:07.460 --> 1:06:09.460
 Well, they've been clear they don't want to.

1:06:09.460 --> 1:06:11.460
 They have a proprietary investment.

1:06:11.460 --> 1:06:12.460
 It's valuable.

1:06:12.460 --> 1:06:13.460
 They've controlled the ball.

1:06:13.460 --> 1:06:16.460
 And in some ways, you can say the same thing to any of the other

1:06:16.460 --> 1:06:18.460
 big companies in the standard's body.

1:06:18.460 --> 1:06:20.460
 Why doesn't Google standardize its stuff?

1:06:20.460 --> 1:06:23.460
 So you think it'll continue being like a kind of a dance partner

1:06:23.460 --> 1:06:25.460
 to JavaScript, to the base JavaScript?

1:06:25.460 --> 1:06:28.460
 There's a hope that at some point, if they keep reconverging it

1:06:28.460 --> 1:06:31.460
 and the standard doesn't break them and goes in a good direction,

1:06:31.460 --> 1:06:34.460
 we will get at least the annotations syntax

1:06:34.460 --> 1:06:36.460
 and some semantics around them.

1:06:36.460 --> 1:06:38.460
 Because when you're talking about type annotations,

1:06:38.460 --> 1:06:41.460
 they're generally on parameters and return values

1:06:41.460 --> 1:06:43.460
 and variable declarations.

1:06:43.460 --> 1:06:45.460
 They're cast operators.

1:06:45.460 --> 1:06:48.460
 You want that syntax to be reserved and you want it to work

1:06:48.460 --> 1:06:49.460
 the same in all engines.

1:06:49.460 --> 1:06:52.460
 And this is where ideas like Gilad's Plugable Type Systems

1:06:52.460 --> 1:06:55.460
 might be good, though then you could create the same problem

1:06:55.460 --> 1:06:58.460
 you have with Blisp and Scheme where there's a bunch of macro libraries

1:06:58.460 --> 1:07:01.460
 and they don't agree and you have conflicts between them.

1:07:01.460 --> 1:07:04.460
 But the Plugable Type Systems could be one way to standardize this.

1:07:04.460 --> 1:07:09.460
 What do you think about the giant ecosystem of frameworks in JavaScript?

1:07:09.460 --> 1:07:13.460
 It feels like, because I mean, this is a side effect

1:07:13.460 --> 1:07:15.460
 of how many people use JavaScript.

1:07:15.460 --> 1:07:21.460
 A lot of entrepreneurial spirit, like create their own JavaScript frameworks

1:07:21.460 --> 1:07:26.460
 and they're actually awesome in all different ways.

1:07:26.460 --> 1:07:32.460
 And this is an interesting question about almost like philosophically

1:07:32.460 --> 1:07:35.460
 about biological system and evolution and all that kind of stuff.

1:07:35.460 --> 1:07:39.460
 Do you see that as good or should some of them die out quicker?

1:07:39.460 --> 1:07:41.460
 I think maybe they should.

1:07:41.460 --> 1:07:44.460
 Now, jQuery was a very clever thing.

1:07:44.460 --> 1:07:47.460
 John Resick made this library that was sort of query and do

1:07:47.460 --> 1:07:50.460
 and blended sort of CSS selector syntax with JavaScript

1:07:50.460 --> 1:07:53.460
 sort of object graph or DOM querying and made it very easy

1:07:53.460 --> 1:07:56.460
 for people to do things almost like they were learning jQuery

1:07:56.460 --> 1:07:58.460
 as its own language, domain specific language.

1:07:58.460 --> 1:08:03.460
 And that I think reflected in part the difficulty of using

1:08:03.460 --> 1:08:06.460
 the document object model, these APIs that were originally designed

1:08:06.460 --> 1:08:08.460
 in the 90s for Java as well as JavaScript.

1:08:08.460 --> 1:08:11.460
 They're a very object oriented or even procedural.

1:08:11.460 --> 1:08:13.460
 They're very kind of verbose.

1:08:13.460 --> 1:08:15.460
 And it took like a constructor column,

1:08:15.460 --> 1:08:18.460
 three different, you know, hokey pokey dances to do something

1:08:18.460 --> 1:08:20.460
 whereas in jQuery, it's just one line, right?

1:08:20.460 --> 1:08:23.460
 So that fed back finally into the standards.

1:08:23.460 --> 1:08:25.460
 It didn't mean we standardized jQuery.

1:08:25.460 --> 1:08:27.460
 It wasn't quite that concise.

1:08:27.460 --> 1:08:29.460
 You find now with the modern standards

1:08:29.460 --> 1:08:34.460
 that we were working on in the HTML5 sort of effort

1:08:34.460 --> 1:08:36.460
 that things became simpler, the fetch API

1:08:36.460 --> 1:08:39.460
 and the query selector API, document query selector.

1:08:39.460 --> 1:08:42.460
 A lot of things can be done now in raw JavaScript

1:08:42.460 --> 1:08:46.460
 that you would make more concise and terse in jQuery,

1:08:46.460 --> 1:08:48.460
 but it's not bad. It's pretty good.

1:08:48.460 --> 1:08:51.460
 Whereas in the old DOM of 15 years ago, it was just too verbose.

1:08:51.460 --> 1:08:56.460
 So maybe the frameworks were born kind of because JavaScript

1:08:56.460 --> 1:08:58.460
 lacked some of the features of jQuery.

1:08:58.460 --> 1:09:02.460
 And so, like, now that JavaScript is swallowing

1:09:02.460 --> 1:09:04.460
 what jQuery was, then the frameworks will,

1:09:04.460 --> 1:09:07.460
 only the ones that truly add value will stick around

1:09:07.460 --> 1:09:09.460
 and the other ones will die out.

1:09:09.460 --> 1:09:11.460
 And that highlights also this division between the core language

1:09:11.460 --> 1:09:13.460
 JavaScript, which can show up in other places

1:09:13.460 --> 1:09:15.460
 like Node.js on the server side

1:09:15.460 --> 1:09:17.460
 and the browser specific APIs

1:09:17.460 --> 1:09:19.460
 or the document object model APIs,

1:09:19.460 --> 1:09:21.460
 which are even managed by the W3C,

1:09:21.460 --> 1:09:23.460
 the standards body that was off in XML,

1:09:23.460 --> 1:09:26.460
 and we were doing real JavaScript standards in ECMA.

1:09:26.460 --> 1:09:29.460
 And you have this division of labor,

1:09:29.460 --> 1:09:32.460
 division of responsibility and division of style

1:09:32.460 --> 1:09:36.460
 and sort of aesthetics and also speed.

1:09:36.460 --> 1:09:39.460
 So the document object model really stagnated

1:09:39.460 --> 1:09:43.460
 after Microsoft kind of deinvested in the web.

1:09:43.460 --> 1:09:45.460
 And Microsoft did something in their haste

1:09:45.460 --> 1:09:47.460
 in the spirit of Netscape, doing things quickly

1:09:47.460 --> 1:09:49.460
 and getting on first called DHTML

1:09:49.460 --> 1:09:51.460
 and some of their innovations that were like

1:09:51.460 --> 1:09:53.460
 an alternative document object model

1:09:53.460 --> 1:09:56.460
 didn't really get standardized until HTML5

1:09:56.460 --> 1:09:59.460
 when we pragmatists set up for at the time

1:09:59.460 --> 1:10:01.460
 Ian Hixon, he went to Google,

1:10:01.460 --> 1:10:03.460
 Apple and Mozilla said,

1:10:03.460 --> 1:10:06.460
 let's XML is not going to replace HTML.

1:10:06.460 --> 1:10:08.460
 HTML4 is too old.

1:10:08.460 --> 1:10:11.460
 Let's standardize HTML5 based on all this good stuff

1:10:11.460 --> 1:10:14.460
 including that DHTML variant, dynamic HTML5.

1:10:14.460 --> 1:10:17.460
 HTML5, it feels like to me, maybe you can correct me

1:10:17.460 --> 1:10:20.460
 like a beautiful piece of design work.

1:10:20.460 --> 1:10:23.460
 It's not often with web stuff,

1:10:23.460 --> 1:10:26.460
 you have this breath of just like,

1:10:26.460 --> 1:10:30.460
 oh, whoever did this, they just feels good.

1:10:30.460 --> 1:10:33.460
 What are your thoughts about HTML?

1:10:33.460 --> 1:10:35.460
 Am I being too romantic?

1:10:35.460 --> 1:10:36.460
 A little bit.

1:10:36.460 --> 1:10:39.460
 Are there fundamental flaws to it that I'm just not aware of?

1:10:39.460 --> 1:10:42.460
 My old friend Hix, he did a great job.

1:10:42.460 --> 1:10:44.460
 He was another renegade physics student

1:10:44.460 --> 1:10:47.460
 and he was basically a QA guy at Opera,

1:10:47.460 --> 1:10:51.460
 but he obviously trained physics student

1:10:51.460 --> 1:10:54.460
 and someone who could write a Britisher.

1:10:54.460 --> 1:10:57.460
 He developed test suites

1:10:57.460 --> 1:11:00.460
 and he started thinking about them more axiomatically.

1:11:00.460 --> 1:11:02.460
 Now, this can be good because you can sort of

1:11:02.460 --> 1:11:05.460
 systematize in a way that makes a better HTML

1:11:05.460 --> 1:11:07.460
 or you can get caught in the pragmatism of saying,

1:11:07.460 --> 1:11:09.460
 well, we have to handle all these edge cases

1:11:09.460 --> 1:11:12.460
 so we're just going to have sort of a test matrix.

1:11:12.460 --> 1:11:14.460
 And if the matrix is large, it will not be beautiful

1:11:14.460 --> 1:11:15.460
 by many people's likes.

1:11:15.460 --> 1:11:18.460
 Everyone likes to minimize along their preferred dimensions,

1:11:18.460 --> 1:11:21.460
 the seven special forms in scheme or whatever.

1:11:21.460 --> 1:11:26.460
 But reality is HTML needs to be big.

1:11:26.460 --> 1:11:27.460
 It's kind of shambolic.

1:11:27.460 --> 1:11:29.460
 It's a creative, multi paradigm.

1:11:29.460 --> 1:11:33.460
 And Hix, he did a good job, I would say, with a bunch of it.

1:11:33.460 --> 1:11:36.460
 Other people came in, in the spirit of Ian Hix,

1:11:36.460 --> 1:11:38.460
 and to do HTML5 work.

1:11:38.460 --> 1:11:40.460
 And they've carried on that effort.

1:11:40.460 --> 1:11:42.460
 So it's a mix of pragmatism,

1:11:42.460 --> 1:11:45.460
 de facto standards from the past being sort of

1:11:45.460 --> 1:11:47.460
 combined or written down for the first time

1:11:47.460 --> 1:11:50.460
 and then rethought in a way that has a simpler syntax,

1:11:50.460 --> 1:11:53.460
 like the Fetch API instead of XML HTTP request.

1:11:53.460 --> 1:11:55.460
 This video, too, as well.

1:11:55.460 --> 1:11:57.460
 It ultimately, it feels like maybe you can correct me.

1:11:57.460 --> 1:12:00.460
 It feels like it was the nail in the coffin of Flash.

1:12:00.460 --> 1:12:03.460
 Steve Jobs saying no Flash on the iPhone, in my opinion,

1:12:03.460 --> 1:12:05.460
 was the actual stake to the heart.

1:12:05.460 --> 1:12:08.460
 But, well, I'm not sure what trope you want to use.

1:12:08.460 --> 1:12:11.460
 Flash was a zombie until just this year, right?

1:12:11.460 --> 1:12:12.460
 Or last year.

1:12:12.460 --> 1:12:15.460
 I think last year was the end of Flash and main browsers.

1:12:15.460 --> 1:12:17.460
 But Jobs really did the death blow.

1:12:17.460 --> 1:12:20.460
 And yet, you're right.

1:12:20.460 --> 1:12:22.460
 We had to make HTML5 competitive.

1:12:22.460 --> 1:12:26.460
 I still don't think we got that beautiful timeline animation.

1:12:26.460 --> 1:12:27.460
 The timeline things.

1:12:27.460 --> 1:12:28.460
 You like the time.

1:12:28.460 --> 1:12:30.460
 I mean, me, from, you know, I used to animate

1:12:30.460 --> 1:12:32.460
 all kinds of stuff inside Flash.

1:12:32.460 --> 1:12:34.460
 Plus, there's a programming element.

1:12:34.460 --> 1:12:37.460
 It was a little bit, I don't know if you commented on that,

1:12:37.460 --> 1:12:40.460
 but to me, it was a little bit like go to statement,

1:12:40.460 --> 1:12:44.460
 like in a sense that there's a little bit too chaotic.

1:12:44.460 --> 1:12:47.460
 Like it didn't, that OCD part of me as a programmer

1:12:47.460 --> 1:12:49.460
 wasn't satisfied by Flash.

1:12:49.460 --> 1:12:52.460
 It feels like there's bugs that were introduced

1:12:52.460 --> 1:12:55.460
 through the animation process that I couldn't debug easily.

1:12:55.460 --> 1:12:56.460
 Yes, I heard that too.

1:12:56.460 --> 1:12:57.460
 I didn't use it.

1:12:57.460 --> 1:12:59.460
 So I'm doing the grasses greener thing here.

1:12:59.460 --> 1:13:01.460
 The thing I liked about the animation model

1:13:01.460 --> 1:13:03.460
 was that it was this immutable function of time.

1:13:03.460 --> 1:13:05.460
 So you could time warp and you could,

1:13:05.460 --> 1:13:07.460
 if you dodged these bugs or worked carefully,

1:13:07.460 --> 1:13:09.460
 you could really make it sing in ways

1:13:09.460 --> 1:13:11.460
 that I think still a little challenging

1:13:11.460 --> 1:13:14.460
 with the web animation standards,

1:13:14.460 --> 1:13:17.460
 or just using Rock Canvas and WebGL.

1:13:17.460 --> 1:13:20.460
 But there's so many tools now that maybe it doesn't matter.

1:13:20.460 --> 1:13:23.460
 And yet we had to, you know, do video.

1:13:23.460 --> 1:13:27.460
 We had to do WebGL and then evolve it.

1:13:27.460 --> 1:13:29.460
 We had to do web audio.

1:13:29.460 --> 1:13:33.460
 But once we did all these things that helped Flash die

1:13:33.460 --> 1:13:38.460
 thanks to Steve Gobs, we had something that

1:13:38.460 --> 1:13:39.460
 people didn't realize.

1:13:39.460 --> 1:13:41.460
 We had that vision that Mark and Jason had,

1:13:41.460 --> 1:13:46.460
 this graphics capable to the metal portable runtime.

1:13:46.460 --> 1:13:49.460
 And we at Mozilla realized this,

1:13:49.460 --> 1:13:53.460
 and we saw JavaScript was something that you could compile to.

1:13:53.460 --> 1:13:55.460
 Adobe had somebody in the Adobe Labs doing this too.

1:13:55.460 --> 1:13:57.460
 He had a project called Alchemy.

1:13:57.460 --> 1:13:59.460
 We had somebody who's now at Google,

1:13:59.460 --> 1:14:03.460
 Alon Zakai, who did his own LLVN based compiler

1:14:03.460 --> 1:14:06.460
 that would take C or C++ and it would emit JavaScript.

1:14:06.460 --> 1:14:09.460
 I think this is crazy going from this sort of machine types,

1:14:09.460 --> 1:14:12.460
 low level, you know, controlled memory allocation language

1:14:12.460 --> 1:14:15.460
 to this garbage collected, dynamically typed,

1:14:15.460 --> 1:14:17.460
 high level, higher level language.

1:14:17.460 --> 1:14:22.460
 But Alon sort of just phenomenologically carved nature of the joint

1:14:22.460 --> 1:14:25.460
 and found the forms that were fast in JavaScript.

1:14:25.460 --> 1:14:28.460
 And then with Dave Herman, who I'd recruited from

1:14:28.460 --> 1:14:31.460
 Northeastern University, who was a type theorist,

1:14:31.460 --> 1:14:33.460
 and Luke Wagner, who's still at Mozilla,

1:14:33.460 --> 1:14:36.460
 who was the compiler guy and the JIT guy,

1:14:36.460 --> 1:14:39.460
 they figured out how to codify what Alon had done

1:14:39.460 --> 1:14:43.460
 into a typed subset of JavaScript called Asm.js.

1:14:43.460 --> 1:14:45.460
 And this is a strange thing to think about

1:14:45.460 --> 1:14:47.460
 because it doesn't have new syntax.

1:14:47.460 --> 1:14:51.460
 The types are casts that occur in

1:14:51.460 --> 1:14:53.460
 dominator positions in the control flow graph.

1:14:53.460 --> 1:14:56.460
 So it's like a hack on JavaScript and it's a subset.

1:14:56.460 --> 1:14:58.460
 It uses those bitwise operators that I talked about

1:14:58.460 --> 1:15:02.460
 copying from Java to basically cast

1:15:02.460 --> 1:15:05.460
 numeric types, which are double precision flowing point,

1:15:05.460 --> 1:15:06.460
 into integers.

1:15:06.460 --> 1:15:10.460
 And so inside JavaScript, in the kernel semantics,

1:15:10.460 --> 1:15:11.460
 are integers.

1:15:11.460 --> 1:15:13.460
 And if you use these operators, if a compiler

1:15:13.460 --> 1:15:16.460
 emits them in the right places, you can then treat them

1:15:16.460 --> 1:15:19.460
 as typed values, typed memory locations.

1:15:19.460 --> 1:15:21.460
 And you can type check your program.

1:15:21.460 --> 1:15:24.460
 You can not only type check it, you can compile it.

1:15:24.460 --> 1:15:26.460
 And this is all in sort of linear time.

1:15:26.460 --> 1:15:30.460
 Oh, and you can compile it to have deterministic performance.

1:15:30.460 --> 1:15:32.460
 It doesn't touch the garbage collector.

1:15:32.460 --> 1:15:35.460
 It calls a bunch of functions that come from the C functions

1:15:35.460 --> 1:15:37.460
 or C++ code that you're compiling.

1:15:37.460 --> 1:15:41.460
 And you can make the Epic Unreal Engine go

1:15:41.460 --> 1:15:43.460
 in 30 frames a second.

1:15:43.460 --> 1:15:46.460
 And when we did this in 2013 in the fall,

1:15:46.460 --> 1:15:49.460
 Tim Sweeney, I met, didn't think it could be done quickly.

1:15:49.460 --> 1:15:51.460
 He thought it would take years.

1:15:51.460 --> 1:15:55.460
 And the team went to Raleigh to Epic and in four days

1:15:55.460 --> 1:15:59.460
 they had Unreal Engine ported by pressing a compile button.

1:15:59.460 --> 1:16:02.460
 But they had to have WebGL, which came from OpenGL.

1:16:02.460 --> 1:16:05.460
 Yes, it came from OpenGL, which came from Silicon GraphicsGL.

1:16:05.460 --> 1:16:09.460
 They had to have WebAudio so they could map OpenAL, which

1:16:09.460 --> 1:16:11.460
 was another audio library standard, to WebAudio, which

1:16:11.460 --> 1:16:14.460
 was kind of a Chrome idiosyncratic thing.

1:16:14.460 --> 1:16:16.460
 But they could make it work.

1:16:16.460 --> 1:16:20.460
 And they had to have Asmjs for fast C++ to JavaScript.

1:16:20.460 --> 1:16:24.460
 And if you didn't have that fast compiler step,

1:16:24.460 --> 1:16:27.460
 the JavaScript you'd write by hand trying to do

1:16:27.460 --> 1:16:29.460
 an Unreal game would be too big and too slow.

1:16:29.460 --> 1:16:31.460
 It would touch the garbage collector.

1:16:31.460 --> 1:16:34.460
 It would not keep up with 30 frames a second on the hardware,

1:16:34.460 --> 1:16:35.460
 2013 hardware.

1:16:35.460 --> 1:16:39.460
 So we demoed that at, this must have been fall 2012

1:16:39.460 --> 1:16:40.460
 now that I think about it.

1:16:40.460 --> 1:16:44.460
 Because we demoed it at GDC Game Developer Conference 2013.

1:16:44.460 --> 1:16:45.460
 And people were stunned.

1:16:45.460 --> 1:16:48.460
 It's like Unreal Engine, Unreal Tournament running in my browser

1:16:48.460 --> 1:16:48.960
 window.

1:16:48.960 --> 1:16:52.460
 No plug in, no flash, no Java, no.

1:16:52.460 --> 1:16:55.460
 So where does the early days of, because JavaScript now

1:16:55.460 --> 1:17:01.460
 is able to run basically on par with a lot of the C++?

1:17:01.460 --> 1:17:01.960
 Yeah.

1:17:01.960 --> 1:17:04.460
 And even before then, you had the fast JavaScript VMs.

1:17:04.460 --> 1:17:07.460
 In 2008, when Chrome came out, just before it came out,

1:17:07.460 --> 1:17:11.460
 Mozilla, my friend Andreas Gallo and I, and others

1:17:11.460 --> 1:17:14.460
 hacked out Trace Monkey, our trace based JIT.

1:17:14.460 --> 1:17:18.460
 The Squirrel Fish Extreme team at Apple did their JIT.

1:17:18.460 --> 1:17:20.960
 And we were all competing on these crazy performance

1:17:20.960 --> 1:17:21.460
 benchmarks.

1:17:21.460 --> 1:17:23.460
 It was a little bit too much tuning to the benchmark.

1:17:23.460 --> 1:17:25.460
 But JavaScript started getting fast.

1:17:25.460 --> 1:17:26.460
 And developers started noticing it.

1:17:26.460 --> 1:17:29.460
 But it was still kind of its own high level language

1:17:29.460 --> 1:17:30.460
 with garbage collection.

1:17:30.460 --> 1:17:33.460
 The Asm.js step helped us go further.

1:17:33.460 --> 1:17:37.460
 Because until we really proved the concept, people were still

1:17:37.460 --> 1:17:39.460
 saying, well, JavaScript's OK.

1:17:39.460 --> 1:17:41.460
 It's getting faster thanks to V8.

1:17:41.460 --> 1:17:43.460
 Everybody gave Google credit, especially Google.

1:17:43.460 --> 1:17:44.460
 But we need something to kill flash.

1:17:44.460 --> 1:17:47.460
 Let's use the portable native client code that Google

1:17:47.460 --> 1:17:51.460
 had acquired, native client, which is a separate lineage

1:17:51.460 --> 1:17:54.460
 that we're taking basically C code, compiling it into a

1:17:54.460 --> 1:17:57.460
 software fault isolated container or some sort of using

1:17:57.460 --> 1:17:59.460
 some kind of virtualization technique.

1:17:59.460 --> 1:18:02.460
 And maybe it can even be in process and still be memory

1:18:02.460 --> 1:18:02.460
 save.

1:18:02.460 --> 1:18:03.460
 That would be awesome.

1:18:03.460 --> 1:18:05.460
 But they ended up using process isolation too.

1:18:05.460 --> 1:18:06.460
 And that kind of weakened it.

1:18:06.460 --> 1:18:09.460
 And in the end, it was like, portable native client, OK,

1:18:09.460 --> 1:18:10.460
 meet the new boss.

1:18:10.460 --> 1:18:11.460
 Name is the old boss.

1:18:11.460 --> 1:18:13.460
 This is the Google Flash, right?

1:18:13.460 --> 1:18:17.460
 But when we did Asm.js and we showed Unreal Engine working,

1:18:17.460 --> 1:18:19.460
 I think it was only a matter of time before Google threw

1:18:19.460 --> 1:18:20.460
 in the towel.

1:18:20.460 --> 1:18:23.460
 Everybody agreed in the spring of 2015, we're going to take

1:18:23.460 --> 1:18:27.460
 what was proven by Asm.js and make a new syntax, a binary

1:18:27.460 --> 1:18:30.460
 syntax that's efficient, that loads into the same JavaScript

1:18:30.460 --> 1:18:32.460
 VM that JavaScript loads into.

1:18:32.460 --> 1:18:35.460
 So there'll be two source languages, one VM, very important,

1:18:35.460 --> 1:18:38.460
 one garbage collector, one memory manager, one set of

1:18:38.460 --> 1:18:40.460
 compiler stages.

1:18:40.460 --> 1:18:42.460
 And that's called WebAssembly.

1:18:42.460 --> 1:18:44.460
 And that's the successor to Asm.js.

1:18:44.460 --> 1:18:47.460
 And it's important that it have binary syntax because at the

1:18:47.460 --> 1:18:49.460
 end of the day, especially on mobile, if you're downloading

1:18:49.460 --> 1:18:51.460
 JavaScript, even if you're using LZ compression on the

1:18:51.460 --> 1:18:52.460
 wire, that's cool.

1:18:52.460 --> 1:18:54.460
 But you've got to blow it out into memory and then parse the

1:18:54.460 --> 1:18:58.460
 silly eight character function keyword that I picked when I

1:18:58.460 --> 1:19:00.460
 could have used something shorter.

1:19:00.460 --> 1:19:04.460
 I picked it because of AUK, the Unix tool.

1:19:04.460 --> 1:19:09.460
 So anyway, I want to, but I'm not following the AUK thread.

1:19:09.460 --> 1:19:13.460
 I said surprising to you that how damn fast JavaScript is

1:19:13.460 --> 1:19:14.460
 these days.

1:19:14.460 --> 1:19:16.460
 I mean, you've been through the whole journey.

1:19:16.460 --> 1:19:20.460
 I know every step of the way, but is it like, I mean, it's how

1:19:20.460 --> 1:19:21.460
 it feels incredible.

1:19:21.460 --> 1:19:22.460
 It does.

1:19:22.460 --> 1:19:24.460
 But I knew, so the funny thing is computer science is this big

1:19:24.460 --> 1:19:26.460
 karmic wheel, right?

1:19:26.460 --> 1:19:28.460
 Wheel of Fortuna.

1:19:28.460 --> 1:19:34.460
 And in the, it's not the 97, I was loaned by Netscape to do

1:19:34.460 --> 1:19:38.460
 due diligence for Sun in their acquisition of Anamorphic,

1:19:38.460 --> 1:19:44.460
 which was David Unger and friends, people, Craig, I'm

1:19:44.460 --> 1:19:46.460
 forgetting his name, he went to Microsoft.

1:19:46.460 --> 1:19:50.460
 These Stanford language buffs who had taken small talk and

1:19:50.460 --> 1:19:54.460
 then David created itself as a simpler sort of small talk

1:19:54.460 --> 1:19:59.460
 language and made really fast just in time compiling VMs for

1:19:59.460 --> 1:20:00.460
 them.

1:20:00.460 --> 1:20:04.460
 And they, you know, well ahead of Java hotspot or JavaScript V8

1:20:04.460 --> 1:20:08.460
 or any of these modern VMs, figure out how to make dynamic

1:20:08.460 --> 1:20:12.460
 code fast because small talk is dynamic language, right?

1:20:12.460 --> 1:20:15.460
 It has classes that has, I think, more lockdown declarative

1:20:15.460 --> 1:20:18.460
 syntax than JavaScript, but it's fundamentally dynamic.

1:20:18.460 --> 1:20:20.460
 You don't declare the types.

1:20:20.460 --> 1:20:23.460
 But you could infer the types as the program runs and you

1:20:23.460 --> 1:20:26.460
 start to form these ideas about what types are actually

1:20:26.460 --> 1:20:30.460
 flowing through key operations and you form little so called

1:20:30.460 --> 1:20:34.460
 polymorphic inline caches that are optimized machine code.

1:20:34.460 --> 1:20:38.460
 The cache is the machine code that assumes it does a quick

1:20:38.460 --> 1:20:40.460
 check to make sure the type is right.

1:20:40.460 --> 1:20:42.460
 If it's not right, it bails to the interpreter.

1:20:42.460 --> 1:20:44.460
 If it is right, you go pretty fast.

1:20:44.460 --> 1:20:47.460
 And that short test is a predicted branch.

1:20:47.460 --> 1:20:49.460
 So things are pretty quick.

1:20:49.460 --> 1:20:52.460
 All that amazing stuff I knew about in the 90s and I didn't

1:20:52.460 --> 1:20:56.460
 have time to do it and anamorphic got bought by son and

1:20:56.460 --> 1:20:59.460
 they did hotspot and you needed that even in Java because at

1:20:59.460 --> 1:21:04.460
 scale Java has some dynamic aspects due to invoke interface.

1:21:04.460 --> 1:21:07.460
 You can have basically collections of Java code where you

1:21:07.460 --> 1:21:12.460
 don't know at the time each module or package is compiled

1:21:12.460 --> 1:21:15.460
 exactly what's being called, what subclass or what

1:21:15.460 --> 1:21:17.460
 implementation of an interface is being called.

1:21:17.460 --> 1:21:19.460
 And so you want to optimize using the sort of dynamic

1:21:19.460 --> 1:21:21.460
 polymorphic caching there too.

1:21:21.460 --> 1:21:24.460
 And they did that and hotspot is an amazing beast.

1:21:24.460 --> 1:21:27.460
 I've met like 13 people who all claim they created it.

1:21:27.460 --> 1:21:31.460
 I think one of them may deserve credit more than others.

1:21:31.460 --> 1:21:34.460
 But I didn't get to do that in JavaScript.

1:21:34.460 --> 1:21:38.460
 And when we knew that Google was going to do their own browser

1:21:38.460 --> 1:21:41.460
 which we knew it was around 2006.

1:21:41.460 --> 1:21:44.460
 I also met the team that did v8.

1:21:44.460 --> 1:21:47.460
 And it turns out it was Lars Bach who was one of the young

1:21:47.460 --> 1:21:50.460
 engineers from anamorphic got acquired by son.

1:21:50.460 --> 1:21:53.460
 And so Lars is like the one of the world's expert on these

1:21:53.460 --> 1:21:54.460
 kinds of virtual machines.

1:21:54.460 --> 1:21:56.460
 And he picked my brains up JavaScript.

1:21:56.460 --> 1:21:59.460
 I could tell he didn't like it at the time but he had to do it.

1:21:59.460 --> 1:22:01.460
 And really interesting.

1:22:01.460 --> 1:22:04.460
 Yeah, 2006 lunch at Google's campus.

1:22:04.460 --> 1:22:07.460
 And then I had another friend who was Deverell at Chrome and he

1:22:07.460 --> 1:22:08.460
 said, yeah, we don't know what they're doing.

1:22:08.460 --> 1:22:11.460
 This is getting 2007 to fall, getting toward 2008.

1:22:11.460 --> 1:22:13.460
 We're trying to get Chrome out and we don't know what's going

1:22:13.460 --> 1:22:14.460
 with the v8 team.

1:22:14.460 --> 1:22:17.460
 They're often all who's Denmark, you know, rewriting their engine

1:22:17.460 --> 1:22:19.460
 four times, which is good.

1:22:19.460 --> 1:22:21.460
 That's the right way to do this kind of development.

1:22:21.460 --> 1:22:23.460
 You know, they were learning JavaScript including all its

1:22:23.460 --> 1:22:26.460
 quirks which they came to hate the fire of a thousand sons,

1:22:26.460 --> 1:22:29.460
 which is one of the reasons that Lars and company did dart

1:22:29.460 --> 1:22:31.460
 their own language.

1:22:31.460 --> 1:22:33.460
 But they also made the language fast.

1:22:33.460 --> 1:22:35.460
 And meanwhile we knew this was happening.

1:22:35.460 --> 1:22:39.460
 So we got our act together with Trace Monkey, our tracing jet

1:22:39.460 --> 1:22:41.460
 at Mozilla and Apple I think was also aware.

1:22:41.460 --> 1:22:43.460
 And so they were doing their own jet.

1:22:43.460 --> 1:22:46.460
 So the era of jitted fast JavaScript in 2008 had this

1:22:46.460 --> 1:22:50.460
 prehistory going back to small talk itself and anamorphic.

1:22:50.460 --> 1:22:53.460
 And again, the lineage is interesting because you had Lars

1:22:53.460 --> 1:22:55.460
 and anamorphic and then he ends up at Google.

1:22:55.460 --> 1:22:56.460
 Yeah.

1:22:56.460 --> 1:23:00.460
 And today we have an incredibly fast language that like you

1:23:00.460 --> 1:23:04.460
 said, still, you know, without hate, you can't have love.

1:23:04.460 --> 1:23:10.460
 So I think there's both love and hate for this dance, this rich

1:23:10.460 --> 1:23:12.460
 complex dance of JavaScript throughout its history.

1:23:12.460 --> 1:23:14.460
 There's a dialectic for sure.

1:23:14.460 --> 1:23:19.460
 Today JavaScript is the most popular language in the world.

1:23:19.460 --> 1:23:22.460
 Why by many measures?

1:23:22.460 --> 1:23:24.460
 Why do you think that is?

1:23:24.460 --> 1:23:28.460
 Is there some fundamental ideas that you've already

1:23:28.460 --> 1:23:31.460
 spoke a little bit broader that you think is the most

1:23:31.460 --> 1:23:32.460
 popular language in the world?

1:23:32.460 --> 1:23:35.460
 So I think I did, you know, by doing first class functions

1:23:35.460 --> 1:23:40.460
 and taking the good parts of the C operator hierarchy and

1:23:40.460 --> 1:23:43.460
 just keeping things simple enough.

1:23:43.460 --> 1:23:46.460
 Maybe it could have been simpler, but I had to make it

1:23:46.460 --> 1:23:48.460
 look like Java and interoperate with Java.

1:23:48.460 --> 1:23:52.460
 That there was, you know, inherent goodness,

1:23:52.460 --> 1:23:55.460
 you know, Aristotelian quality there and people perceive

1:23:55.460 --> 1:23:58.460
 that even through all the quirks and warts and then over time

1:23:58.460 --> 1:24:00.460
 working on it with the standards body, working on it,

1:24:00.460 --> 1:24:04.460
 not only as a core language, but in the context of HTML5

1:24:04.460 --> 1:24:07.460
 and making the browser better, listening to developers,

1:24:07.460 --> 1:24:10.460
 thinking about this is something that Nick Thompson

1:24:10.460 --> 1:24:12.460
 wrote nicely about on the hacker news.

1:24:12.460 --> 1:24:13.460
 I was very flattered.

1:24:13.460 --> 1:24:15.460
 He said Java was this thing where the experts were writing

1:24:15.460 --> 1:24:17.460
 the code and it was compiled and you had to declare all

1:24:17.460 --> 1:24:20.460
 your types and some didn't really give a damn about,

1:24:20.460 --> 1:24:22.460
 you know, the average programmer who wanted to build

1:24:22.460 --> 1:24:24.460
 real web apps, dynamic things.

1:24:24.460 --> 1:24:27.460
 And I was in there meanwhile doing, you know,

1:24:27.460 --> 1:24:30.460
 a bunch of people's jobs, making JavaScript survive

1:24:30.460 --> 1:24:33.460
 those early years when it was kind of touch and go, right?

1:24:33.460 --> 1:24:35.460
 JavaScript was considered Mickey Mouse language.

1:24:35.460 --> 1:24:38.460
 It was for annoyances like the scrolling text at the bottom

1:24:38.460 --> 1:24:40.460
 of the browser in the status bar.

1:24:40.460 --> 1:24:42.460
 But I kept listening to developers working with them

1:24:42.460 --> 1:24:46.460
 and trying to make it run in that single threaded event loop

1:24:46.460 --> 1:24:47.460
 in a useful way.

1:24:47.460 --> 1:24:50.460
 And I think that forged something that people have come to love.

1:24:50.460 --> 1:24:53.460
 Now, you don't always love, you know, the best thing, right?

1:24:53.460 --> 1:24:57.460
 I talked about Shakespeare, sonnet about,

1:24:57.460 --> 1:25:00.460
 I'm Mr. Seizer, nothing like the sun or, you know,

1:25:00.460 --> 1:25:04.460
 the scene from Josh Whedon's film Serenity at the end

1:25:04.460 --> 1:25:08.460
 where the actual piece in the score by David Newman is called

1:25:08.460 --> 1:25:12.460
 Love where Captain Mal is teaching River Tam

1:25:12.460 --> 1:25:13.460
 about how to pilot the ship.

1:25:13.460 --> 1:25:15.460
 And she's a super genius, super soldier.

1:25:15.460 --> 1:25:16.460
 She knows how to do it already.

1:25:16.460 --> 1:25:19.460
 And he's basically talking about how you have to love the ship

1:25:19.460 --> 1:25:21.460
 because if you don't, it's going to kill you.

1:25:21.460 --> 1:25:23.460
 And then the piece falls off the ship.

1:25:23.460 --> 1:25:25.460
 It's kind of like JavaScript.

1:25:25.460 --> 1:25:26.460
 You have to love it.

1:25:26.460 --> 1:25:28.460
 You have to love it because now people will say,

1:25:28.460 --> 1:25:31.460
 we're stuck with it because it got this priority of place.

1:25:31.460 --> 1:25:34.460
 But there's love underpinning that and actually the listening

1:25:34.460 --> 1:25:36.460
 to developers, that's kind of beautiful.

1:25:36.460 --> 1:25:40.460
 There's most successful products in this world

1:25:40.460 --> 1:25:42.460
 with all the messes, with all the flaws.

1:25:42.460 --> 1:25:44.460
 Perhaps the flaws themselves are actual features,

1:25:44.460 --> 1:25:47.460
 but that's a whole other, that's a discussion about love.

1:25:47.460 --> 1:25:49.460
 But underneath it, there's something

1:25:49.460 --> 1:25:51.460
 that just connects with people.

1:25:51.460 --> 1:25:52.460
 And it has to keep connecting.

1:25:52.460 --> 1:25:54.460
 If JavaScript kind of went off in this,

1:25:54.460 --> 1:25:56.460
 people sometimes complain about ES6.

1:25:56.460 --> 1:25:58.460
 Oh, you put classes in JavaScript.

1:25:58.460 --> 1:25:59.460
 I hate classes.

1:25:59.460 --> 1:26:00.460
 You know, you've ruined it.

1:26:00.460 --> 1:26:01.460
 But it's not true.

1:26:01.460 --> 1:26:02.460
 It's a dynamic language.

1:26:02.460 --> 1:26:04.460
 Smalltalk had classes.

1:26:04.460 --> 1:26:06.460
 Python has classes.

1:26:06.460 --> 1:26:10.460
 There are lots of Lisp variants that have classy systems.

1:26:10.460 --> 1:26:12.460
 Common Lisp.

1:26:12.460 --> 1:26:16.460
 So, you know, people who don't reject it based on some sort

1:26:16.460 --> 1:26:21.460
 of fashion judgment do use it and do interact

1:26:21.460 --> 1:26:23.460
 with the standards body.

1:26:23.460 --> 1:26:25.460
 The standards body is competing browser vendors mainly,

1:26:25.460 --> 1:26:28.460
 but also now big companies that use JavaScript heavily,

1:26:28.460 --> 1:26:32.460
 the PayPal's and other such companies, Salesforce.

1:26:32.460 --> 1:26:36.460
 And they have to cater to web developers.

1:26:36.460 --> 1:26:38.460
 They have to hire developers who know JavaScript.

1:26:38.460 --> 1:26:42.460
 They have to keep their engines up to the latest standard.

1:26:42.460 --> 1:26:45.460
 And this creates all this sort of social structure

1:26:45.460 --> 1:26:47.460
 around JavaScript that is unusual.

1:26:47.460 --> 1:26:50.460
 I mean, you get C++ buffs to follow the inner workings

1:26:50.460 --> 1:26:52.460
 of, you know, C++.

1:26:52.460 --> 1:26:54.460
 What is it now?

1:26:54.460 --> 1:26:55.460
 21 something.

1:26:55.460 --> 1:26:56.460
 I don't know.

1:26:56.460 --> 1:26:57.460
 I've lost track.

1:26:57.460 --> 1:26:58.460
 But it's a more rarefied group.

1:26:58.460 --> 1:27:02.460
 It's more like the old language, you know, gray hairs.

1:27:02.460 --> 1:27:05.460
 Whereas JavaScript is a younger and more, you know,

1:27:05.460 --> 1:27:07.460
 vibrant large crowd.

1:27:07.460 --> 1:27:09.460
 There's a community feel to it.

1:27:09.460 --> 1:27:10.460
 There's a echoes.

1:27:10.460 --> 1:27:13.460
 Perhaps I don't want to draw too many similarities.

1:27:13.460 --> 1:27:15.460
 Maybe you can comment on it.

1:27:15.460 --> 1:27:19.460
 There's a C++ is like Wall Street and the JavaScript is

1:27:19.460 --> 1:27:22.460
 like Wall Street bets from the recent events.

1:27:22.460 --> 1:27:25.460
 It's like there's a chaotic community of all and there's

1:27:25.460 --> 1:27:29.460
 some power from that distributed crowd of people.

1:27:29.460 --> 1:27:30.460
 It's more demonic.

1:27:30.460 --> 1:27:32.460
 It's more of the people.

1:27:32.460 --> 1:27:35.460
 It lets people in without requiring these credentials.

1:27:35.460 --> 1:27:38.460
 I remember in the late 90s into the 90s, people were all

1:27:38.460 --> 1:27:41.460
 getting Java credentials and I knew people and friends knew

1:27:41.460 --> 1:27:44.460
 people who became Java programmers and you knew they

1:27:44.460 --> 1:27:46.460
 really should have been like nature guides or pilots.

1:27:46.460 --> 1:27:49.460
 They hated programming, but they thought, I got to make money.

1:27:49.460 --> 1:27:51.460
 I'm going to become a Java programmer.

1:27:51.460 --> 1:27:54.460
 Do you have some, because it's such a monumental moment in

1:27:54.460 --> 1:27:58.460
 our current history as a quick aside, do you have thoughts

1:27:58.460 --> 1:28:03.460
 about this huge distributed crowd sourced financial

1:28:03.460 --> 1:28:06.460
 happenings with Wall Street bets?

1:28:06.460 --> 1:28:09.460
 That's like nobody could have, well, you could have predicted

1:28:09.460 --> 1:28:12.460
 but the scale and the impact of this kind of emergent

1:28:12.460 --> 1:28:15.460
 behavior from independent parties that could happen.

1:28:15.460 --> 1:28:19.460
 Like I said, my own experience with the dismal science as

1:28:19.460 --> 1:28:22.460
 with physics led me to reject a lot of bad models and

1:28:22.460 --> 1:28:25.460
 economics was always compromised by politics,

1:28:25.460 --> 1:28:27.460
 political economy.

1:28:27.460 --> 1:28:30.460
 You could also argue that it used to be a branch of moral

1:28:30.460 --> 1:28:33.460
 philosophy, so it was concerned with the good and it became

1:28:33.460 --> 1:28:36.460
 divorced and became sort of in this quasi Newtonian way

1:28:36.460 --> 1:28:39.460
 just about everything's just running by itself.

1:28:39.460 --> 1:28:40.460
 Don't worry about it.

1:28:40.460 --> 1:28:42.460
 This monopoly is crushing your Netscape company,

1:28:42.460 --> 1:28:43.460
 but that's just nature.

1:28:43.460 --> 1:28:46.460
 An economist couldn't or doesn't really have good models

1:28:46.460 --> 1:28:49.460
 for the Wall Street bets subreddit.

1:28:49.460 --> 1:28:52.460
 They know how to squeeze the short, right?

1:28:52.460 --> 1:28:56.460
 So the amazing thing is you have Robinhood app,

1:28:56.460 --> 1:29:00.460
 which was again, supposedly for the demos for the people

1:29:00.460 --> 1:29:05.460
 and eliminated the fee through various kinds of straddles

1:29:05.460 --> 1:29:09.460
 or some kind of spread operation that helped them

1:29:09.460 --> 1:29:11.460
 eliminate the fee or eat the fee.

1:29:11.460 --> 1:29:14.460
 And in fact, as a broker in these days,

1:29:14.460 --> 1:29:15.460
 because it takes two days to settle,

1:29:15.460 --> 1:29:18.460
 there's counterparty risk as they found out.

1:29:18.460 --> 1:29:22.460
 And so the Wall Street bets people,

1:29:22.460 --> 1:29:27.460
 the memes are like the Terminator robot with the $600

1:29:27.460 --> 1:29:29.460
 Stimmy check and the hedge funds,

1:29:29.460 --> 1:29:33.460
 the little girl hiding under the desk.

1:29:33.460 --> 1:29:36.460
 There is a problem which I talked about in the recent podcast,

1:29:36.460 --> 1:29:38.460
 which I'm conscious of from the history of the web.

1:29:38.460 --> 1:29:40.460
 And that is, you could say it's monopoly,

1:29:40.460 --> 1:29:43.460
 which antitrust wasn't enforced after USV Microsoft

1:29:43.460 --> 1:29:44.460
 for a long time.

1:29:44.460 --> 1:29:48.460
 And a lot of this was due to the money interests buying

1:29:48.460 --> 1:29:50.460
 control of politicians.

1:29:50.460 --> 1:29:54.460
 And in Plato's five regimes, that's oligarchy.

1:29:54.460 --> 1:29:56.460
 That's where we are.

1:29:56.460 --> 1:29:58.460
 And now we're seeing a fight against the oligarchs.

1:29:58.460 --> 1:30:00.460
 I don't know if it'll work, but you're definitely seeing it.

1:30:00.460 --> 1:30:02.460
 And it's also kind of hackerish, right?

1:30:02.460 --> 1:30:04.460
 It's got a hacker ethos.

1:30:04.460 --> 1:30:05.460
 Hey, Robinhood, no fees.

1:30:05.460 --> 1:30:06.460
 Oh, interesting.

1:30:06.460 --> 1:30:09.460
 Hey, buy a fraction of a share in this thing

1:30:09.460 --> 1:30:12.460
 or I can keep buying with my stimulus check.

1:30:12.460 --> 1:30:16.460
 So I mentioned Hegel seeing Napoleon on the horse.

1:30:16.460 --> 1:30:19.460
 Hegel also talked about the cunning of reason

1:30:19.460 --> 1:30:23.460
 to have this sort of God's history in full.

1:30:23.460 --> 1:30:26.460
 And if you believe in God, or we don't know the future,

1:30:26.460 --> 1:30:29.460
 but there's always this sort of fly in the ointment,

1:30:29.460 --> 1:30:32.460
 this unintended consequence that confounds

1:30:32.460 --> 1:30:35.460
 the best plans of the powers that be.

1:30:35.460 --> 1:30:37.460
 And we're living through it.

1:30:37.460 --> 1:30:41.460
 I'm glad it's not street warfare or mechanized warfare

1:30:41.460 --> 1:30:44.460
 because it has been in the past.

1:30:44.460 --> 1:30:47.460
 It's more like soft power.

1:30:47.460 --> 1:30:50.460
 And people are fighting back.

1:30:50.460 --> 1:30:51.460
 Do you think it's possible?

1:30:51.460 --> 1:30:56.460
 So the JavaScript used to be for the front end of the web.

1:30:56.460 --> 1:31:01.460
 It's now increasingly so being used for back end,

1:31:01.460 --> 1:31:05.460
 like running stuff that's like behind the scenes.

1:31:05.460 --> 1:31:09.460
 And it's also starting to be used quite a bit

1:31:09.460 --> 1:31:11.460
 for things like TensorFlow.js.

1:31:11.460 --> 1:31:15.460
 So starting to actually use like these heavy duty applications

1:31:15.460 --> 1:31:17.460
 that are using your networks when you're learning

1:31:17.460 --> 1:31:19.460
 and so on on the browser.

1:31:19.460 --> 1:31:23.460
 Is it possible in 10, 20, 30 years

1:31:23.460 --> 1:31:28.460
 that basically most of the world runs on JavaScript?

1:31:28.460 --> 1:31:31.460
 This is a dystopia and a nightmare to some people.

1:31:31.460 --> 1:31:34.460
 When we did Asim Jassi WebAssembly,

1:31:34.460 --> 1:31:36.460
 I would joke and meme people with scenes

1:31:36.460 --> 1:31:39.460
 like Neo waking up in his pod in the matrix

1:31:39.460 --> 1:31:42.460
 and he's all skinny and weak and hairless.

1:31:42.460 --> 1:31:45.460
 And you know, you realize in the future

1:31:45.460 --> 1:31:47.460
 that you're living in some simulation

1:31:47.460 --> 1:31:48.460
 that it's all running on JavaScript

1:31:48.460 --> 1:31:51.460
 and you just scream forever.

1:31:51.460 --> 1:31:52.460
 It's possible.

1:31:52.460 --> 1:31:54.460
 Gary Bernhard does these funny talks.

1:31:54.460 --> 1:31:58.460
 He did WhatJS and then he did this life and death of JavaScript

1:31:58.460 --> 1:32:01.460
 I think it's called where he took some clever ideas

1:32:01.460 --> 1:32:04.460
 that actually have a thread of credibility to them.

1:32:04.460 --> 1:32:08.460
 But I mentioned software fault isolation.

1:32:08.460 --> 1:32:10.460
 In the old days when we were using computers,

1:32:10.460 --> 1:32:13.460
 we said we're going to use the Unix monolithic monitor

1:32:13.460 --> 1:32:15.460
 and it's the privilege program.

1:32:15.460 --> 1:32:18.460
 This is before you even had hardware rings of protection,

1:32:18.460 --> 1:32:20.460
 some of the early 60s operating systems

1:32:20.460 --> 1:32:22.460
 used hardware protection zones.

1:32:22.460 --> 1:32:25.460
 But Unix is privileged and the program

1:32:25.460 --> 1:32:30.460
 that runs user code in a process is hosted.

1:32:30.460 --> 1:32:33.460
 It's the guest in the host and you get to suspend it.

1:32:33.460 --> 1:32:34.460
 You get to kill it.

1:32:34.460 --> 1:32:39.460
 If it crashes, it doesn't take down the whole wonderful idea.

1:32:39.460 --> 1:32:42.460
 But the call into the kernel is expensive.

1:32:42.460 --> 1:32:43.460
 The system calls, so called.

1:32:43.460 --> 1:32:44.460
 And this has even been optimized now

1:32:44.460 --> 1:32:46.460
 for things like getting the time of day

1:32:46.460 --> 1:32:49.460
 so it doesn't actually enter the kernel.

1:32:49.460 --> 1:32:52.460
 And meanwhile, hardware architectures

1:32:52.460 --> 1:32:55.460
 and virtualization techniques have gone in a different direction

1:32:55.460 --> 1:32:57.460
 even to the point where you can do software fault isolation

1:32:57.460 --> 1:33:00.460
 very cheaply without entering the operating system kernel.

1:33:00.460 --> 1:33:02.460
 And so you get unicernals and exo kernels

1:33:02.460 --> 1:33:04.460
 and very lightweight VMs.

1:33:04.460 --> 1:33:07.460
 And so Gary took this idea and said,

1:33:07.460 --> 1:33:09.460
 JavaScript will take over computing

1:33:09.460 --> 1:33:11.460
 because the system call boundaries too expensive.

1:33:11.460 --> 1:33:13.460
 So everything ends up in JavaScript

1:33:13.460 --> 1:33:16.460
 with these lighter weight isolation enforcement mechanisms.

1:33:16.460 --> 1:33:18.460
 It's not totally beyond belief.

1:33:18.460 --> 1:33:21.460
 People have assembly too.

1:33:21.460 --> 1:33:24.460
 It's nice to ask you sort of for advice

1:33:24.460 --> 1:33:27.460
 to there's so many people that are interested

1:33:27.460 --> 1:33:29.460
 in starting to learning about programming,

1:33:29.460 --> 1:33:31.460
 getting into this world.

1:33:31.460 --> 1:33:35.460
 Is there some number of languages,

1:33:35.460 --> 1:33:38.460
 programming languages that you would recommend people learn

1:33:38.460 --> 1:33:43.460
 or maybe a broader advice on how to get started in programming?

1:33:43.460 --> 1:33:45.460
 Well, so you asked about machine learning

1:33:45.460 --> 1:33:47.460
 and JavaScript is a general purpose language

1:33:47.460 --> 1:33:52.460
 and it's a language that's not that great

1:33:52.460 --> 1:33:55.460
 for doing matrix operations

1:33:55.460 --> 1:33:59.460
 or doing parallel programming, I would say,

1:33:59.460 --> 1:34:01.460
 without using some extensions or some libraries

1:34:01.460 --> 1:34:03.460
 that have some magic in them.

1:34:03.460 --> 1:34:08.460
 So if someone wanted to learn,

1:34:08.460 --> 1:34:11.460
 there are amazing languages in sort of the APL family

1:34:11.460 --> 1:34:14.460
 that are very useful for, I would say, linear algebra

1:34:14.460 --> 1:34:16.460
 which gets to a lot of the kernels in machine learning.

1:34:16.460 --> 1:34:20.460
 And so APL had J and then K

1:34:20.460 --> 1:34:22.460
 and there are K variants

1:34:22.460 --> 1:34:24.460
 because the guy that did K is still going

1:34:24.460 --> 1:34:28.460
 and they're proprietary but he's still innovating there.

1:34:28.460 --> 1:34:30.460
 Python is used.

1:34:30.460 --> 1:34:32.460
 So people talk about TensorFlow.js.

1:34:32.460 --> 1:34:34.460
 That's surprising because Python was heavily used

1:34:34.460 --> 1:34:36.460
 for machine learning.

1:34:36.460 --> 1:34:38.460
 And Python was always, you know,

1:34:38.460 --> 1:34:41.460
 they didn't have this fast just in time compiler tradition.

1:34:41.460 --> 1:34:43.460
 There were some projects that tried this

1:34:43.460 --> 1:34:45.460
 and some of them were interesting.

1:34:45.460 --> 1:34:49.460
 PyPy was interesting, but the philosophy with Python was,

1:34:49.460 --> 1:34:51.460
 oh, you need to go fast or write a C plug in

1:34:51.460 --> 1:34:54.460
 and drop into C code.

1:34:54.460 --> 1:34:57.460
 So I think people should look at multiple languages

1:34:57.460 --> 1:34:59.460
 because there are different tools in the belt.

1:34:59.460 --> 1:35:02.460
 If you're trying to do supervision or rapid prototyping,

1:35:02.460 --> 1:35:04.460
 you want a dynamic language, you want to throw things together

1:35:04.460 --> 1:35:06.460
 and see what works.

1:35:06.460 --> 1:35:08.460
 If you're trying to go down to the metal very fast,

1:35:08.460 --> 1:35:10.460
 well, I'm an old C hacker,

1:35:10.460 --> 1:35:13.460
 but I was also the sponsor, executive sponsor of Rust

1:35:13.460 --> 1:35:15.460
 at Mozilla and Rust has now escaped, you know,

1:35:15.460 --> 1:35:18.460
 from that sort of nest where it was born

1:35:18.460 --> 1:35:21.460
 to be adopted by a bunch of companies

1:35:21.460 --> 1:35:23.460
 and have a foundation in the works.

1:35:23.460 --> 1:35:25.460
 Some of the key core team members are working now

1:35:25.460 --> 1:35:27.460
 at Amazon and other places.

1:35:27.460 --> 1:35:29.460
 So it looks like Rust has reached escape velocity,

1:35:29.460 --> 1:35:31.460
 and Rust is an interesting language

1:35:31.460 --> 1:35:33.460
 because one of our goals there,

1:35:33.460 --> 1:35:35.460
 one of the reasons I sponsored it was,

1:35:35.460 --> 1:35:37.460
 we were all tired of seeing those

1:35:37.460 --> 1:35:39.460
 remote code execution vulnerabilities

1:35:39.460 --> 1:35:41.460
 due to C and C++, and we thought,

1:35:41.460 --> 1:35:43.460
 can we have a sort of safety property

1:35:43.460 --> 1:35:45.460
 through a type and effect system

1:35:45.460 --> 1:35:47.460
 or an ownership system, and Rust has that.

1:35:47.460 --> 1:35:49.460
 And that ownership system is interesting

1:35:49.460 --> 1:35:51.460
 because it doesn't just give you memory safety.

1:35:51.460 --> 1:35:53.460
 There's a sort of theorem for free,

1:35:53.460 --> 1:35:56.460
 a dual that falls out for protection against data races.

1:35:56.460 --> 1:35:59.460
 So Rust is better for low level programming,

1:35:59.460 --> 1:36:02.460
 you delimit your unsafe code where you do have to be unsafe,

1:36:02.460 --> 1:36:05.460
 and you can prove certain facts about memory safety

1:36:05.460 --> 1:36:08.460
 and race condition avoidance.

1:36:08.460 --> 1:36:11.460
 And so I think people should learn these new languages.

1:36:11.460 --> 1:36:13.460
 I think Go is a great language I admire,

1:36:13.460 --> 1:36:16.460
 you know, the Unix, people who did that,

1:36:16.460 --> 1:36:19.460
 Ken Stoll was involved, Rob Pike, of course,

1:36:19.460 --> 1:36:22.460
 David, what's his name, and other people.

1:36:22.460 --> 1:36:25.460
 Go is a huge success,

1:36:25.460 --> 1:36:28.460
 really on the server side, anywhere you have,

1:36:28.460 --> 1:36:30.460
 you know, a lot of networking to do,

1:36:30.460 --> 1:36:32.460
 and it's garbage collected,

1:36:32.460 --> 1:36:35.460
 but it's also very pragmatic, it has that sort of C flavor.

1:36:35.460 --> 1:36:37.460
 As an old C hacker, I can't get used to the fact

1:36:37.460 --> 1:36:39.460
 that they swapped the type and declarator

1:36:39.460 --> 1:36:41.460
 in the declaration order.

1:36:41.460 --> 1:36:44.460
 I haven't used Rust, but this is one of the most respected

1:36:44.460 --> 1:36:46.460
 and loved languages currently.

1:36:46.460 --> 1:36:48.460
 And it's still young, you look at these things,

1:36:48.460 --> 1:36:50.460
 JavaScript is now considered old.

1:36:50.460 --> 1:36:52.460
 It's gone through so many versions

1:36:52.460 --> 1:36:54.460
 that you can fall in love with it all over again.

1:36:54.460 --> 1:36:57.460
 25 plus years, you know, it's an adult.

1:36:57.460 --> 1:36:59.460
 It should be out of the house.

1:36:59.460 --> 1:37:02.460
 But it could be around another 25 years.

1:37:02.460 --> 1:37:04.460
 Cannot rule it out.

1:37:04.460 --> 1:37:06.460
 So Rust will be around for a long time.

1:37:06.460 --> 1:37:08.460
 The longer you're around, the more likely you're

1:37:08.460 --> 1:37:10.460
 Lindy, and you're around.

1:37:10.460 --> 1:37:12.460
 A lot of people ask me,

1:37:12.460 --> 1:37:15.460
 I'm often torn between recommending either Python

1:37:15.460 --> 1:37:18.460
 or JavaScript as the first language to play with,

1:37:18.460 --> 1:37:20.460
 because it's difficult,

1:37:20.460 --> 1:37:24.460
 because it's so easy to do JavaScript incorrectly.

1:37:24.460 --> 1:37:29.460
 It's much easier to do it correctly these days.

1:37:29.460 --> 1:37:31.460
 Or like, well, like learn about programming.

1:37:31.460 --> 1:37:33.460
 But the cool thing about JavaScript

1:37:33.460 --> 1:37:35.460
 is that you can create stuff

1:37:35.460 --> 1:37:37.460
 that will put a smile on your face.

1:37:37.460 --> 1:37:40.460
 Like as a developer, you can create stuff

1:37:40.460 --> 1:37:42.460
 and it'll visually look like something

1:37:42.460 --> 1:37:45.460
 and it'll do stuff and it makes you feel good.

1:37:45.460 --> 1:37:47.460
 It makes you fall in love with programming.

1:37:47.460 --> 1:37:49.460
 With Python, you could do the same.

1:37:49.460 --> 1:37:52.460
 And with C++, it takes 5 to 10 years to write a program

1:37:52.460 --> 1:37:54.460
 that actually does something.

1:37:54.460 --> 1:37:56.460
 So there's that tension between

1:37:56.460 --> 1:37:58.460
 is JavaScript the right first step

1:37:58.460 --> 1:38:00.460
 or is it Python?

1:38:00.460 --> 1:38:02.460
 And I've been going back and forth on those two.

1:38:02.460 --> 1:38:05.460
 I had my Python right. It came from a lineage of ABC,

1:38:05.460 --> 1:38:09.460
 which was a pedagogical language in the Netherlands.

1:38:09.460 --> 1:38:16.460
 And it was a good teaching language too.

1:38:16.460 --> 1:38:18.460
 I think it is a good teaching language

1:38:18.460 --> 1:38:20.460
 and it's more restrictive

1:38:20.460 --> 1:38:22.460
 that if you misspell something

1:38:22.460 --> 1:38:25.460
 in a way that JavaScript might let run,

1:38:25.460 --> 1:38:27.460
 let reach runtime, it'll get stopped

1:38:27.460 --> 1:38:30.460
 at syntax check in Python.

1:38:30.460 --> 1:38:32.460
 That's good for beginners.

1:38:32.460 --> 1:38:35.460
 I think the sloppiness that some people object to,

1:38:35.460 --> 1:38:37.460
 like people were just tweeting at me,

1:38:37.460 --> 1:38:39.460
 having just learned JavaScript, they said,

1:38:39.460 --> 1:38:41.460
 I can take a number and I can index into it

1:38:41.460 --> 1:38:43.460
 and get undefined out of it as a property.

1:38:43.460 --> 1:38:45.460
 And why is that? A number is not an object.

1:38:45.460 --> 1:38:47.460
 And I explained why it is.

1:38:47.460 --> 1:38:50.460
 The primitive types, which unfortunately are not objects,

1:38:50.460 --> 1:38:53.460
 can be automatically boxed or wrapped by an object.

1:38:53.460 --> 1:38:55.460
 And I made that implicit.

1:38:55.460 --> 1:38:58.460
 In Java, it's typed and you have to declare things

1:38:58.460 --> 1:39:00.460
 and you'll get type errors.

1:39:00.460 --> 1:39:03.460
 But there are cases in Java where you get auto boxing

1:39:03.460 --> 1:39:06.460
 or auto wrapping because you've declared that you want it.

1:39:06.460 --> 1:39:08.460
 In JavaScript, it just happens.

1:39:08.460 --> 1:39:10.460
 So once I explain it, I'm like, oh, wow, I get it.

1:39:10.460 --> 1:39:13.460
 But it also means that you can commit a blunder that just...

1:39:13.460 --> 1:39:15.460
 You don't get punished for, you don't detect.

1:39:15.460 --> 1:39:17.460
 You get an undefined value and you don't know where it came from.

1:39:17.460 --> 1:39:19.460
 Right.

1:39:19.460 --> 1:39:22.460
 I've been reading a lot about military history recently.

1:39:22.460 --> 1:39:26.460
 And one way to paint the picture of browsers,

1:39:26.460 --> 1:39:28.460
 Internet browsers, is through the various wars

1:39:28.460 --> 1:39:30.460
 throughout its history.

1:39:30.460 --> 1:39:32.460
 I don't know if that's a useful way to look at it,

1:39:32.460 --> 1:39:34.460
 but we've already talked a little bit about Netscape

1:39:34.460 --> 1:39:37.460
 and Internet Explorer in the early days.

1:39:37.460 --> 1:39:40.460
 Can you tell the story of the different wars,

1:39:40.460 --> 1:39:43.460
 if that's at all an interesting way to look at it,

1:39:43.460 --> 1:39:46.460
 of the 90s and to today?

1:39:46.460 --> 1:39:48.460
 Yeah. So I mentioned that Microsoft,

1:39:48.460 --> 1:39:51.460
 which was convicted for it, did abuse its monopoly,

1:39:51.460 --> 1:39:54.460
 but they had a pretty good team by the time they did IE4.

1:39:54.460 --> 1:39:57.460
 And Netscape, unfortunately, I was like the second floor

1:39:57.460 --> 1:39:59.460
 and I was friends with all the first floor people,

1:39:59.460 --> 1:40:02.460
 the front end guys who did the JavaScript event hookup

1:40:02.460 --> 1:40:04.460
 and things like that,

1:40:04.460 --> 1:40:07.460
 that that team was fairly burnt out

1:40:07.460 --> 1:40:10.460
 and I think having gone public,

1:40:10.460 --> 1:40:13.460
 the upper management wanted to buy a bunch of companies

1:40:13.460 --> 1:40:15.460
 to try to go head to head with Microsoft.

1:40:15.460 --> 1:40:17.460
 Didn't work, but buying a bunch of companies

1:40:17.460 --> 1:40:19.460
 usually doesn't work.

1:40:19.460 --> 1:40:22.460
 I think the modern sort of approach,

1:40:22.460 --> 1:40:25.460
 roughly is like Mark Zuckerberg took,

1:40:25.460 --> 1:40:28.460
 which is to keep them at arm's length and let them do their thing.

1:40:28.460 --> 1:40:31.460
 And now that he's pulling WhatsApp in and people are fleeing it

1:40:31.460 --> 1:40:33.460
 because it's tied into the ad surveillance.

1:40:33.460 --> 1:40:37.460
 But for a while there, keeping it separate really does work

1:40:37.460 --> 1:40:39.460
 because you bought it for its value.

1:40:39.460 --> 1:40:41.460
 And you're not messing with it.

1:40:41.460 --> 1:40:43.460
 With Netscape, when they bought a bunch of companies,

1:40:43.460 --> 1:40:45.460
 they had some of the first floor people

1:40:45.460 --> 1:40:47.460
 or the founders burned out.

1:40:47.460 --> 1:40:51.460
 They had newcomers who wanted their turn to do the browser

1:40:51.460 --> 1:40:54.460
 and they hadn't really done browsers or understood them.

1:40:54.460 --> 1:40:57.460
 And so Netscape 4 was originally supposed to be 3

1:40:57.460 --> 1:40:59.460
 and it was so late they renumbered it.

1:40:59.460 --> 1:41:01.460
 We did a 3 release, Jamie and a few others

1:41:01.460 --> 1:41:03.460
 put some extra effort into SecureMime

1:41:03.460 --> 1:41:07.460
 was supported in the mail, built in mail program.

1:41:07.460 --> 1:41:11.460
 And Netscape 4 was late and it was only on Windows at first

1:41:11.460 --> 1:41:14.460
 and Microsoft had really started doing better.

1:41:14.460 --> 1:41:16.460
 Like they do, they copy in the first version's trash

1:41:16.460 --> 1:41:18.460
 and the second one, you're starting to feel a little threatened.

1:41:18.460 --> 1:41:20.460
 The third one, you can tell what's going to happen

1:41:20.460 --> 1:41:22.460
 and the fourth one's good.

1:41:22.460 --> 1:41:24.460
 And plus there's the benefit, like you said,

1:41:24.460 --> 1:41:26.460
 that it comes as a default browser.

1:41:26.460 --> 1:41:28.460
 Yes, and yet Netscape's screwing it up

1:41:28.460 --> 1:41:31.460
 and Microsoft really putting some quality people on it.

1:41:31.460 --> 1:41:33.460
 I4 was good, on Windows it was good.

1:41:33.460 --> 1:41:36.460
 And they did the dynamic HTML innovations.

1:41:36.460 --> 1:41:40.460
 Scott Isaacs, my old buddy, a former accountant

1:41:40.460 --> 1:41:44.460
 who programmed in basic and became what Microsoft calls

1:41:44.460 --> 1:41:47.460
 a program manager, which is kind of an elevated position.

1:41:47.460 --> 1:41:50.460
 You can be a programmer and engineer in track,

1:41:50.460 --> 1:41:52.460
 but you switch to it and you sort of lead

1:41:52.460 --> 1:41:54.460
 a lot of design and standards efforts.

1:41:54.460 --> 1:41:58.460
 And so Scott Isaac put in a lot of those funky DHTML APIs

1:41:58.460 --> 1:42:01.460
 that didn't quite have the same flavor as the stuff that I did

1:42:01.460 --> 1:42:05.460
 and neither of them was like the later sort of verbose Java

1:42:05.460 --> 1:42:08.460
 like DOM W3C standardized.

1:42:08.460 --> 1:42:10.460
 But I4 was pretty darn good.

1:42:10.460 --> 1:42:13.460
 I remember a friend, Scott Furman, and I got invited by Scott Isaacs

1:42:13.460 --> 1:42:16.460
 to Gordon Beersch and San Jose.

1:42:16.460 --> 1:42:19.460
 They were doing a preview of I4.

1:42:19.460 --> 1:42:21.460
 This must have been 1997.

1:42:21.460 --> 1:42:25.460
 And Scott said, yeah, we've got here's the new graphic stuff we're doing.

1:42:25.460 --> 1:42:27.460
 We've got something like your Netscape layers.

1:42:27.460 --> 1:42:31.460
 We've got VML, a vector markup language.

1:42:31.460 --> 1:42:33.460
 We can do virtual reality.

1:42:33.460 --> 1:42:36.460
 And Scott and I looked at each other and said, we're doomed, right?

1:42:36.460 --> 1:42:38.460
 Microsoft was starting to fire in all cylinders.

1:42:38.460 --> 1:42:40.460
 So I have to give them credit for that,

1:42:40.460 --> 1:42:42.460
 even though they abused their market power.

1:42:42.460 --> 1:42:44.460
 And maybe, you know, I shouldn't give them credit

1:42:44.460 --> 1:42:46.460
 for having the resources to hire talented people,

1:42:46.460 --> 1:42:48.460
 but they did a credible job on I4.

1:42:48.460 --> 1:42:51.460
 What really was bad was that phase of the browser wars

1:42:51.460 --> 1:42:55.460
 ended with monopoly and perhaps due to the antitrust case,

1:42:55.460 --> 1:42:58.460
 perhaps due to regulation in Europe,

1:42:58.460 --> 1:43:02.460
 perhaps just due to Microsoft not liking dealing with standardization,

1:43:02.460 --> 1:43:05.460
 they would let it rot.

1:43:05.460 --> 1:43:10.460
 They just abandoned it I5, I5, I6 later,

1:43:10.460 --> 1:43:12.460
 but these were not well maintained.

1:43:12.460 --> 1:43:14.460
 They had a lot of security bugs.

1:43:14.460 --> 1:43:16.460
 Browsers really closed and outdated too,

1:43:16.460 --> 1:43:18.460
 even though it was getting updated.

1:43:18.460 --> 1:43:21.460
 Browsers like Mozilla and Firefox were adding tabs,

1:43:21.460 --> 1:43:23.460
 Operahead, a version of tabs.

1:43:23.460 --> 1:43:25.460
 And they didn't add tabs.

1:43:25.460 --> 1:43:27.460
 And they pop up blocking,

1:43:27.460 --> 1:43:29.460
 something I should have done from the start.

1:43:29.460 --> 1:43:31.460
 People realized that you can tell when the user clicks something

1:43:31.460 --> 1:43:34.460
 and it goes in JavaScript to open a little window

1:43:34.460 --> 1:43:36.460
 that you can sort of inspect the stack

1:43:36.460 --> 1:43:38.460
 and see that the click originated that.

1:43:38.460 --> 1:43:39.460
 And it's probably okay.

1:43:39.460 --> 1:43:41.460
 Whereas if you're just loading a script

1:43:41.460 --> 1:43:43.460
 and it opens a new window, that's a spam technique

1:43:43.460 --> 1:43:45.460
 and you should block it.

1:43:45.460 --> 1:43:47.460
 Tabs were brilliant innovation.

1:43:47.460 --> 1:43:49.460
 Like you said, Operahead, but I remember

1:43:49.460 --> 1:43:52.460
 I fully switched to Firefox the moment.

1:43:52.460 --> 1:43:57.460
 I remember the moments of first using tabs in Firefox

1:43:57.460 --> 1:44:00.460
 and not liking it for the first few minutes

1:44:00.460 --> 1:44:02.460
 and like, wait a minute.

1:44:02.460 --> 1:44:03.460
 You get the groove.

1:44:03.460 --> 1:44:05.460
 You get the groove and you understand.

1:44:05.460 --> 1:44:08.460
 So that timing, what year was this?

1:44:08.460 --> 1:44:12.460
 Because also as a aspiring web designer,

1:44:12.460 --> 1:44:13.460
 I used Table.

1:44:13.460 --> 1:44:16.460
 So we didn't mention layout or CSS much.

1:44:16.460 --> 1:44:18.460
 There's also a change in the way,

1:44:18.460 --> 1:44:20.460
 like the frames were going away.

1:44:20.460 --> 1:44:23.460
 So there's a change in the way websites looked

1:44:23.460 --> 1:44:25.460
 and behaved and all that kind of stuff.

1:44:25.460 --> 1:44:28.460
 CSS finally, which Microsoft embraced with IE4

1:44:28.460 --> 1:44:30.460
 and Netscape never really did right.

1:44:30.460 --> 1:44:33.460
 CSS became a better standard over time

1:44:33.460 --> 1:44:36.460
 for doing table layout that relieved you of the need

1:44:36.460 --> 1:44:38.460
 to use what are called spacer gifts.

1:44:38.460 --> 1:44:40.460
 The spacer gifts, right?

1:44:40.460 --> 1:44:43.460
 You would throw in the space up tables.

1:44:43.460 --> 1:44:47.460
 The typographic power of the web has gotten better

1:44:47.460 --> 1:44:49.460
 but it's still not on the level of PDF

1:44:49.460 --> 1:44:51.460
 and you can't do advanced typography.

1:44:51.460 --> 1:44:53.460
 But it's gotten really better

1:44:53.460 --> 1:44:55.460
 and even then tables were getting better.

1:44:55.460 --> 1:44:57.460
 If you were using Firefox, that would have been 2004

1:44:57.460 --> 1:45:00.460
 and it was called Firebird until early that year.

1:45:00.460 --> 1:45:02.460
 No, yeah, I think it wasn't.

1:45:02.460 --> 1:45:03.460
 2003.

1:45:03.460 --> 1:45:04.460
 I don't remember.

1:45:04.460 --> 1:45:06.460
 It was a Firebird which had tabs.

1:45:06.460 --> 1:45:07.460
 We had tabs the whole way.

1:45:07.460 --> 1:45:10.460
 So it started out as Zola slash browser in 2002,

1:45:10.460 --> 1:45:12.460
 became Phoenix.

1:45:12.460 --> 1:45:14.460
 There's a BIOS that has an embedded version of IE

1:45:14.460 --> 1:45:16.460
 and they said, we're called Phoenix technologies.

1:45:16.460 --> 1:45:17.460
 You can't use Phoenix.

1:45:17.460 --> 1:45:19.460
 And so we said, okay, we'll call it Firebird.

1:45:19.460 --> 1:45:22.460
 And then this Australian centered open source database project

1:45:22.460 --> 1:45:26.460
 started really like in the true Mad Max style

1:45:26.460 --> 1:45:28.460
 where we were streaming at us saying you can't use Firebird.

1:45:28.460 --> 1:45:30.460
 And I had to sort of be the ambassador

1:45:30.460 --> 1:45:31.460
 and say, okay, we're going to rename

1:45:31.460 --> 1:45:32.460
 and I'm like, we don't believe you,

1:45:32.460 --> 1:45:33.460
 you shouldn't have used it, we hate you.

1:45:33.460 --> 1:45:35.460
 And then we renamed it to Firefox

1:45:35.460 --> 1:45:37.460
 and they're like, we love you.

1:45:37.460 --> 1:45:39.460
 And then I haven't heard of them ever since.

1:45:39.460 --> 1:45:41.460
 But Firefox was a clever name.

1:45:41.460 --> 1:45:43.460
 We had to think of something distinctive.

1:45:43.460 --> 1:45:45.460
 We wanted to keep the fire going

1:45:45.460 --> 1:45:47.460
 and it turns out there's a red panda.

1:45:47.460 --> 1:45:49.460
 Right, it's a nickname for.

1:45:49.460 --> 1:45:51.460
 So that's the second set of browser wars.

1:45:51.460 --> 1:45:52.460
 Second browser wars.

1:45:52.460 --> 1:45:56.460
 How did you, how was Firefox born?

1:45:56.460 --> 1:45:58.460
 How was Mozilla born?

1:45:58.460 --> 1:46:00.460
 Is there a, there's a long story there too.

1:46:00.460 --> 1:46:02.460
 So Netscape got acquired by AOL,

1:46:02.460 --> 1:46:05.460
 which as I say was a reasonable happy ending for a lot of people

1:46:05.460 --> 1:46:08.460
 because Netscape otherwise was going to go out of business

1:46:08.460 --> 1:46:10.460
 because Microsoft was just killing its market.

1:46:10.460 --> 1:46:12.460
 There was no way to charge for a browser.

1:46:12.460 --> 1:46:15.460
 Windows came with IE, IE four was pretty good

1:46:15.460 --> 1:46:17.460
 and Netscape four wasn't that good

1:46:17.460 --> 1:46:19.460
 and took a while to get better.

1:46:19.460 --> 1:46:22.460
 But the Netscape executive said,

1:46:22.460 --> 1:46:25.460
 let's do an open source escape pod, you know,

1:46:25.460 --> 1:46:27.460
 and like in Star Wars and New Hope,

1:46:27.460 --> 1:46:28.460
 the gunner won't shoot it

1:46:28.460 --> 1:46:30.460
 because there's no life forms on board, right?

1:46:30.460 --> 1:46:31.460
 It's not a threat.

1:46:31.460 --> 1:46:33.460
 And so we did Mozilla in 1998

1:46:33.460 --> 1:46:37.460
 and it looked like it was going to, you know,

1:46:37.460 --> 1:46:40.460
 initially just give the world an open source browser,

1:46:40.460 --> 1:46:43.460
 but it's really hard to get people to work on this sort of hairball

1:46:43.460 --> 1:46:46.460
 that had been hacked up over by that point four years.

1:46:46.460 --> 1:46:50.460
 It also couldn't have the crypto module for secure sockets,

1:46:50.460 --> 1:46:52.460
 so called or now transport layer security.

1:46:52.460 --> 1:46:54.460
 That was an electronic munition.

1:46:54.460 --> 1:47:00.460
 We were not allowed to release that in the full 1024 bit key strength.

1:47:00.460 --> 1:47:05.460
 And yet people, one of whom I happened to meet previously at SGI

1:47:05.460 --> 1:47:08.460
 when I went on a sales support engineering trip,

1:47:08.460 --> 1:47:14.460
 Tim Hudson in Brisbane, Australia and Eric A. Young

1:47:14.460 --> 1:47:16.460
 did what became open SSL.

1:47:16.460 --> 1:47:19.460
 It was called SSL EAY after Eric's initials

1:47:19.460 --> 1:47:23.460
 and Tim and Eric took their open SSL

1:47:23.460 --> 1:47:25.460
 outside of the purview of the NSA

1:47:25.460 --> 1:47:27.460
 and the Department of Commerce

1:47:27.460 --> 1:47:29.460
 and they stuck it into Mozilla's code.

1:47:29.460 --> 1:47:31.460
 And that was perhaps the best hack that was done

1:47:31.460 --> 1:47:34.460
 in the first few months after we open sourced the browser.

1:47:34.460 --> 1:47:35.460
 We had other problems.

1:47:35.460 --> 1:47:38.460
 The politics inside Netscape were driven by these acquisitions.

1:47:38.460 --> 1:47:41.460
 So the one acquisition that kind of messed up Netscape 4

1:47:41.460 --> 1:47:46.460
 also wanted to keep doing a proprietary mail and groupware program

1:47:46.460 --> 1:47:50.460
 not Jamie Zewinski's mail program that was in Netscape 2 and 3

1:47:50.460 --> 1:47:52.460
 and they held it back from open source.

1:47:52.460 --> 1:47:54.460
 We didn't have a mail program, it was just a browser.

1:47:54.460 --> 1:47:56.460
 We didn't know what AL will do to us.

1:47:56.460 --> 1:47:59.460
 Turns out they didn't interfere with us for a long time.

1:47:59.460 --> 1:48:02.460
 But Netscape wasn't the best steward of Mozilla.

1:48:02.460 --> 1:48:06.460
 We were operating Mozilla as a pirate ship without a legal entity.

1:48:06.460 --> 1:48:10.460
 So most of us worked for Netscape under a separate organization

1:48:10.460 --> 1:48:16.460
 and initially the first engineering manager, Tom Pekwin

1:48:16.460 --> 1:48:19.460
 of Netscape was the Mozilla Founding Manager.

1:48:19.460 --> 1:48:22.460
 But he left pretty quickly and he left me as the acting manager

1:48:22.460 --> 1:48:25.460
 which is more like method acting in my case.

1:48:25.460 --> 1:48:28.460
 And that was my first management stint.

1:48:28.460 --> 1:48:32.460
 But then someone who'd written the licenses, Mitchell Baker,

1:48:32.460 --> 1:48:35.460
 she was a lawyer at Netscape, she was involved in the open source

1:48:35.460 --> 1:48:39.460
 license decision making and the actual writing and construction

1:48:39.460 --> 1:48:41.460
 of those licenses, that was Mitchell's job.

1:48:41.460 --> 1:48:45.460
 Netscape Public License and the truly open Mozilla Public License.

1:48:45.460 --> 1:48:48.460
 And there were two because Netscape needed, because of some encumbered code,

1:48:48.460 --> 1:48:50.460
 needed some special rights, but that went away over time.

1:48:50.460 --> 1:48:53.460
 Mitchell was always interested in Mozilla and she came back

1:48:53.460 --> 1:48:55.460
 from maternity leave and she said, I'll be the manager if you want

1:48:55.460 --> 1:48:57.460
 and Jamie and I said sure.

1:48:57.460 --> 1:48:58.460
 And then Jamie quit.

1:48:58.460 --> 1:49:01.460
 He quit after a year and he said, this didn't work, I'm sorry.

1:49:01.460 --> 1:49:06.460
 He acted like it was a total failure because Mozilla didn't restart

1:49:06.460 --> 1:49:07.460
 the browser market.

1:49:07.460 --> 1:49:09.460
 But there's no way it could have, right?

1:49:09.460 --> 1:49:13.460
 Netscape was still shipping variants of Netscape 4,

1:49:13.460 --> 1:49:15.460
 which was based on the old code.

1:49:15.460 --> 1:49:19.460
 Mozilla was trying to rearchitect the code to make green field for developers.

1:49:19.460 --> 1:49:20.460
 So it was one of my big goals.

1:49:20.460 --> 1:49:23.460
 It wasn't a technical goal so much as, again, a social goal.

1:49:23.460 --> 1:49:26.460
 People wanted a more standard spaced browser.

1:49:26.460 --> 1:49:29.460
 They wanted a less of a hairball that had been hacked on by

1:49:29.460 --> 1:49:31.460
 X grad students starting four years prior.

1:49:31.460 --> 1:49:34.460
 So we said we're going to make a modular code base.

1:49:34.460 --> 1:49:37.460
 We're going to use a variant or an open source version of Microsoft's

1:49:37.460 --> 1:49:39.460
 component object model.

1:49:39.460 --> 1:49:42.460
 It has reference counting and standardized vTables,

1:49:42.460 --> 1:49:44.460
 virtual calls and C++.

1:49:44.460 --> 1:49:46.460
 And we're going to use JavaScript.

1:49:46.460 --> 1:49:49.460
 We're going to have a bridge between those two so you can script

1:49:49.460 --> 1:49:51.460
 those components just like Java components.

1:49:51.460 --> 1:49:55.460
 We're going to make a portable front end with a markup language

1:49:55.460 --> 1:49:56.460
 for the user interface.

1:49:56.460 --> 1:50:01.460
 Not tables, not HTML, but custom menus and dropdowns and toolbars.

1:50:01.460 --> 1:50:05.460
 And that was called Zool, XML user interface language.

1:50:05.460 --> 1:50:08.460
 And some real talent on the Netscape side delivered that Dave Hyatt,

1:50:08.460 --> 1:50:13.460
 who was instrumental in Zool, Chris Watterson, Joe Hewitt,

1:50:13.460 --> 1:50:15.460
 Blake Ross.

1:50:15.460 --> 1:50:17.460
 And Blake was an intern.

1:50:17.460 --> 1:50:20.460
 He was like a high school aged intern in Netscape.

1:50:20.460 --> 1:50:24.460
 And at some point we were innovating rapidly in the Mozilla world.

1:50:24.460 --> 1:50:28.460
 And Netscape was still caught up in this management mess from these

1:50:28.460 --> 1:50:30.460
 acquisitions and it wasn't delivering.

1:50:30.460 --> 1:50:33.460
 And every year they were wondering if AOL was going to come and start

1:50:33.460 --> 1:50:36.460
 beheading the executive because it didn't do anything useful.

1:50:36.460 --> 1:50:39.460
 And there was a thought you should take the Netscape browser engine

1:50:39.460 --> 1:50:42.460
 and put it in the Windows AOL client, which was the dial up client

1:50:42.460 --> 1:50:45.460
 that all the increasingly aging users of AOL were using.

1:50:45.460 --> 1:50:46.460
 Never happened.

1:50:46.460 --> 1:50:48.460
 It would have been too big a change.

1:50:48.460 --> 1:50:50.460
 So it wasn't clear why AOL bought Netscape, but as I said,

1:50:50.460 --> 1:50:51.460
 they left it alone.

1:50:51.460 --> 1:50:53.460
 But Netscape didn't leave Mozilla alone.

1:50:53.460 --> 1:50:58.460
 And so in 2001, Mitchell called me up and said,

1:50:58.460 --> 1:51:00.460
 I'm no longer employed.

1:51:00.460 --> 1:51:02.460
 And I was like, what? You quit? No, no, this wasn't my choice.

1:51:02.460 --> 1:51:05.460
 And there was a layoff, which maybe accidentally or on purpose,

1:51:05.460 --> 1:51:06.460
 got rid of Mitchell.

1:51:06.460 --> 1:51:08.460
 But the funny thing was we had an open source project.

1:51:08.460 --> 1:51:13.460
 We had a lot of the engineers on staff on our side and we had

1:51:13.460 --> 1:51:16.460
 people we'd hired through the Mozilla community who were top notch.

1:51:16.460 --> 1:51:18.460
 They'd risen, you know, they came in high quality.

1:51:18.460 --> 1:51:21.460
 They knew the code and they actually were better than the average

1:51:21.460 --> 1:51:23.460
 or median higher of Netscape.

1:51:23.460 --> 1:51:27.460
 And so the funny thing was the executive who thought they'd gotten

1:51:27.460 --> 1:51:31.460
 rid of Mitchell in the layoff on the next week's community call

1:51:31.460 --> 1:51:33.460
 around Mozilla and what to do.

1:51:33.460 --> 1:51:34.460
 There's Mitchell.

1:51:34.460 --> 1:51:38.460
 And so this show, you can kind of transcend your, you know,

1:51:38.460 --> 1:51:40.460
 boundaries of corporate open source.

1:51:40.460 --> 1:51:43.460
 If you get a project that has enough loyalty, even among the paid

1:51:43.460 --> 1:51:46.460
 staff, because we had outside people contributing with people

1:51:46.460 --> 1:51:48.460
 at Red Hat and a few other places.

1:51:48.460 --> 1:51:50.460
 But the majority of the hackers were employed by Netscape.

1:51:50.460 --> 1:51:53.460
 But a lot of them at that point had come from the community

1:51:53.460 --> 1:51:55.460
 and others got the community and wanted to work with it.

1:51:55.460 --> 1:51:58.460
 And it was really the weakest engineers at Netscape who didn't

1:51:58.460 --> 1:52:01.460
 like Mozilla and didn't like the crucible of competing with the

1:52:01.460 --> 1:52:03.460
 better programmers.

1:52:03.460 --> 1:52:06.460
 So if the project is good enough, it will rise.

1:52:06.460 --> 1:52:08.460
 The Phoenix will rise out of the...

1:52:08.460 --> 1:52:09.460
 That's exactly right.

1:52:09.460 --> 1:52:11.460
 And so we had this Mozilla code base that was getting better.

1:52:11.460 --> 1:52:15.460
 In fact, I think at some point in 2002 when we declared Mozilla 1.0,

1:52:15.460 --> 1:52:19.460
 I engineered a roadmap that successively through similar sort

1:52:19.460 --> 1:52:22.460
 of six week, five week releases like we all do with browser

1:52:22.460 --> 1:52:26.460
 releases nowadays, Chrome does and Firefox braves us three weeks.

1:52:26.460 --> 1:52:29.460
 We got to a point where we said, you know what?

1:52:29.460 --> 1:52:30.460
 It doesn't suck.

1:52:30.460 --> 1:52:34.460
 This is like the 1.0 that you want to release because if you hold it back

1:52:34.460 --> 1:52:36.460
 any longer to polish it, you're denying others the ability to use it.

1:52:36.460 --> 1:52:40.460
 It's like pro engineer, the mechanical CAD tool embedded the code.

1:52:40.460 --> 1:52:43.460
 They embedded the layout engine.

1:52:43.460 --> 1:52:46.460
 And Mozilla 1.0 was like a Netscape communication suite.

1:52:46.460 --> 1:52:50.460
 We had at that point gotten male people to reintegrate male news.

1:52:50.460 --> 1:52:53.460
 And we had an editor for HTML.

1:52:53.460 --> 1:52:56.460
 And it felt like a 90s suite, a suiteware.

1:52:56.460 --> 1:52:58.460
 And it felt kind of bloated.

1:52:58.460 --> 1:53:02.460
 And the people who were taking that Mozilla open source and then adding

1:53:02.460 --> 1:53:06.460
 Netscape flavor to it were not calling the shots right.

1:53:06.460 --> 1:53:09.460
 And they were also under ALL's thumb a little bit and that they said,

1:53:09.460 --> 1:53:12.460
 we should probably put the ALL instant messenger chicklet on the toolbar.

1:53:12.460 --> 1:53:16.460
 And we should put the ICQ, the other messaging system that ALL had acquired.

1:53:16.460 --> 1:53:19.460
 We should put the ICQ button on the toolbar.

1:53:19.460 --> 1:53:24.460
 And pretty soon Netscape looked like a bit of a NASCAR badged version of Mozilla.

1:53:24.460 --> 1:53:27.460
 And that also made Mozilla more popular.

1:53:27.460 --> 1:53:35.460
 And yet they had contrived to fire or lay off the leader.

1:53:35.460 --> 1:53:39.460
 And we carried on with an open source structure where Mozilla was still,

1:53:39.460 --> 1:53:44.460
 Mitchell was calling management or project level shots.

1:53:44.460 --> 1:53:46.460
 And I was calling technical shots.

1:53:46.460 --> 1:53:50.460
 And we had a popular suite.

1:53:50.460 --> 1:53:52.460
 But we thought, why not make it just a browser?

1:53:52.460 --> 1:53:53.460
 Because it'll be simpler.

1:53:53.460 --> 1:53:55.460
 It'll do one job well.

1:53:55.460 --> 1:53:58.460
 And even then we can strip it down by having extensions.

1:53:58.460 --> 1:54:04.460
 So Dave Hyatt and Blake Ross, the high school aged intern, did the first

1:54:04.460 --> 1:54:07.460
 version, which was called Mozilla slash browser.

1:54:07.460 --> 1:54:14.460
 It was a group of us, Ian Hicks and Asa Dotsler, me, Joe Hewitt and Hyatt and Blake.

1:54:14.460 --> 1:54:16.460
 And Hyatt was really the senior hacker.

1:54:16.460 --> 1:54:20.460
 He'd done all these things like amazing cross platform menus

1:54:20.460 --> 1:54:23.460
 through the user interface market language.

1:54:23.460 --> 1:54:24.460
 And he knew how to do tab browsing.

1:54:24.460 --> 1:54:31.460
 He'd implemented it natively on macOS at the time in Camino, originally called Camara.

1:54:31.460 --> 1:54:36.460
 He'd written multiple limitations, which was a thing programmers should do.

1:54:36.460 --> 1:54:39.460
 It's like the VA team did for those missing years when the rest of the Chrome teams

1:54:39.460 --> 1:54:41.460
 like, where's VA?

1:54:41.460 --> 1:54:45.460
 In fact, Dave's wife, Rebecca, told me a story about when they were at UIUC.

1:54:45.460 --> 1:54:49.460
 They were also University of Illinois grad students.

1:54:49.460 --> 1:54:50.460
 There was an assignment.

1:54:50.460 --> 1:54:51.460
 It was a programming assignment.

1:54:51.460 --> 1:54:53.460
 It was supposed to be due at the end of the semester.

1:54:53.460 --> 1:54:58.460
 And Dave's friend was this, I'm going to go think and I'm going to design and I'm going

1:54:58.460 --> 1:55:01.460
 to make this platonic perfect form of the program.

1:55:01.460 --> 1:55:03.460
 And then I'm going to write it at the end when it's due.

1:55:03.460 --> 1:55:05.460
 And Hyatt just went there and started hacking.

1:55:05.460 --> 1:55:07.460
 He wrote one version, he wrote a second version, a third version.

1:55:07.460 --> 1:55:09.460
 The end of the semester comes around.

1:55:09.460 --> 1:55:10.460
 The friend's not doing too well.

1:55:10.460 --> 1:55:12.460
 It wasn't perfect and it wasn't written.

1:55:12.460 --> 1:55:14.460
 I'm not sure how that story ended, but for him,

1:55:14.460 --> 1:55:16.460
 but Dave's version was a fifth iteration.

1:55:16.460 --> 1:55:17.460
 It was great.

1:55:17.460 --> 1:55:21.460
 And so he'd done that with everything you needed in a tabbed browser.

1:55:21.460 --> 1:55:24.460
 And this really showed well in Phoenix, what we called Phoenix,

1:55:24.460 --> 1:55:27.460
 and I had to rename two more times.

1:55:27.460 --> 1:55:30.460
 And Blake went to Stanford.

1:55:30.460 --> 1:55:33.460
 He became a Stanford student and couldn't work on it.

1:55:33.460 --> 1:55:36.460
 Dave Hyatt went to Apple in 2001.

1:55:36.460 --> 1:55:39.460
 He was one of the founding Safari team members.

1:55:39.460 --> 1:55:40.460
 Interesting.

1:55:40.460 --> 1:55:41.460
 Wow.

1:55:41.460 --> 1:55:43.460
 But he was still blogging about tabbed browsing.

1:55:43.460 --> 1:55:45.460
 I think Apple at some point said,

1:55:45.460 --> 1:55:46.460
 Safari have tabbed browsing?

1:55:46.460 --> 1:55:47.460
 Yeah.

1:55:47.460 --> 1:55:48.460
 But it was because of Hyatt.

1:55:48.460 --> 1:55:50.460
 Hyatt was quite a feather in their cap.

1:55:50.460 --> 1:55:53.460
 Don Melton, who had been the engineering manager at

1:55:53.460 --> 1:55:56.460
 for Safari from the beginning, had been in Netscape also.

1:55:56.460 --> 1:55:59.460
 And so there's just a diaspora of talent.

1:55:59.460 --> 1:56:01.460
 And yet Hyatt was still kind of writing blog posts

1:56:01.460 --> 1:56:03.460
 about how to do tabs, right?

1:56:03.460 --> 1:56:05.460
 And at some point Apple said, don't blog about that.

1:56:05.460 --> 1:56:07.460
 That's our proprietary tab technology.

1:56:07.460 --> 1:56:09.460
 And I was like, no, it's not.

1:56:09.460 --> 1:56:10.460
 It was an opera.

1:56:10.460 --> 1:56:11.460
 And I refined it.

1:56:11.460 --> 1:56:13.460
 So we had to replace people.

1:56:13.460 --> 1:56:17.460
 And we had Ben Goodger, a New Zealander.

1:56:17.460 --> 1:56:18.460
 We hired at Netscape.

1:56:18.460 --> 1:56:21.460
 And he stepped in to be the Firefox lead.

1:56:21.460 --> 1:56:25.460
 And we also had this weird circumstance where AOL finally

1:56:25.460 --> 1:56:28.460
 did notice that Netscape was kind of an albatross,

1:56:28.460 --> 1:56:31.460
 that they bought it for no particular benefit.

1:56:31.460 --> 1:56:34.460
 And even then the AOL politics were also heinous,

1:56:34.460 --> 1:56:35.460
 sort of East Coast politics.

1:56:35.460 --> 1:56:37.460
 And we were taking two trips there because I was a principal

1:56:37.460 --> 1:56:38.460
 engineer.

1:56:38.460 --> 1:56:40.460
 And so as principal engineers got trotted out to do dog and pony

1:56:40.460 --> 1:56:45.460
 shows in Dallas, Virginia, and the AOL for management was

1:56:45.460 --> 1:56:46.460
 very East Coast in flavor.

1:56:46.460 --> 1:56:49.460
 And they were at that time merging with Time Warner,

1:56:49.460 --> 1:56:50.460
 which would not go well.

1:56:50.460 --> 1:56:52.460
 So one of these years we went out there and we were all doing

1:56:52.460 --> 1:56:53.460
 dog and pony shows.

1:56:53.460 --> 1:56:55.460
 And there were these characters that were sort of like

1:56:55.460 --> 1:56:57.460
 marketing guys, one of the most wearing a cravat.

1:56:57.460 --> 1:56:59.460
 And one of them was named Reggie.

1:56:59.460 --> 1:57:05.460
 And they were very you rather than non you,

1:57:05.460 --> 1:57:08.460
 or they were like what's still in metropolitan film,

1:57:08.460 --> 1:57:13.460
 UHB, urban, oh, bourgeoisie.

1:57:13.460 --> 1:57:18.460
 They were funny and they were kind of useless and kind of

1:57:18.460 --> 1:57:19.460
 preppy.

1:57:19.460 --> 1:57:21.460
 And then the next year we went back and I said,

1:57:21.460 --> 1:57:22.460
 where's Reggie?

1:57:22.460 --> 1:57:24.460
 And it's like, oh, Reggie's not here anymore because Time Warner

1:57:24.460 --> 1:57:27.460
 realized that the merger wasn't in their interest either.

1:57:27.460 --> 1:57:28.460
 And then the sort of knives came out.

1:57:28.460 --> 1:57:31.460
 And these mergers rarely work, right?

1:57:31.460 --> 1:57:32.460
 This is very difficult.

1:57:32.460 --> 1:57:34.460
 You get these giant companies and they think there's going

1:57:34.460 --> 1:57:35.460
 to be synergy.

1:57:35.460 --> 1:57:37.460
 That was the late 90s watchword.

1:57:37.460 --> 1:57:39.460
 And there wasn't synergy with AOL buying Netscape.

1:57:39.460 --> 1:57:41.460
 And there wasn't synergy with Time Warner and AOL.

1:57:41.460 --> 1:57:42.460
 But did AOL ever really work?

1:57:42.460 --> 1:57:44.460
 Was it ever really cool?

1:57:44.460 --> 1:57:47.460
 Like the same kind of fire and excitement that Firefox

1:57:47.460 --> 1:57:50.460
 eventually created, was that ever there in AOL?

1:57:50.460 --> 1:57:55.460
 AOL was the right time to do a dial up service that got

1:57:55.460 --> 1:57:59.460
 distribution by basically leaflet bombing compact discs on

1:57:59.460 --> 1:58:00.460
 the country.

1:58:00.460 --> 1:58:04.460
 And they beat out CompuServe and the other ones,

1:58:04.460 --> 1:58:05.460
 Prodigy.

1:58:05.460 --> 1:58:06.460
 And then the web happened.

1:58:06.460 --> 1:58:10.460
 And so you had almost like this isolated continent.

1:58:10.460 --> 1:58:14.460
 Like some of the evolutionary biologists I follow make fun

1:58:14.460 --> 1:58:19.460
 of the funny large marsupial mammals of Australia,

1:58:19.460 --> 1:58:21.460
 how silly they are.

1:58:21.460 --> 1:58:23.460
 So AOL is like Australia.

1:58:23.460 --> 1:58:26.460
 And you saw it over time because they kept aging and they

1:58:26.460 --> 1:58:29.460
 were using AOL to get online and they couldn't really use

1:58:29.460 --> 1:58:30.460
 a web browser.

1:58:30.460 --> 1:58:33.460
 And it became sort of a valued cohort because they still

1:58:33.460 --> 1:58:36.460
 have relatively high socioeconomic status and they

1:58:36.460 --> 1:58:37.460
 have grandchildren.

1:58:37.460 --> 1:58:38.460
 But it's going away.

1:58:38.460 --> 1:58:39.460
 It's dying at some point.

1:58:39.460 --> 1:58:42.460
 Towards the end of the aughts that decade and then to the

1:58:42.460 --> 1:58:48.460
 decade 2010 plus that Firefox became this incredible.

1:58:48.460 --> 1:58:50.460
 I forget when Chrome came out.

1:58:50.460 --> 1:58:51.460
 2008 September.

1:58:51.460 --> 1:58:55.460
 But Firefox was the sexy, cool thing that represented a

1:58:55.460 --> 1:58:57.460
 lot of the cutting edge technologies and all that kind

1:58:57.460 --> 1:58:58.460
 of stuff.

1:58:58.460 --> 1:58:59.460
 It was amazing.

1:58:59.460 --> 1:59:02.460
 Tim O'Malley and John Battelle did the first Web 2

1:59:02.460 --> 1:59:04.460
 conference, which eventually became huge and they split

1:59:04.460 --> 1:59:05.460
 it.

1:59:05.460 --> 1:59:06.460
 But that was in 2004.

1:59:06.460 --> 1:59:08.460
 It was right when Firefox was out.

1:59:08.460 --> 1:59:09.460
 Craigslist was huge.

1:59:09.460 --> 1:59:12.460
 It was killing classified revenue for newspapers.

1:59:12.460 --> 1:59:14.460
 But there was just this ferment.

1:59:14.460 --> 1:59:16.460
 People starting Wikipedia along there somewhere.

1:59:16.460 --> 1:59:19.460
 Gmail was already done and it was an impressive Web mail.

1:59:19.460 --> 1:59:21.460
 There were others before it like Hotmail, but Gmail was

1:59:21.460 --> 1:59:23.460
 really impressive from Google and Google Maps.

1:59:23.460 --> 1:59:25.460
 People started seeing what could be done.

1:59:25.460 --> 1:59:28.460
 They thought, how can you drag the map around and how does

1:59:28.460 --> 1:59:29.460
 that work?

1:59:29.460 --> 1:59:31.460
 And it was all JavaScript and images.

1:59:31.460 --> 1:59:33.460
 So Gmail was 2003, 2004?

1:59:33.460 --> 1:59:35.460
 Yeah, it actually started quite early.

1:59:35.460 --> 1:59:37.460
 It might have been 2002 or three.

1:59:37.460 --> 1:59:39.460
 But by the time we started dealing with Google and Firefox

1:59:39.460 --> 1:59:42.460
 to get the search deal, which was the main revenue source

1:59:42.460 --> 1:59:45.460
 for Mozilla and still is 2004.

1:59:45.460 --> 1:59:49.460
 Early Sergey Brins, one of his trusted engineer guys,

1:59:49.460 --> 1:59:51.460
 Fritz Schneider, made contact with me at Mozilla.

1:59:51.460 --> 1:59:55.460
 And we started talking and we realized search and browser

1:59:55.460 --> 1:59:56.460
 need each other.

1:59:56.460 --> 1:59:58.460
 And this is deeply true, right?

1:59:58.460 --> 1:59:59.460
 This is still true.

1:59:59.460 --> 2:00:01.460
 This is why a lot of the search engines have their own

2:00:01.460 --> 2:00:02.460
 browsers.

2:00:02.460 --> 2:00:04.460
 Yeah, so in case people don't know, the main revenue source

2:00:04.460 --> 2:00:07.460
 for the browser is the default search engine, which is kind

2:00:07.460 --> 2:00:09.460
 of incredible to think about.

2:00:09.460 --> 2:00:11.460
 That is a revenue source.

2:00:11.460 --> 2:00:12.460
 It's a little bit sad.

2:00:12.460 --> 2:00:14.460
 Yeah, it leads to this capture or kill effect where you

2:00:14.460 --> 2:00:16.460
 have the search engine own its own browser.

2:00:16.460 --> 2:00:20.460
 And other browsers may struggle to get this distribution

2:00:20.460 --> 2:00:21.460
 we talked about earlier.

2:00:21.460 --> 2:00:22.460
 Yeah.

2:00:22.460 --> 2:00:27.460
 So where, and you said you've figured out that Google is

2:00:27.460 --> 2:00:29.460
 working on its own browser at some point.

2:00:29.460 --> 2:00:30.460
 2006, yeah.

2:00:30.460 --> 2:00:31.460
 2006.

2:00:31.460 --> 2:00:33.460
 So would you say Firefox versus, was Internet Explorer

2:00:33.460 --> 2:00:36.460
 part of the war here or was the Firefox versus Chrome?

2:00:36.460 --> 2:00:40.460
 So Firefox didn't quite cause Microsoft to reconvene IE.

2:00:40.460 --> 2:00:42.460
 They did do IE7.

2:00:42.460 --> 2:00:45.460
 And I remember being on a plane back from the standards

2:00:45.460 --> 2:00:48.460
 meeting, the JavaScript standards meeting from Seattle

2:00:48.460 --> 2:00:49.460
 from Redmond.

2:00:49.460 --> 2:00:52.460
 And there was some Microsoft guy in front of me.

2:00:52.460 --> 2:00:55.460
 It turns out my wife knew him from her past life before

2:00:55.460 --> 2:00:56.460
 we married.

2:00:56.460 --> 2:00:58.460
 And he was just this bearded big guy.

2:00:58.460 --> 2:01:00.460
 And he was like, we should have just killed Firefox

2:01:00.460 --> 2:01:01.460
 in the cradle.

2:01:01.460 --> 2:01:04.460
 All we needed to do was add pop up walking in and tabs.

2:01:04.460 --> 2:01:06.460
 And we could have made Internet Explorer kill Firefox.

2:01:06.460 --> 2:01:08.460
 And it's like, should have cut a wood up, pal.

2:01:08.460 --> 2:01:10.460
 And I was right behind him hearing this.

2:01:10.460 --> 2:01:11.460
 But they didn't.

2:01:11.460 --> 2:01:13.460
 And IE7 wasn't that great.

2:01:13.460 --> 2:01:18.460
 And what really got them started, I think, was Chrome.

2:01:18.460 --> 2:01:21.460
 And I talked to Larry Page in 2005.

2:01:21.460 --> 2:01:24.460
 I think I said, we're talking about the Firefox relationship.

2:01:24.460 --> 2:01:26.460
 But he was also saying, what a web kit.

2:01:26.460 --> 2:01:30.460
 This was Apple's version of the old K HTML engine

2:01:30.460 --> 2:01:35.460
 from Linux, the KDE side of Linux that was used in the Conqueror

2:01:35.460 --> 2:01:38.460
 browser, all spelled Ks, that Apple had forked.

2:01:38.460 --> 2:01:42.460
 And in 2005 was when Apple's principles, including Dave Hyatt,

2:01:42.460 --> 2:01:44.460
 Maches de Covex, some of my friends who were still there,

2:01:44.460 --> 2:01:48.460
 said, we must stop patch bombing this poor K HTML project.

2:01:48.460 --> 2:01:51.460
 We should make a proper Mozilla like organization WebKit.org.

2:01:51.460 --> 2:01:53.460
 Now, it wasn't a separate nonprofit or anything.

2:01:53.460 --> 2:01:54.460
 It was still Apple.

2:01:54.460 --> 2:01:55.460
 It was Apple controlled.

2:01:55.460 --> 2:01:58.460
 But they made their fork first class.

2:01:58.460 --> 2:02:00.460
 And they made it be something that they all worked in

2:02:00.460 --> 2:02:01.460
 and lived in.

2:02:01.460 --> 2:02:02.460
 And that was before Chrome.

2:02:02.460 --> 2:02:05.460
 And then Chrome, Larry Page said, what about WebKit?

2:02:05.460 --> 2:02:06.460
 I said, yeah, it's nice.

2:02:06.460 --> 2:02:07.460
 I have friends who work on it.

2:02:07.460 --> 2:02:09.460
 You might use that if you do your own browser.

2:02:09.460 --> 2:02:10.460
 Why don't you do your own browser?

2:02:10.460 --> 2:02:11.460
 Don't worry about Firefox.

2:02:11.460 --> 2:02:12.460
 You should do your own browser.

2:02:12.460 --> 2:02:15.460
 You can have your own opinion of how it should work.

2:02:15.460 --> 2:02:16.460
 And sure enough, they did.

2:02:16.460 --> 2:02:18.460
 So by 2006, we knew they'd been working on it.

2:02:18.460 --> 2:02:22.460
 Some of my friends who'd been at Netscape did the original demo.

2:02:22.460 --> 2:02:23.460
 And the demo wasn't what you thought.

2:02:23.460 --> 2:02:25.460
 It didn't have the fast JavaScript yet.

2:02:25.460 --> 2:02:28.460
 That was still often Denmark in the farm.

2:02:28.460 --> 2:02:30.460
 Did it have tabs?

2:02:30.460 --> 2:02:32.460
 It had tabs because all browsers had tabs at this point.

2:02:32.460 --> 2:02:37.460
 And it had this software fault isolation I mentioned.

2:02:37.460 --> 2:02:39.460
 It was through process isolation.

2:02:39.460 --> 2:02:43.460
 So in theory, each tab has its own operating system process.

2:02:43.460 --> 2:02:45.460
 And so what's going to take your tab down?

2:02:45.460 --> 2:02:48.460
 Well, WebKit has bugs that can crash it.

2:02:48.460 --> 2:02:49.460
 But Flash was still big then.

2:02:49.460 --> 2:02:51.460
 All the restaurant sites, remember?

2:02:51.460 --> 2:02:53.460
 And Flash crashed a lot.

2:02:53.460 --> 2:02:56.460
 So the demo that I heard about my friends at Netscape,

2:02:56.460 --> 2:03:00.460
 as a lot of people did, inside Google was the sad tab.

2:03:00.460 --> 2:03:02.460
 They showed an early version of Chrome,

2:03:02.460 --> 2:03:04.460
 which is this bare bones tab browser.

2:03:04.460 --> 2:03:06.460
 They loaded a site with a known Flash bone,

2:03:06.460 --> 2:03:08.460
 and then suddenly Flash crashes.

2:03:08.460 --> 2:03:10.460
 And everyone expected the whole browser to go down.

2:03:10.460 --> 2:03:13.460
 But instead, you got this little sad face in the tab.

2:03:13.460 --> 2:03:14.460
 And you could reload it.

2:03:14.460 --> 2:03:15.460
 And there it is again.

2:03:15.460 --> 2:03:16.460
 So this was an improvement.

2:03:16.460 --> 2:03:18.460
 It was a real move for security.

2:03:18.460 --> 2:03:22.460
 It was based on a company they acquired called Green Border.

2:03:22.460 --> 2:03:24.460
 They had some really big brains, like Olfar Erelingson,

2:03:24.460 --> 2:03:25.460
 I think was involved.

2:03:25.460 --> 2:03:28.460
 And they had done some exotic security stuff.

2:03:28.460 --> 2:03:31.460
 But they ended up simplifying it to this process isolation.

2:03:31.460 --> 2:03:34.460
 And it was good.

2:03:34.460 --> 2:03:36.460
 And Firefox didn't have it at the time.

2:03:36.460 --> 2:03:41.460
 So we were still struggling with security bugs.

2:03:41.460 --> 2:03:42.460
 So we knew Chrome was coming,

2:03:42.460 --> 2:03:44.460
 but it took two more years to come out.

2:03:44.460 --> 2:03:48.460
 And we were still getting the Google search revenue.

2:03:48.460 --> 2:03:51.460
 We were still making Google the default engine.

2:03:51.460 --> 2:03:52.460
 And Firefox was still growing.

2:03:52.460 --> 2:03:54.460
 Firefox grew, I think, until 2011.

2:03:54.460 --> 2:03:56.460
 That was when it peaked.

2:03:56.460 --> 2:03:59.460
 And as it started falling, it was because of Chrome.

2:03:59.460 --> 2:04:01.460
 Chrome came out in 2008.

2:04:01.460 --> 2:04:03.460
 And it had a comic book that leaked accidentally

2:04:03.460 --> 2:04:05.460
 that showed some of the people who worked on it.

2:04:05.460 --> 2:04:07.460
 Lars Bock was in there and so on.

2:04:07.460 --> 2:04:10.460
 It was kind of soft launch because they didn't market it heavily.

2:04:10.460 --> 2:04:12.460
 They didn't push distribution.

2:04:12.460 --> 2:04:14.460
 But Google had reason to worry about distribution

2:04:14.460 --> 2:04:18.460
 because Microsoft was, you know, doing a search engine,

2:04:18.460 --> 2:04:20.460
 Bing since 2007.

2:04:20.460 --> 2:04:21.460
 In fact, when they came out with Bing,

2:04:21.460 --> 2:04:24.460
 Google was worried that Microsoft would just brute force

2:04:24.460 --> 2:04:28.460
 switch the default browser and everyone's Internet Explorer

2:04:28.460 --> 2:04:32.460
 or even Firefox on Windows to Bing from Google.

2:04:32.460 --> 2:04:34.460
 And Microsoft wasn't, I think,

2:04:34.460 --> 2:04:36.460
 ready to dare the antitrust cops that way,

2:04:36.460 --> 2:04:38.460
 even though they'd gone to sleep.

2:04:38.460 --> 2:04:41.460
 And I don't think Bing was ready either.

2:04:41.460 --> 2:04:43.460
 But just in case it happened,

2:04:43.460 --> 2:04:47.460
 Sundar Pichai, who rose very well based on this work,

2:04:47.460 --> 2:04:50.460
 was sort of in charge of getting distribution deals.

2:04:50.460 --> 2:04:55.460
 And he got Google toolbar and Google desktop search distribution.

2:04:55.460 --> 2:04:56.460
 And remember those pieces of software?

2:04:56.460 --> 2:04:59.460
 Those were like desktop extensions,

2:04:59.460 --> 2:05:01.460
 toolbars or operating system extensions

2:05:01.460 --> 2:05:03.460
 for doing desktop search, searching your local files,

2:05:03.460 --> 2:05:05.460
 kind of like macOS spotlight, right?

2:05:05.460 --> 2:05:07.460
 Sadly, died of doubt.

2:05:07.460 --> 2:05:08.460
 It all died.

2:05:08.460 --> 2:05:09.460
 And there were some features that we still missed

2:05:09.460 --> 2:05:10.460
 that didn't make it into Chrome.

2:05:10.460 --> 2:05:13.460
 But Sundar got OEMs to bundle those.

2:05:13.460 --> 2:05:15.460
 And then he got enough of those deals

2:05:15.460 --> 2:05:17.460
 that by 2007 or 2008, Google felt,

2:05:17.460 --> 2:05:21.460
 well, if Microsoft does the worst and tries to force Bing,

2:05:21.460 --> 2:05:25.460
 we can reach in and reset it with that point of presence.

2:05:25.460 --> 2:05:27.460
 So that was good for Sundar's career.

2:05:27.460 --> 2:05:28.460
 And it was good for Google,

2:05:28.460 --> 2:05:30.460
 but it never came to pass that they had to defend.

2:05:30.460 --> 2:05:32.460
 Microsoft was still slow.

2:05:32.460 --> 2:05:34.460
 And by the time they saw Chrome come out,

2:05:34.460 --> 2:05:37.460
 then they did what would have been IE9.

2:05:37.460 --> 2:05:38.460
 And then they said,

2:05:38.460 --> 2:05:40.460
 we're going to have a fast JavaScript engine to Chakra,

2:05:40.460 --> 2:05:41.460
 Chakra Core.

2:05:41.460 --> 2:05:43.460
 And they did okay.

2:05:43.460 --> 2:05:47.460
 So that was another process isolated fast JavaScript browser,

2:05:47.460 --> 2:05:48.460
 tab browser.

2:05:48.460 --> 2:05:52.460
 So it sounds like there's a deep fundamental coupling

2:05:52.460 --> 2:05:53.460
 of search engine and browser

2:05:53.460 --> 2:05:55.460
 that's mixing this whole thing up.

2:05:55.460 --> 2:05:59.460
 And obviously Firefox doesn't have a search engine.

2:05:59.460 --> 2:06:03.460
 That's like, I mean, you're partnering with somebody

2:06:03.460 --> 2:06:04.460
 with a search engine.

2:06:04.460 --> 2:06:05.460
 Yeah.

2:06:05.460 --> 2:06:08.460
 With Yahoo or with Google or so on.

2:06:08.460 --> 2:06:09.460
 They tried Yahoo.

2:06:09.460 --> 2:06:11.460
 That was unfortunate because I think,

2:06:11.460 --> 2:06:14.460
 even though Marissa Mayer talked about it,

2:06:14.460 --> 2:06:17.460
 she never pulled it off and never restored the search team

2:06:17.460 --> 2:06:19.460
 that had been laid off.

2:06:19.460 --> 2:06:22.460
 I believe Carol Bartz was running Yahoo when Carol said,

2:06:22.460 --> 2:06:24.460
 I've got to get rid of one of the three expensive things.

2:06:24.460 --> 2:06:25.460
 I'm going to get rid of search.

2:06:25.460 --> 2:06:29.460
 And those researchers went to Google and Microsoft.

2:06:29.460 --> 2:06:32.460
 And there was no way to put Yahoo search back together.

2:06:32.460 --> 2:06:36.460
 So when Firefox tried switching all their users who'd stuck

2:06:36.460 --> 2:06:38.460
 with a default from Google to Yahoo,

2:06:38.460 --> 2:06:41.460
 like mid December 2014, a bunch of users said,

2:06:41.460 --> 2:06:43.460
 what just happened to my Firefox?

2:06:43.460 --> 2:06:44.460
 And others didn't notice right away,

2:06:44.460 --> 2:06:45.460
 but over time they did.

2:06:45.460 --> 2:06:47.460
 And so over the next year,

2:06:47.460 --> 2:06:50.460
 the traffic just went away for Yahoo.

2:06:50.460 --> 2:06:52.460
 And yet they were obliged.

2:06:52.460 --> 2:06:53.460
 I understand it.

2:06:53.460 --> 2:06:55.460
 I don't have inside knowledge,

2:06:55.460 --> 2:06:56.460
 but this is leaked out.

2:06:56.460 --> 2:06:58.460
 And Danny Sullivan's written about it, search engine land.

2:06:58.460 --> 2:07:00.460
 I think the deal was like fixed payments to Mozilla.

2:07:00.460 --> 2:07:02.460
 So Mozilla was getting a bunch of money for traffic

2:07:02.460 --> 2:07:05.460
 that wasn't staying because users were resetting their default.

2:07:05.460 --> 2:07:08.460
 And this shows how defaults are important,

2:07:08.460 --> 2:07:11.460
 but they have to be good enough that the user doesn't override them.

2:07:11.460 --> 2:07:15.460
 And a lot of the commercial value in popular apps

2:07:15.460 --> 2:07:17.460
 is one of the default settings.

2:07:17.460 --> 2:07:19.460
 What is the default search?

2:07:19.460 --> 2:07:21.460
 But oftentimes there's something just like you said.

2:07:21.460 --> 2:07:24.460
 I mean, if there's something compelling,

2:07:24.460 --> 2:07:28.460
 that's also can beat out the default like tab browser and so on.

2:07:28.460 --> 2:07:31.460
 And that's where, I mean, we'll talk about Brave browser.

2:07:31.460 --> 2:07:35.460
 It feels like now we're in this third stage

2:07:35.460 --> 2:07:42.460
 where there's Chrome, Firefox, Edge, I guess it's called,

2:07:42.460 --> 2:07:47.460
 and Brave, and these all seem like really exciting,

2:07:47.460 --> 2:07:50.460
 I don't know, innovative browsers.

2:07:50.460 --> 2:07:52.460
 They're all kind of copying off of each other,

2:07:52.460 --> 2:07:53.460
 picking up the good stuff.

2:07:53.460 --> 2:07:56.460
 There's evolution again, especially on tracking protection.

2:07:56.460 --> 2:08:02.460
 Privacy is this sort of global wave that's rising.

2:08:02.460 --> 2:08:04.460
 I like to call it a wave because it's a large,

2:08:04.460 --> 2:08:06.460
 somewhat chaotic structure.

2:08:06.460 --> 2:08:08.460
 It's not a unitary good.

2:08:08.460 --> 2:08:11.460
 You can't say, I'm buying privacy for $3.

2:08:11.460 --> 2:08:12.460
 I'm paying $3 privacy.

2:08:12.460 --> 2:08:15.460
 Some people think a VPN does this and are disappointed when it fails them,

2:08:15.460 --> 2:08:19.460
 but often people use VPNs for region unlocking video

2:08:19.460 --> 2:08:21.460
 or getting the US Netflix catalog.

2:08:21.460 --> 2:08:22.460
 Exactly.

2:08:22.460 --> 2:08:24.460
 But privacy is not a unitary good.

2:08:24.460 --> 2:08:27.460
 It's complex and people are understanding it only over time

2:08:27.460 --> 2:08:28.460
 and as they get burned.

2:08:28.460 --> 2:08:31.460
 But there's a genie that's not going back in the bottle there.

2:08:31.460 --> 2:08:32.460
 People are fed up.

2:08:32.460 --> 2:08:34.460
 Apple has responded to this.

2:08:34.460 --> 2:08:36.460
 Apple was always making Safari, I think,

2:08:36.460 --> 2:08:40.460
 more of a privacy branded browser from the very beginning.

2:08:40.460 --> 2:08:41.460
 I think this was probably Steve Jobs.

2:08:41.460 --> 2:08:47.460
 Safari had private Windows, private tabs before Firefox did.

2:08:47.460 --> 2:08:52.460
 And these are only private in the sense that they don't leave local traces,

2:08:52.460 --> 2:08:55.460
 if you don't want them to, turns out Safari does keep them around

2:08:55.460 --> 2:08:56.460
 between shutdown.

2:08:56.460 --> 2:09:01.460
 But the canonical model is no local traces after you close the private window.

2:09:01.460 --> 2:09:05.460
 No leftover traces that you went to some site that you were embarrassed by

2:09:05.460 --> 2:09:09.460
 or bought a gift for somebody you wanted to keep secret.

2:09:09.460 --> 2:09:11.460
 But there's still some level of tracking.

2:09:11.460 --> 2:09:14.460
 There's network tracking.

2:09:14.460 --> 2:09:16.460
 Network privacy is not guaranteed at all

2:09:16.460 --> 2:09:19.460
 because you're using the same internet and ISP as a public window,

2:09:19.460 --> 2:09:20.460
 a non private window.

2:09:20.460 --> 2:09:22.460
 But Safari had that early on.

2:09:22.460 --> 2:09:27.460
 They also had a cookie blocking policy that might take a little explaining.

2:09:27.460 --> 2:09:29.460
 When you, if you know what a cookie is,

2:09:29.460 --> 2:09:32.460
 it's a little bit of storage in the browser indexed by the name of the site.

2:09:32.460 --> 2:09:39.460
 And it's really only the main name of the site, like bfa.com or, you know,

2:09:39.460 --> 2:09:42.460
 something like npr.org.

2:09:42.460 --> 2:09:45.460
 Every site can store some information in a cookie.

2:09:45.460 --> 2:09:48.460
 Every time it's contacted by the browser,

2:09:48.460 --> 2:09:52.460
 the previous version is sent back and in the response from the server,

2:09:52.460 --> 2:09:53.460
 the cookies updated.

2:09:53.460 --> 2:09:57.460
 So it's this little bit of storage in the browser that the site can keep updating

2:09:57.460 --> 2:10:03.460
 and it can store an encrypted version of your login credentials with a time stamp

2:10:03.460 --> 2:10:08.460
 so you can stay logged in without having to retype your password every time you navigate,

2:10:08.460 --> 2:10:10.460
 which is how it would be if you didn't have cookies.

2:10:10.460 --> 2:10:15.460
 The web protocols, especially in the 90s, are so called stateless protocols.

2:10:15.460 --> 2:10:20.460
 So you go to your bank, you log in, you go from your login confirmed page

2:10:20.460 --> 2:10:21.460
 to your account view.

2:10:21.460 --> 2:10:24.460
 If you didn't have a cookie, you'd be logging in again.

2:10:24.460 --> 2:10:26.460
 Every time you type in a cell.

2:10:26.460 --> 2:10:27.460
 So that was a great thing about cookies.

2:10:27.460 --> 2:10:30.460
 Lumontually did it in a hurry in 1994 before I joined that escape

2:10:30.460 --> 2:10:34.460
 and he did it for really holding that kind of credential.

2:10:34.460 --> 2:10:38.460
 But even then, there was the image element embedded in the page

2:10:38.460 --> 2:10:41.460
 and the image gets fetched possibly from a different server

2:10:41.460 --> 2:10:45.460
 and that request carries the last cookie, which could be empty at first

2:10:45.460 --> 2:10:47.460
 and the response carries the updated cookie.

2:10:47.460 --> 2:10:50.460
 So just by having images and cookies yet tracking

2:10:50.460 --> 2:10:54.460
 because that image server can be serving a little one by one pixel

2:10:54.460 --> 2:10:56.460
 and they still use the word pixel on ad tech

2:10:56.460 --> 2:11:00.460
 and that pixel can be served from the same server embedded differently

2:11:00.460 --> 2:11:03.460
 with different URL spellings in the New York Times and ESPN.

2:11:03.460 --> 2:11:06.460
 And as you go from one to the other, the image server can say,

2:11:06.460 --> 2:11:08.460
 I haven't got a cookie for you.

2:11:08.460 --> 2:11:09.460
 It's empty initially.

2:11:09.460 --> 2:11:11.460
 I'm going to assign you user number one, two, three, four.

2:11:11.460 --> 2:11:13.460
 I'm going to put a database entry in.

2:11:13.460 --> 2:11:16.460
 And I see by the way, I always fetch the name of the path part of the URL

2:11:16.460 --> 2:11:17.460
 that I was in the New York Times.

2:11:17.460 --> 2:11:19.460
 So you're a New York Times reader.

2:11:19.460 --> 2:11:21.460
 And then you hit ESPN, same thing.

2:11:21.460 --> 2:11:25.460
 And the database gets updated and the number user one, two, three, four indexes

2:11:25.460 --> 2:11:27.460
 in the database to a profile of you.

2:11:27.460 --> 2:11:28.460
 You've been tracked.

2:11:28.460 --> 2:11:29.460
 This was not intended.

2:11:29.460 --> 2:11:32.460
 And it was too late to undo by the time I got the Netscape.

2:11:32.460 --> 2:11:35.460
 I think Lou wanted to do Twinkies, he called them in.

2:11:35.460 --> 2:11:37.460
 He was trying to solve several problems.

2:11:37.460 --> 2:11:40.460
 He wanted them to be bigger because initially cookies had a short size limit.

2:11:40.460 --> 2:11:42.460
 I think he wanted to solve the third party problem,

2:11:42.460 --> 2:11:46.460
 but Tom Paiklin, the engineering manager said, no, no Twinkies, just cookies.

2:11:46.460 --> 2:11:47.460
 We're done.

2:11:47.460 --> 2:11:48.460
 You're done, son.

2:11:48.460 --> 2:11:51.460
 And that's how a lot of that stuff was.

2:11:51.460 --> 2:11:55.460
 That's how JavaScript, you know, got frozen like a flying amber in some ways

2:11:55.460 --> 2:11:58.460
 with that sloppy equality operator that I made because the early adopters.

2:11:58.460 --> 2:12:01.460
 And the cookie got stuck with this tracking hazard.

2:12:01.460 --> 2:12:05.460
 And then because JavaScripts can be like images, they're embedded in the page.

2:12:05.460 --> 2:12:08.460
 By the time of Netscape 3, I made that work.

2:12:08.460 --> 2:12:11.460
 You can get a request with the last cookie value and the response updates it.

2:12:11.460 --> 2:12:12.460
 That's a tracking mechanism.

2:12:12.460 --> 2:12:14.460
 And that's why you don't even need images to track.

2:12:14.460 --> 2:12:16.460
 Now you just use scripts.

2:12:16.460 --> 2:12:19.460
 So this whole tracking economy evolved.

2:12:19.460 --> 2:12:25.460
 And it depended on these accidents of the 90s, these unintended consequences.

2:12:25.460 --> 2:12:27.460
 Well, it created some of the richest companies in the world, right?

2:12:27.460 --> 2:12:28.460
 I mean, it's the social media.

2:12:28.460 --> 2:12:30.460
 All I got was t shirts.

2:12:30.460 --> 2:12:32.460
 All I got is this crappy t shirt.

2:12:32.460 --> 2:12:33.460
 Yeah.

2:12:33.460 --> 2:12:39.460
 I mean, so that's, that's the fundamental problem the world is facing now.

2:12:39.460 --> 2:12:43.460
 They're looking at what social media has created and they're looking at,

2:12:43.460 --> 2:12:50.460
 and like a world is looking itself in the mirror and seeing that privacy is actually something.

2:12:50.460 --> 2:12:53.460
 It's supposed to like a nice thing to have.

2:12:53.460 --> 2:13:00.460
 It's something that is actually should be fundamental to the way we interact with the world as part of our tooling.

2:13:00.460 --> 2:13:03.460
 And that's where the brave browser comes in.

2:13:03.460 --> 2:13:07.460
 And I suppose others as well will play with this idea, but brave is at the forefront of that.

2:13:07.460 --> 2:13:14.460
 So maybe can you like describe what brave is and what are its key principles and what's broken

2:13:14.460 --> 2:13:16.460
 and what is it brave trying to fix?

2:13:16.460 --> 2:13:21.460
 So when I realized that these accidents, like the third party cookie, the image or script that's tracking you,

2:13:21.460 --> 2:13:28.460
 or the java scripts that can do it invisibly now, that all this stuff wasn't intended

2:13:28.460 --> 2:13:32.460
 and that Firefox had supported extensions that block some of these things,

2:13:32.460 --> 2:13:37.460
 I thought probably we should have browsers just block some of these things by default.

2:13:37.460 --> 2:13:39.460
 These were not intended and they're now unsafe.

2:13:39.460 --> 2:13:40.460
 They're tracking you.

2:13:40.460 --> 2:13:49.460
 There could be data breaches, malware distribution, you know, bullying and PSI ops and other attacks on people.

2:13:49.460 --> 2:13:50.460
 Block that stuff.

2:13:50.460 --> 2:13:51.460
 Block that JavaScript.

2:13:51.460 --> 2:13:52.460
 I'm Dr. Frankenstein.

2:13:52.460 --> 2:13:54.460
 I've got to deal with the monster here.

2:13:54.460 --> 2:13:59.460
 But obviously you go to Gmail, there's a bunch of script there to make that amazing web client.

2:13:59.460 --> 2:14:00.460
 That's okay.

2:14:00.460 --> 2:14:02.460
 That's first party JavaScript.

2:14:02.460 --> 2:14:04.460
 So how do you tell the first from the third party?

2:14:04.460 --> 2:14:05.460
 And it's not easy.

2:14:05.460 --> 2:14:11.460
 It's not a matter of just what's embedded from a different server because a lot of publishers use benign scripts

2:14:11.460 --> 2:14:14.460
 from unrelated domains or apparently unrelated domains.

2:14:14.460 --> 2:14:19.460
 So you end up having to develop a sort of human and machine learning practice around blocking.

2:14:19.460 --> 2:14:25.460
 And at Brave, we did that from the start and built a research team to help drive it and automate it.

2:14:25.460 --> 2:14:28.460
 We realized that protecting people needed machine learning.

2:14:28.460 --> 2:14:32.460
 And around 2017 spring, I talked to my friends at Apple about this too.

2:14:32.460 --> 2:14:36.460
 And they were also doing what they call intelligent tracking prevention,

2:14:36.460 --> 2:14:39.460
 which uses local machine learning in the browser.

2:14:39.460 --> 2:14:42.460
 And the funny thing is, you know, great minds think alike,

2:14:42.460 --> 2:14:46.460
 they were taking their third party cookie blocker that was in Safari from the old days

2:14:46.460 --> 2:14:48.460
 and making it not have a big loophole.

2:14:48.460 --> 2:14:52.460
 Because what they did was in 2003, when I came out, they said,

2:14:52.460 --> 2:14:57.460
 we're going to block cookies that are from those third party embedded elements

2:14:57.460 --> 2:14:59.460
 where you've never visited that site before.

2:14:59.460 --> 2:15:02.460
 So I'm going to pick an ad company that got sold to AT&T.

2:15:02.460 --> 2:15:05.460
 So I'm not picking on anybody on fairly appnexus.com.

2:15:05.460 --> 2:15:06.460
 Have you ever been to appnexus.com?

2:15:06.460 --> 2:15:07.460
 No.

2:15:07.460 --> 2:15:08.460
 I've never been there.

2:15:08.460 --> 2:15:11.460
 But I guarantee you 10 years ago, you probably had, if you're using Firefox,

2:15:11.460 --> 2:15:14.460
 you had a cookie third party cookie because you're being tracked by them.

2:15:14.460 --> 2:15:17.460
 And they were using that cookie to build up a profile of you.

2:15:17.460 --> 2:15:20.460
 In Safari, as long as the user never went to appnexus,

2:15:20.460 --> 2:15:22.460
 that cookie would not be set.

2:15:22.460 --> 2:15:27.460
 And that was a real move for privacy early on when jobs were still around in Safari.

2:15:27.460 --> 2:15:30.460
 But it had this loophole that if you do go to appnexus,

2:15:30.460 --> 2:15:32.460
 then why it's okay to be a third party cookie?

2:15:32.460 --> 2:15:35.460
 And so appnexus did something very naughty.

2:15:35.460 --> 2:15:38.460
 They took their ad partners to put the actual ad you click on.

2:15:38.460 --> 2:15:42.460
 And they said, hey, add a little script so that when somebody clicks on the ad,

2:15:42.460 --> 2:15:45.460
 before it goes to your landing page, redirect to appnexus

2:15:45.460 --> 2:15:47.460
 and we'll redirect to the landing page.

2:15:47.460 --> 2:15:49.460
 And by doing that, they set a first party cookie and they got whitelisted.

2:15:49.460 --> 2:15:51.460
 So it was a loophole they exploited.

2:15:51.460 --> 2:15:56.460
 Intelligent tracking prevention in Safari was sophisticated enough to counteract this

2:15:56.460 --> 2:15:59.460
 and it did other things and it's evolved since they did it.

2:15:59.460 --> 2:16:00.460
 And we've evolved brave too.

2:16:00.460 --> 2:16:05.460
 And so when I say machine and human learning, there's a real set of techniques here.

2:16:05.460 --> 2:16:06.460
 They have to fight.

2:16:06.460 --> 2:16:07.460
 It's a fascinating problem.

2:16:07.460 --> 2:16:08.460
 Finger printing, right?

2:16:08.460 --> 2:16:13.460
 Anytime you have a little bit of storage in the browser associated with a website,

2:16:13.460 --> 2:16:16.460
 if the bad guy can get 32 websites, each one has a bit of storage.

2:16:16.460 --> 2:16:17.460
 That's 32 bits.

2:16:17.460 --> 2:16:19.460
 You can turn the bit on or off.

2:16:19.460 --> 2:16:21.460
 You can make four billion numbers.

2:16:21.460 --> 2:16:22.460
 You can make an identifier.

2:16:22.460 --> 2:16:24.460
 It's called a super cookie sometimes.

2:16:24.460 --> 2:16:28.460
 There are weaker ways that are statistical.

2:16:28.460 --> 2:16:29.460
 They're called fingerprinting.

2:16:29.460 --> 2:16:32.460
 You have to block all of them and you have to not only automate,

2:16:32.460 --> 2:16:37.460
 you want to work in the web standards body to put privacy in by default,

2:16:37.460 --> 2:16:40.460
 by design, from the get go, not added as an afterthought

2:16:40.460 --> 2:16:45.460
 or go hog while with new web APIs that add a bunch more local storage

2:16:45.460 --> 2:16:47.460
 or fingerprint surface area.

2:16:47.460 --> 2:16:51.460
 And that's been a struggle too because guess who's the new Microsoft in the standards body?

2:16:51.460 --> 2:16:52.460
 It's Google.

2:16:52.460 --> 2:16:55.460
 And they're not in favor of privacy first.

2:16:55.460 --> 2:17:00.460
 They want to do privacy their way only under, I would say, market pressure.

2:17:00.460 --> 2:17:03.460
 But with Apple and with Brave leading the way,

2:17:03.460 --> 2:17:06.460
 we block third party cookies almost without exception.

2:17:06.460 --> 2:17:11.460
 So we just block them and that gives us a very strong privacy benefit.

2:17:11.460 --> 2:17:13.460
 But it also means some sites just don't work right.

2:17:13.460 --> 2:17:15.460
 Embedded YouTube videos might not work right.

2:17:15.460 --> 2:17:22.460
 So we're adapting in similar way to Apple's done with ITP to make third party cookies blocked

2:17:22.460 --> 2:17:28.460
 but to sort of simulate what looks like a working third party cookie for the site.

2:17:28.460 --> 2:17:34.460
 It essentially tries to partition each site and its third parties into its own sort of cookie jar.

2:17:34.460 --> 2:17:35.460
 Got it.

2:17:35.460 --> 2:17:42.460
 So like you said, is this both like a human fine tuning issue and a machine learning problem?

2:17:42.460 --> 2:17:43.460
 Yes.

2:17:43.460 --> 2:17:46.460
 And as humans learn, then they train the machine learning.

2:17:46.460 --> 2:17:52.460
 But maybe Google aside or including Google, there is millions of dollars,

2:17:52.460 --> 2:17:57.460
 if not be billions of dollars to be made from fighting the ways of Brave.

2:17:57.460 --> 2:17:58.460
 That's right.

2:17:58.460 --> 2:18:02.460
 And it's been an interesting change from when we started in 2015.

2:18:02.460 --> 2:18:07.460
 Adblocking extensions, Ablock Plus was one of the big ones that started on Firefox in 2006,

2:18:07.460 --> 2:18:10.460
 I believe, had gotten to a certain level of use around the world.

2:18:10.460 --> 2:18:16.460
 And browsers like UcWeb, UcBrowser in Asia had some amount of ablocking built in and on by default.

2:18:16.460 --> 2:18:23.460
 So a page fair was a startup and they measured ablocking adoption and they tried to say,

2:18:23.460 --> 2:18:30.460
 hey, publishers, you're 30% of the visitors to pitchfork or wire to kind of NAS properties

2:18:30.460 --> 2:18:32.460
 are using ablockers.

2:18:32.460 --> 2:18:36.460
 If we can somehow convince them to lower their ablocking for your site,

2:18:36.460 --> 2:18:39.460
 that could be like a 43% lift, right?

2:18:39.460 --> 2:18:41.460
 And three sevenths.

2:18:41.460 --> 2:18:43.460
 Well, that's easier said than done.

2:18:43.460 --> 2:18:47.460
 And page fair and other source point that many others tried to either smuggle ads through

2:18:47.460 --> 2:18:51.460
 or cajole the user into letting ads appear.

2:18:51.460 --> 2:18:52.460
 And it didn't really work.

2:18:52.460 --> 2:18:58.460
 And meanwhile, the ablocking adoption has just continued intelligent tracking prevention in Safari in 2017.

2:18:58.460 --> 2:19:04.460
 Brave from 2016 on with very strong cookie blocking and other protections.

2:19:04.460 --> 2:19:06.460
 And this is not going away.

2:19:06.460 --> 2:19:08.460
 The publishers used to rage against it.

2:19:08.460 --> 2:19:10.460
 We would try to say, we can help you.

2:19:10.460 --> 2:19:13.460
 You're dealing with users who are already blocking all your ads.

2:19:13.460 --> 2:19:19.460
 We can try to put back some economics that helped the user and you that led to the basic attention

2:19:19.460 --> 2:19:21.460
 token that we started with Bitcoin.

2:19:21.460 --> 2:19:22.460
 We can be your friend.

2:19:22.460 --> 2:19:26.460
 Don't just fingerprint us as an ad blocker and treat us as an enemy.

2:19:26.460 --> 2:19:29.460
 But in 2015 or 16, it was like, nah, you're an ablocker.

2:19:29.460 --> 2:19:30.460
 Get out of here.

2:19:30.460 --> 2:19:31.460
 I hate you.

2:19:31.460 --> 2:19:33.460
 And by 2017 or 18, it's like something's happening.

2:19:33.460 --> 2:19:35.460
 The ablocking is not stopping.

2:19:35.460 --> 2:19:41.460
 And we're all getting sort of pulled on the Google's plantation through AMP, AMP.

2:19:41.460 --> 2:19:46.460
 Or we're getting killed by the Google ad system we use because it's taking all the revenue.

2:19:46.460 --> 2:19:50.460
 Or some other vendors we use are permitting ad fraud.

2:19:50.460 --> 2:19:56.460
 So a fake New York Times is getting paid by the marketer running an ad that a bot clicks on.

2:19:56.460 --> 2:20:00.460
 And the real New York Times, it's supposed to get the ad, doesn't get it.

2:20:00.460 --> 2:20:02.460
 And there's something really broken about that kind of system.

2:20:02.460 --> 2:20:07.460
 And that fraud is mediated through Google's ad exchange, which is the biggest of them all.

2:20:07.460 --> 2:20:09.460
 And Google takes a fee.

2:20:09.460 --> 2:20:14.460
 There's a flip side of that, which is malware distribution, malvertising, where fake advertisers

2:20:14.460 --> 2:20:20.460
 put malware payloads or exploit kit loaders in JavaScript and they smuggle them in ads

2:20:20.460 --> 2:20:22.460
 onto real publisher pages.

2:20:22.460 --> 2:20:24.460
 The ad exchange takes the fee.

2:20:24.460 --> 2:20:25.460
 Now, I'm not a lawyer.

2:20:25.460 --> 2:20:27.460
 I'm not going to say this is a RICO predicate.

2:20:27.460 --> 2:20:31.460
 But why is the ad exchange facilitating fraud and malware distribution and taking a fee?

2:20:31.460 --> 2:20:32.460
 It's not right.

2:20:32.460 --> 2:20:35.460
 As opposed to just fighting, this is the really interesting thing about Brave.

2:20:35.460 --> 2:20:41.460
 As opposed to just fighting and then being treated like an ad blocker, you're providing an alternate.

2:20:41.460 --> 2:20:49.460
 There's a philosophical idea here that might change the nature of the internet with the basic attention token.

2:20:49.460 --> 2:20:55.460
 Maybe what is basic attention token, BAT, and how does it work?

2:20:55.460 --> 2:20:56.460
 Okay.

2:20:56.460 --> 2:20:58.460
 I'll tell the story first by saying how I came to it.

2:20:58.460 --> 2:21:03.460
 I realized for a long time at Firefox, we were dependent on this Google search deal.

2:21:03.460 --> 2:21:07.460
 And I thought, now that Chrome's out, maybe that's going to go away.

2:21:07.460 --> 2:21:14.460
 At some point, Google will say, Firefox, like old Yeller, you saved me from the rabid beast.

2:21:14.460 --> 2:21:16.460
 Now, I have to shoot you in the head.

2:21:16.460 --> 2:21:17.460
 Done your job.

2:21:17.460 --> 2:21:18.460
 Sad but true.

2:21:18.460 --> 2:21:19.460
 Goodbye.

2:21:19.460 --> 2:21:21.460
 And what can we do?

2:21:21.460 --> 2:21:24.460
 And I think this, Mozilla doesn't know what to do.

2:21:24.460 --> 2:21:27.460
 This is something that I couldn't solve there and I don't think they can solve.

2:21:27.460 --> 2:21:32.460
 But I thought, why is the browser the sort of passive servant of these big tech companies?

2:21:32.460 --> 2:21:37.460
 I said a blind runtime for ad tech JavaScripts, including from Google.

2:21:37.460 --> 2:21:39.460
 Why doesn't it block some?

2:21:39.460 --> 2:21:48.460
 And if it blocks some, why can't it reconnect users, readers, fans with publishers, creators, websites?

2:21:48.460 --> 2:21:56.460
 Why can't it help people make direct payments or even possibly get an ad revenue share for private ads that are placed in the browser?

2:21:56.460 --> 2:21:57.460
 The ads are all placed in the browser.

2:21:57.460 --> 2:22:07.460
 Some people have this sort of model that the server is painting the ad into some flash combined package or into some giant image and then it all gets sent down.

2:22:07.460 --> 2:22:08.460
 That's not how it works.

2:22:08.460 --> 2:22:15.460
 All the ads you see on the web are placed in your browser by calling out to various ad tech partners and Google's among them.

2:22:15.460 --> 2:22:25.460
 And so if you block those scripts, you break the advertising flow of money from the brands and their agencies to the publishers.

2:22:25.460 --> 2:22:30.460
 And if you want to reconnect it directly with the user, you have limited choices.

2:22:30.460 --> 2:22:34.460
 The user generally isn't going to sign up with a ACH bank connection or a credit card.

2:22:34.460 --> 2:22:38.460
 The publisher isn't going to sign up the user except as a subscriber.

2:22:38.460 --> 2:22:43.460
 And then they're going to overcharge you because they want you to cross subsidize all the content and buy more than you read and all that stuff.

2:22:43.460 --> 2:22:48.460
 And people are doing great who are big names like New York Times and The Washington Post.

2:22:48.460 --> 2:22:51.460
 But how many subscriptions are you as a user going to pay for?

2:22:51.460 --> 2:22:56.460
 This is why startups like Tony Hale's Skrull are trying to do a portable subscription system.

2:22:56.460 --> 2:23:02.460
 By the way, just on a small tangent there, even in New York Times, it's really annoying how difficult it is to subscribe.

2:23:02.460 --> 2:23:04.460
 There's way too many clicks.

2:23:04.460 --> 2:23:05.460
 They don't make it easy.

2:23:05.460 --> 2:23:11.460
 I had friends a few years ago, I think they fixed this, who would pay for the paper and then they'd go online and they get upcharged for the digital.

2:23:11.460 --> 2:23:12.460
 And there was no break.

2:23:12.460 --> 2:23:14.460
 There was no connection between them.

2:23:14.460 --> 2:23:19.460
 But publishers are not that technical and they can't all get you to subscribe.

2:23:19.460 --> 2:23:20.460
 You can't have a thousand subscriptions.

2:23:20.460 --> 2:23:23.460
 So for a long time, people talked about micropayments.

2:23:23.460 --> 2:23:26.460
 There was Blendol and other ones which came to the US but didn't grow.

2:23:26.460 --> 2:23:32.460
 And I thought if you have just a browser and it's protecting you by blocking all this ad tech tracking junk,

2:23:32.460 --> 2:23:40.460
 it can provide you an option that uses cryptocurrency to let you support your favorite sites and even YouTube channels.

2:23:40.460 --> 2:23:42.460
 And that we prototyped with Bitcoin.

2:23:42.460 --> 2:23:46.460
 And that meant the user had to be of means to contribute and willing to contribute.

2:23:46.460 --> 2:23:51.460
 But it could be done on the Bitcoin blockchain and it could be fairly efficient even though Bitcoin went through a period

2:23:51.460 --> 2:23:59.460
 when we had this prototype running in 2016 into 2017 where Bitcoin was very congested and very slow to confirm and the fees got very high.

2:23:59.460 --> 2:24:04.460
 And a lot of users who were not Bitcoin maximalists or even experienced,

2:24:04.460 --> 2:24:09.460
 we helped them out by embedding a Coinbase buy widget and they had the income to buy but it was hard.

2:24:09.460 --> 2:24:11.460
 It was like, do I buy $5 a month?

2:24:11.460 --> 2:24:13.460
 But the fee is like $4.50.

2:24:13.460 --> 2:24:15.460
 I better buy in larger batches, right?

2:24:15.460 --> 2:24:18.460
 Then they're like, I don't want to own that much Bitcoin.

2:24:18.460 --> 2:24:20.460
 So it became this painful thing.

2:24:20.460 --> 2:24:29.460
 And the real idea that I had of private ads that pay the user a rev share couldn't be realized alone in that kind of system.

2:24:29.460 --> 2:24:36.460
 In these cryptocurrency systems, especially with the blockchain we switched to Ethereum, you can have smart contracts.

2:24:36.460 --> 2:24:40.460
 The Bitcoin system is not turn complete so what you can do with the script is more limited.

2:24:40.460 --> 2:24:45.460
 But you can still do sort of clever things even with Bitcoin script.

2:24:45.460 --> 2:24:49.460
 What we wanted to do was sort of a three sided ecosystem.

2:24:49.460 --> 2:24:53.460
 We wanted users, creators, publishers and advertisers.

2:24:53.460 --> 2:24:56.460
 And we wanted the advertisers to put money in just like they do today.

2:24:56.460 --> 2:25:01.460
 But without going through the Googles and the app nexuses and all these other ad tech companies,

2:25:01.460 --> 2:25:03.460
 because those companies take out a huge cut.

2:25:03.460 --> 2:25:06.460
 The Guardian in the UK once did an experiment for a month.

2:25:06.460 --> 2:25:08.460
 They bought out their own ad space.

2:25:08.460 --> 2:25:11.460
 They put in a pound and they were paid 30 pence.

2:25:11.460 --> 2:25:16.460
 70% was coming out to the intermediary vendors they were using.

2:25:16.460 --> 2:25:19.460
 And that's like the opposite of what the App Store does.

2:25:19.460 --> 2:25:22.460
 The App Store takes 30% and gives the publisher 70%.

2:25:22.460 --> 2:25:23.460
 So pretty broken.

2:25:23.460 --> 2:25:29.460
 In the old days of the Superstation TBS, the media owner would get 85%.

2:25:29.460 --> 2:25:33.460
 So these splits have become really unbalanced.

2:25:33.460 --> 2:25:37.460
 And the middle players, the ad tech vendors are taking out way too much money.

2:25:37.460 --> 2:25:40.460
 And they're doing something worse, which has been noticed.

2:25:40.460 --> 2:25:47.460
 They're letting not just the malware vendors, but also the ad fraud side, which fakes the publishers,

2:25:47.460 --> 2:25:53.460
 and clickbait merchants come in and steal traffic from good sites.

2:25:53.460 --> 2:25:56.460
 Because once you have a certain audience identified at one site,

2:25:56.460 --> 2:26:00.460
 Jason Calconas told me this about his experience with, I guess it was in Gadget.

2:26:00.460 --> 2:26:07.460
 Once he started using an ad partner that was sharing his audience information across multiple sites,

2:26:07.460 --> 2:26:09.460
 he saw his competitors stealing all his traffic.

2:26:09.460 --> 2:26:15.460
 And then what's worse is the clickbait sites that just have much cheaper rates steal all that traffic.

2:26:15.460 --> 2:26:21.460
 And that facilitates fraud, facilitates fake news, all sorts of problems.

2:26:21.460 --> 2:26:26.460
 So Grave blocks it and then we give users the ability to give back.

2:26:26.460 --> 2:26:30.460
 And because we invented the basic attention token in Ethereum, we can do this three way split.

2:26:30.460 --> 2:26:33.460
 And we can give users a share of the revenue.

2:26:33.460 --> 2:26:35.460
 And if they want to take it out, they can.

2:26:35.460 --> 2:26:39.460
 Now, unfortunately for us and for all blockchain, the regulators are saying,

2:26:39.460 --> 2:26:41.460
 we're going to have to know who you are.

2:26:41.460 --> 2:26:47.460
 There's the Treasury Department's FinCEN agency.

2:26:47.460 --> 2:26:50.460
 There's the Office of Foreign Asset Controls, OFAC.

2:26:50.460 --> 2:26:58.460
 There's the other regulators in the federal government that take a very dark look at things like money laundering

2:26:58.460 --> 2:27:01.460
 and sending money to someone named Osama bin Laden.

2:27:01.460 --> 2:27:03.460
 So compliance starts to come in.

2:27:03.460 --> 2:27:07.460
 And even now they're threatening for pure Bitcoin sending to some address.

2:27:07.460 --> 2:27:11.460
 If you're a Coinbase, you're going to have to know who's at that address.

2:27:11.460 --> 2:27:13.460
 Make the actual identities of people involved.

2:27:13.460 --> 2:27:14.460
 Yeah.

2:27:14.460 --> 2:27:17.460
 Now with Coinbase members, you sign up and they know you and they comply with the regulations.

2:27:17.460 --> 2:27:19.460
 They're a regulated money services business.

2:27:19.460 --> 2:27:28.460
 But if somebody's using their own self custodial wallet where they have the hardware private key

2:27:28.460 --> 2:27:32.460
 and they're not named and they want to send to that address,

2:27:32.460 --> 2:27:37.460
 our friends in the federal government are talking about requiring at some threshold knowing who that is.

2:27:37.460 --> 2:27:40.460
 Some threshold that's unreasonable.

2:27:40.460 --> 2:27:41.460
 It's not that big.

2:27:41.460 --> 2:27:42.460
 Yeah.

2:27:42.460 --> 2:27:43.460
 I don't know how this will play out.

2:27:43.460 --> 2:27:44.460
 I think crypto is here to stay.

2:27:44.460 --> 2:27:49.460
 I think the beauty of being able to send peer to peer without any bank in the middle without any, you know,

2:27:49.460 --> 2:27:52.460
 huge wire charge and two day delay and all that nonsense.

2:27:52.460 --> 2:27:54.460
 It's beautiful and I've used it and I love it.

2:27:54.460 --> 2:27:59.460
 But we're pragmatists that brave about crypto and we realize that anything like a revenue split,

2:27:59.460 --> 2:28:03.460
 we can't facilitate without being licensed in a certain way and it requires knowing who the user is.

2:28:03.460 --> 2:28:06.460
 So our default mode doesn't know who the user is.

2:28:06.460 --> 2:28:14.460
 It instead imputes to the user's browser some of the revenue and allows that browser to steer it back to the creators.

2:28:14.460 --> 2:28:16.460
 And we do have to identify the creators.

2:28:16.460 --> 2:28:20.460
 But as things improve and, you know, who knows how it'll play out,

2:28:20.460 --> 2:28:25.460
 there should become a day when this full vision can be done more fully on a blockchain.

2:28:25.460 --> 2:28:32.460
 But regulations and the practicalities of today's blockchains, which are not that fast and not anonymous over time,

2:28:32.460 --> 2:28:35.460
 you fingerprint yourself over time, we do some of this with the browser.

2:28:35.460 --> 2:28:42.460
 So one of the ideas of the basic attention token is to make a hybrid system that's stronger than blockchain alone.

2:28:42.460 --> 2:28:45.460
 It's the browser and the blockchain.

2:28:45.460 --> 2:28:47.460
 And the browser is this trusted endpoints software.

2:28:47.460 --> 2:28:49.460
 It's this universal app.

2:28:49.460 --> 2:28:50.460
 Everyone uses browsers.

2:28:50.460 --> 2:28:55.460
 The bigger the screen, the more you're in the browser and the less you install, you know, fat clients for things.

2:28:55.460 --> 2:28:59.460
 I use Slack on Mac OS and it's like a browser.

2:28:59.460 --> 2:29:03.460
 It's based on an electron framework we used to use and it's just, it's not that great.

2:29:03.460 --> 2:29:07.460
 Some people at Brave use Slack in Brave as a browser.

2:29:07.460 --> 2:29:08.460
 In the browser.

2:29:08.460 --> 2:29:09.460
 Yeah.

2:29:09.460 --> 2:29:10.460
 I use that often.

2:29:10.460 --> 2:29:11.460
 Yeah.

2:29:11.460 --> 2:29:12.460
 And I noticed on the iPad, I use apps less.

2:29:12.460 --> 2:29:17.460
 The smaller the screen, you know, the browser got handicapped by Apple and Android both.

2:29:17.460 --> 2:29:22.460
 And it also, you know, can be slower or not have the right, you know, affordances,

2:29:22.460 --> 2:29:26.460
 the interface with the security limited APIs.

2:29:26.460 --> 2:29:31.460
 But in principle, with the right permissioning, you can make the web browser just as good as any app.

2:29:31.460 --> 2:29:33.460
 You make it be a super app.

2:29:33.460 --> 2:29:35.460
 And that's part of our mission at Brave.

2:29:35.460 --> 2:29:41.460
 So we want to have the economics that got captured by these big tech companies through tracking and through social networks.

2:29:41.460 --> 2:29:49.460
 We want to block that for your own safety and then let you opt into a cleaner world where you keep your data defended in your browser and you can actually realize value from it.

2:29:49.460 --> 2:29:53.460
 So the way our ad system works, I mentioned it being private, but how does that work?

2:29:53.460 --> 2:29:55.460
 We don't see your data at all.

2:29:55.460 --> 2:30:00.460
 All browsers are sort of the mother of all data feeds, your history, all your searches at all engines.

2:30:00.460 --> 2:30:03.460
 Each engine sees the queries you send to it, but it doesn't see the others.

2:30:03.460 --> 2:30:05.460
 But the browser sees them all.

2:30:05.460 --> 2:30:11.460
 Machine learning in the browser that you can opt into can study all that in a very complete way and do a better job than Google does.

2:30:11.460 --> 2:30:21.460
 Google has, you know, cookie and scripts across the web from, according to DoubleClick, they have YouTube, they have Android, they have search, which is still their big revenue link.

2:30:21.460 --> 2:30:22.460
 But they don't see everything.

2:30:22.460 --> 2:30:23.460
 The browser sees everything.

2:30:23.460 --> 2:30:27.460
 And if it can do a good job locally, and this is not advanced machine learning, this is not TensorFlow.

2:30:27.460 --> 2:30:31.460
 This is like SVMs now, Naive Bayes.

2:30:31.460 --> 2:30:43.460
 Then you can match intense signals, intense signals from those data feeds, searches, the queries, the history, how much you're scrolling down a page, how much you redid a search.

2:30:43.460 --> 2:30:45.460
 It's all blind browser algorithm.

2:30:45.460 --> 2:30:46.460
 We don't see that data.

2:30:46.460 --> 2:30:50.460
 And then pick the best ad from a fixed catalog per day.

2:30:50.460 --> 2:30:57.460
 And the catalog is fixed across a large population per day and it only updates once a day because new offers come in and old ones inspire.

2:30:57.460 --> 2:30:59.460
 Sometimes every week or every month.

2:30:59.460 --> 2:31:05.460
 And that catalog, and there can be many such catalogs, is sold by our direct sales team.

2:31:05.460 --> 2:31:11.460
 And so we're making an anonymous audience available to advertisers without the advertisers tracking them.

2:31:11.460 --> 2:31:16.460
 Instead, each browser is a little machine learning system that's picking the best catalog entry.

2:31:16.460 --> 2:31:18.460
 Now, the catalog is not the ads.

2:31:18.460 --> 2:31:19.460
 Those are big, right?

2:31:19.460 --> 2:31:20.460
 It's not the video or web page.

2:31:20.460 --> 2:31:22.460
 It's just the link to an edge cache.

2:31:22.460 --> 2:31:23.460
 And there are many such edge caches.

2:31:23.460 --> 2:31:26.460
 We're not trying to protect them from seeing your IP address.

2:31:26.460 --> 2:31:27.460
 It's not really feasible.

2:31:27.460 --> 2:31:29.460
 We could use Tor, but we don't yet.

2:31:29.460 --> 2:31:31.460
 And some keywords about the ad.

2:31:31.460 --> 2:31:34.460
 So it's basically like metadata and a link.

2:31:34.460 --> 2:31:36.460
 And that's what the catalog consists of.

2:31:36.460 --> 2:31:37.460
 And that's what the machine learning pick.

2:31:37.460 --> 2:31:43.460
 And the machine learning is learning about the use specifically locally in order to choose from the catalog of different ads.

2:31:43.460 --> 2:31:47.460
 Couldn't this possibly be like a multi billion dollar?

2:31:47.460 --> 2:31:51.460
 Isn't this taking on the Google ad ad?

2:31:51.460 --> 2:32:01.460
 So like what, I mean, one question to ask that there seems to be some really profound ideas here that are different than what the internet has grown up to be.

2:32:01.460 --> 2:32:12.460
 If brave or something like brave, the idea is the fundamental philosophical ideas underlying brave win out and runs 95% of the internet.

2:32:12.460 --> 2:32:19.460
 How does that change the, what, what are the major things that changes about the internet?

2:32:19.460 --> 2:32:23.460
 So social networks and then the creatives like YouTube creators and all that kind of stuff.

2:32:23.460 --> 2:32:24.460
 So let's talk about that.

2:32:24.460 --> 2:32:29.460
 First of all, if brave gets 95%, I'm going to demand a recount because I won't believe it.

2:32:29.460 --> 2:32:30.460
 I don't know.

2:32:30.460 --> 2:32:34.460
 I think we're trying to put things into web standards that can be standardized across browsers.

2:32:34.460 --> 2:32:41.460
 So the main value of brave will be the trust users having us and our ability to give the best deal to users.

2:32:41.460 --> 2:32:44.460
 70% of the gross ad revenue we give to the user.

2:32:44.460 --> 2:32:48.460
 And if they go through that KYC process I mentioned, they can take it out.

2:32:48.460 --> 2:32:49.460
 They can also give it back.

2:32:49.460 --> 2:32:51.460
 They can take some out, give the rest back.

2:32:51.460 --> 2:32:54.460
 They can add basic attention tokens to give back.

2:32:54.460 --> 2:32:58.460
 Some of them turn off the ads because you just don't like ads, but they put in $20 a month.

2:32:58.460 --> 2:33:00.460
 So I believe Zuko of ZCast fame does that.

2:33:00.460 --> 2:33:09.460
 And that's very generous because the browser is just anonymously based on his browsing sort of keeping score on how much time he spent on this video on that website.

2:33:09.460 --> 2:33:16.460
 And if those sites verify in sort of like getting a domain certificate fashion, they can get paid.

2:33:16.460 --> 2:33:19.460
 They can get part of his $20 a month.

2:33:19.460 --> 2:33:21.460
 So that vision could go big.

2:33:21.460 --> 2:33:23.460
 And if it does, I hope it's across multiple browsers.

2:33:23.460 --> 2:33:30.460
 I don't know that they'll all compete well on the quality of the ads, the quality of the ad blocking and tracking protection.

2:33:30.460 --> 2:33:31.460
 Those are subject to competition.

2:33:31.460 --> 2:33:33.460
 It'll take a while to standardize them.

2:33:33.460 --> 2:33:35.460
 But I think that would be a better world.

2:33:35.460 --> 2:33:38.460
 It would have less counterparty risk.

2:33:38.460 --> 2:33:40.460
 The fee takers in the middle, really just the browser.

2:33:40.460 --> 2:33:42.460
 We're taking 30%.

2:33:42.460 --> 2:33:44.460
 It's sort of the app store split.

2:33:44.460 --> 2:33:47.460
 And if we get bigger, maybe we can take even less.

2:33:47.460 --> 2:33:49.460
 Social networks, creators.

2:33:49.460 --> 2:33:56.460
 If you look at YouTubers, a lot of them are the indies that are getting some size are getting sponsorship deals.

2:33:56.460 --> 2:33:58.460
 They're using Patreon.

2:33:58.460 --> 2:34:04.460
 They're encouraging people to subscribe and give them regular money for Patreon.

2:34:04.460 --> 2:34:06.460
 But that's centralized your Patreon.

2:34:06.460 --> 2:34:08.460
 There's censorship hazards.

2:34:08.460 --> 2:34:10.460
 There's a 5% fee.

2:34:10.460 --> 2:34:12.460
 What if that were a web standard?

2:34:12.460 --> 2:34:18.460
 What if Brave pioneered it first and we took 3% and we did it in a way that was through your browser so we couldn't censor it?

2:34:18.460 --> 2:34:20.460
 That's brilliant.

2:34:20.460 --> 2:34:22.460
 Do you think it could be standardized to cross browsers?

2:34:22.460 --> 2:34:26.460
 Can Internet Explorer come in again?

2:34:26.460 --> 2:34:29.460
 Protocols are easy to copy and they're meant to be interoperable.

2:34:29.460 --> 2:34:31.460
 So there's a risk there.

2:34:31.460 --> 2:34:34.460
 And the loyal users might be tricked into leaving you.

2:34:34.460 --> 2:34:37.460
 Because of that distribution power, you might end up getting stomped.

2:34:37.460 --> 2:34:39.460
 I don't know. I can't predict the future.

2:34:39.460 --> 2:34:42.460
 I think antitrust is back on the case finally in the U.S.

2:34:42.460 --> 2:34:45.460
 and certainly in Europe, DG Comp is doing its thing.

2:34:45.460 --> 2:34:48.460
 So I'm hopeful that we'll have a period of innovation.

2:34:48.460 --> 2:34:53.460
 You know, people were talking like Elizabeth Warren was talking about breaking up the tech companies very clearly.

2:34:53.460 --> 2:34:56.460
 Now, she didn't win and I suspect that won't happen.

2:34:56.460 --> 2:35:03.460
 But I also suspect that Google might be smart enough to see they should do something more than just put privacy perfume on Chrome.

2:35:03.460 --> 2:35:06.460
 They should maybe get rid of Double Click or something, divest something.

2:35:06.460 --> 2:35:08.460
 I don't know. It might happen.

2:35:08.460 --> 2:35:11.460
 So Brave might inspire Google to completely change the way they're doing things?

2:35:11.460 --> 2:35:17.460
 They're already doing something you may have read about called the Privacy Sandbox or Flock,

2:35:17.460 --> 2:35:22.460
 which they have this bird metaphor going, Turtledove, Fledge.

2:35:22.460 --> 2:35:26.460
 But these systems have been very googly, kind of overengineered.

2:35:26.460 --> 2:35:30.460
 And yet, depending on differential privacy, which has weakness over time,

2:35:30.460 --> 2:35:34.460
 if you know how that works, it's kind of injecting noise to hide you in a crowd.

2:35:34.460 --> 2:35:37.460
 But over time, an adversary can pull you out of the crowd.

2:35:37.460 --> 2:35:41.460
 This doesn't look like it's going to become a standard like Apple, Brave, Mozilla.

2:35:41.460 --> 2:35:44.460
 We're not going to just say, oh, Google, you saved us.

2:35:44.460 --> 2:35:47.460
 You've invented the Privacy Sandbox, so I'll just adopt it.

2:35:47.460 --> 2:35:48.460
 Not going to be that easy.

2:35:48.460 --> 2:35:51.460
 It's going to be more like pieces of what we do in Brave,

2:35:51.460 --> 2:35:56.460
 the synonymous ad matching or the blind signature cryptography we used to confirm the ad impressions.

2:35:56.460 --> 2:35:59.460
 That's David Chum's invention.

2:35:59.460 --> 2:36:00.460
 That could get standardized.

2:36:00.460 --> 2:36:02.460
 In fact, some of that is being standardized.

2:36:02.460 --> 2:36:04.460
 Even Google's in favor of so called trust tokens,

2:36:04.460 --> 2:36:07.460
 which are Xiaomi and blind signature certs.

2:36:07.460 --> 2:36:09.460
 But they're not using them for ad confirmations,

2:36:09.460 --> 2:36:11.460
 because they don't want to blow up their own business.

2:36:11.460 --> 2:36:17.460
 And they need to let some of the publishers they serve have other ad tech scripts on the page.

2:36:17.460 --> 2:36:18.460
 And so they're kind of caught.

2:36:18.460 --> 2:36:20.460
 And this is something I realized doing Brave.

2:36:20.460 --> 2:36:24.460
 I thought, what's Google's innovators dilemma apart from just being mature

2:36:24.460 --> 2:36:26.460
 and having trouble innovating?

2:36:26.460 --> 2:36:32.460
 It's that they have come to depend on this ad tech system that has all these vendors

2:36:32.460 --> 2:36:36.460
 that publishers rely on, because publishers aren't technical enough.

2:36:36.460 --> 2:36:39.460
 And I feel for the publishers, but I realized the users have to come first.

2:36:39.460 --> 2:36:43.460
 And if you give the users a better browser that's faster,

2:36:43.460 --> 2:36:47.460
 then you'll get enough users to give back or support publishers.

2:36:47.460 --> 2:36:50.460
 The speed and the battery savings and the data plan savings are significant.

2:36:50.460 --> 2:36:53.460
 There's so much bad JavaScript involved in ad tech that if you block it

2:36:53.460 --> 2:36:57.460
 and you sort of chop off the what's called the programmatic waterfall,

2:36:57.460 --> 2:36:59.460
 which chains a bunch of requests.

2:36:59.460 --> 2:37:01.460
 Yeah, that's one of the incredible things about Brave.

2:37:01.460 --> 2:37:05.460
 I guess you're saying you should attribute it to the fact that the message JavaScript,

2:37:05.460 --> 2:37:10.460
 no offense, it's not my exclusive.

2:37:10.460 --> 2:37:14.460
 I mean, Brave just feels faster.

2:37:14.460 --> 2:37:16.460
 I mean, Chrome was fast.

2:37:16.460 --> 2:37:21.460
 One of the things that it was like impressive is it showed that browsers could be really fast.

2:37:21.460 --> 2:37:24.460
 And Brave is even faster than that, which is incredible.

2:37:24.460 --> 2:37:27.460
 And it saves the network, which means data plan, it saves battery

2:37:27.460 --> 2:37:31.460
 because the radio consumes your battery when it's running more to do those requests.

2:37:31.460 --> 2:37:33.460
 And it's just stunning how many there are.

2:37:33.460 --> 2:37:35.460
 Some of my Google friends are like, oh, that's just that bad site.

2:37:35.460 --> 2:37:36.460
 They'll fix it.

2:37:36.460 --> 2:37:38.460
 And you actually do a survey of web pages.

2:37:38.460 --> 2:37:40.460
 They're mostly like that.

2:37:40.460 --> 2:37:43.460
 I know Google engineers could make everything super efficient,

2:37:43.460 --> 2:37:45.460
 but they can't, especially in antifrust court, do it.

2:37:45.460 --> 2:37:48.460
 They cannot take over all the publishers and do that.

2:37:48.460 --> 2:37:51.460
 They're trying with accelerated mobile profile AMP.

2:37:51.460 --> 2:37:54.460
 They're trying to pull publishers who are like, oh, you poor publishers,

2:37:54.460 --> 2:37:56.460
 don't know how to make your pages fast.

2:37:56.460 --> 2:38:00.460
 Put them on our AMP system and we'll give you extra placement in the search carousel.

2:38:00.460 --> 2:38:02.460
 That's an antifrust problem for one.

2:38:02.460 --> 2:38:05.460
 But it's also publishers we talk to hate it because it degrades their brand.

2:38:05.460 --> 2:38:11.460
 Now, they look like a gig writer wrote a piece that's got Google's framing an AMP URL on top of it.

2:38:11.460 --> 2:38:13.460
 And they're trying to fix that too.

2:38:13.460 --> 2:38:16.460
 But it just looks like Google's borgifying all these publishers

2:38:16.460 --> 2:38:18.460
 and they don't want to be plugged into the borg cube.

2:38:18.460 --> 2:38:21.460
 They want to build up their own brand and have loyal readers.

2:38:21.460 --> 2:38:27.460
 So, you know, I'm in favor of giving the users power to help all the publishers

2:38:27.460 --> 2:38:29.460
 and the little platoons and the creators.

2:38:29.460 --> 2:38:30.460
 And so we talked about Patreon.

2:38:30.460 --> 2:38:31.460
 What about social networks?

2:38:31.460 --> 2:38:35.460
 Well, they're inherently like search a global algorithm.

2:38:35.460 --> 2:38:36.460
 You're trying to find friends of friends.

2:38:36.460 --> 2:38:41.460
 You're doing the transitive closure of a graph induced by this friend of relation.

2:38:41.460 --> 2:38:44.460
 But you should own your friend relation.

2:38:44.460 --> 2:38:46.460
 You should own your posts.

2:38:46.460 --> 2:38:50.460
 They shouldn't be owned by somebody else who can take them down or send to them.

2:38:50.460 --> 2:38:53.460
 And your friend relations, you should be able to find those friends on other networks.

2:38:53.460 --> 2:38:55.460
 And that's why I've tweeted about this.

2:38:55.460 --> 2:38:56.460
 I haven't built it yet.

2:38:56.460 --> 2:38:59.460
 What if the browser could keep track of those for you?

2:38:59.460 --> 2:39:03.460
 What if the browser could maybe combine Facebook and Twitter

2:39:03.460 --> 2:39:06.460
 and you could find your friends on both and you could have a sort of...

2:39:06.460 --> 2:39:09.460
 So that relationship is not owned by Facebook or Twitter.

2:39:09.460 --> 2:39:11.460
 It's owned by you through the browser.

2:39:11.460 --> 2:39:13.460
 They don't have terms of use and they'll say they own it.

2:39:13.460 --> 2:39:17.460
 But if they zap you on one and you're still on the other, your friends find you

2:39:17.460 --> 2:39:20.460
 and the browser could preserve a combined view.

2:39:20.460 --> 2:39:23.460
 You could resurrect almost across networks.

2:39:23.460 --> 2:39:26.460
 It's something I want to maybe quickly ask you about.

2:39:26.460 --> 2:39:31.460
 On that front, there's been quite a lot of centralized...

2:39:31.460 --> 2:39:34.460
 We talked about Wall Street Bets and then Robinhood.

2:39:34.460 --> 2:39:38.460
 There's been centralized banning of different accounts

2:39:38.460 --> 2:39:45.460
 and removing like Parler, for example, from AWS and this kind of overreach of centralized control.

2:39:45.460 --> 2:39:48.460
 Is your hope that it's possible to...

2:39:48.460 --> 2:39:50.460
 What are your thoughts about that in general?

2:39:50.460 --> 2:39:56.460
 Is it possible to create tools that give individual people the power

2:39:56.460 --> 2:39:59.460
 to fight back against overreach of such control?

2:39:59.460 --> 2:40:02.460
 So we're talking about oligarchy, I do think.

2:40:02.460 --> 2:40:05.460
 And that if it controls a nation state, that's formidable.

2:40:05.460 --> 2:40:08.460
 It's the tax and the police power, the military power.

2:40:08.460 --> 2:40:11.460
 It means that you may have the great firewall of China.

2:40:11.460 --> 2:40:14.460
 You may have people in China who are jailed because of their tweets.

2:40:14.460 --> 2:40:16.460
 This is a serious threat.

2:40:16.460 --> 2:40:18.460
 I can't minimize it or say that we'll win.

2:40:18.460 --> 2:40:20.460
 I don't know how it's going to go.

2:40:20.460 --> 2:40:23.460
 But I do think, like I said earlier about the cutting of reason,

2:40:23.460 --> 2:40:26.460
 people find ways around things, the internet routes around censorship.

2:40:26.460 --> 2:40:29.460
 And this is not to endorse any particular bad faction.

2:40:29.460 --> 2:40:33.460
 One of the things that happens when you try to wave the free speech flag too much,

2:40:33.460 --> 2:40:37.460
 I'm not going to censor anything and you get colonized by terrible, terrible people.

2:40:37.460 --> 2:40:41.460
 I don't care if you call them neo Nazis, some of them could be doing illegal things.

2:40:41.460 --> 2:40:46.460
 And you don't want them colonizing because it'll ruin your reputation and destroy your business.

2:40:46.460 --> 2:40:51.460
 So what you really want is that kind of user first subsidiarity, that subjectivity.

2:40:51.460 --> 2:40:57.460
 I want my social networks to be composited in some multi social user interface

2:40:57.460 --> 2:40:59.460
 where I don't lose track of people across networks.

2:40:59.460 --> 2:41:02.460
 And if they leave one or they get banned from one, I can find them on another.

2:41:02.460 --> 2:41:04.460
 I can still sort of thread them together.

2:41:04.460 --> 2:41:05.460
 That's brilliant.

2:41:05.460 --> 2:41:09.460
 And this didn't happen because browsers got captured by the central powers.

2:41:09.460 --> 2:41:11.460
 Why did they get captured mostly because of search?

2:41:11.460 --> 2:41:13.460
 And search is a central algorithm.

2:41:13.460 --> 2:41:15.460
 So Larry Page said this too many years ago.

2:41:15.460 --> 2:41:19.460
 He said, with search, you're giving up a little privacy by handing the query over to us.

2:41:19.460 --> 2:41:21.460
 And we'll error correct it.

2:41:21.460 --> 2:41:23.460
 Alan used to be a Google executive.

2:41:23.460 --> 2:41:25.460
 He said, oh yeah, we used to laugh.

2:41:25.460 --> 2:41:27.460
 They'd all be doing typos and they'd be typing the wrong word.

2:41:27.460 --> 2:41:29.460
 And we're like, no, dummy, type that query.

2:41:29.460 --> 2:41:32.460
 And it's like, okay, Google might want to dial back that ego a little bit.

2:41:32.460 --> 2:41:35.460
 But yes, you do see all the queries and you can improve them

2:41:35.460 --> 2:41:37.460
 and you can find the best results.

2:41:37.460 --> 2:41:38.460
 And that was Google's forte.

2:41:38.460 --> 2:41:41.460
 When we did the Firefox deal in 2004, Google was really good.

2:41:41.460 --> 2:41:45.460
 And over time, SEO, which is an adversarial game,

2:41:45.460 --> 2:41:49.460
 and Google itself buying all these companies and crowding its own results page

2:41:49.460 --> 2:41:53.460
 with its own tied in stuff, the YouTube.

2:41:53.460 --> 2:41:57.460
 The slipper slope that happens when you have control over these kinds

2:41:57.460 --> 2:41:59.460
 of really important mechanisms.

2:41:59.460 --> 2:42:01.460
 Yeah, monopoly capitalism or cartel.

2:42:01.460 --> 2:42:04.460
 You get this with the Robin Hoods and the hedge funds.

2:42:04.460 --> 2:42:08.460
 You get sort of the money interest takeover and kind of abuse their power

2:42:08.460 --> 2:42:09.460
 and wear out their welcome.

2:42:09.460 --> 2:42:11.460
 So how do you get around that?

2:42:11.460 --> 2:42:16.460
 You have to have either new land to go to, which some people's ancestors,

2:42:16.460 --> 2:42:22.460
 not mine, did to found the country, mostly Irish, German.

2:42:22.460 --> 2:42:25.460
 You have new virtual space people go to.

2:42:25.460 --> 2:42:31.460
 And that requires an ISP or a Colo Center or Amazon to host you.

2:42:31.460 --> 2:42:35.460
 It requires domain name registrar who will not strike you.

2:42:35.460 --> 2:42:40.460
 And so when Parler was taken down, I thought that was egregious.

2:42:40.460 --> 2:42:42.460
 Parler, it was not well designed.

2:42:42.460 --> 2:42:46.460
 And I tried it out because I tried all these things, but I didn't use it.

2:42:46.460 --> 2:42:49.460
 And I also felt they were being unfairly scored for not moderating

2:42:49.460 --> 2:42:52.460
 because you can find tweets to this day that are horrendous

2:42:52.460 --> 2:42:54.460
 and threaten all sorts of violence.

2:42:54.460 --> 2:42:56.460
 Whereas Twitter, why isn't Twitter being taken down?

2:42:56.460 --> 2:42:57.460
 But so it was very selective.

2:42:57.460 --> 2:43:01.460
 It was the insiders who have the power are going to take out the newcomer.

2:43:01.460 --> 2:43:06.460
 And it looked bad, sort of like the hedge funds sort of in GameStop.

2:43:06.460 --> 2:43:07.460
 It looked bad.

2:43:07.460 --> 2:43:10.460
 You know, you're seeing a piece in Time Magazine this week that's like

2:43:10.460 --> 2:43:12.460
 basically saying, yeah, we interfere with the election,

2:43:12.460 --> 2:43:13.460
 but it was great.

2:43:13.460 --> 2:43:14.460
 Aren't we good?

2:43:14.460 --> 2:43:15.460
 I don't know if you've seen this piece yet.

2:43:15.460 --> 2:43:16.460
 No, I haven't.

2:43:16.460 --> 2:43:21.460
 If you tried to say that as a Trump supporter in November after the election,

2:43:21.460 --> 2:43:22.460
 you get banned from Twitter.

2:43:22.460 --> 2:43:26.460
 But now time in its Twitter account is saying, you know, we saved the day.

2:43:26.460 --> 2:43:30.460
 It's AFL CIO and big business.

2:43:30.460 --> 2:43:34.460
 The Better Business Bureau got together, kept Trump from spreading fake news.

2:43:34.460 --> 2:43:36.460
 So the country's kind of broken.

2:43:36.460 --> 2:43:37.460
 I don't know how to fix that.

2:43:37.460 --> 2:43:39.460
 The oligarchs have run wild in my opinion.

2:43:39.460 --> 2:43:42.460
 And big tech is in the antitrust doc.

2:43:42.460 --> 2:43:43.460
 What's going to happen?

2:43:43.460 --> 2:43:44.460
 I don't think they get out.

2:43:44.460 --> 2:43:47.460
 I think some of the DOJ and certainly the state cases,

2:43:47.460 --> 2:43:49.460
 because they're separate cases, are not going to go away

2:43:49.460 --> 2:43:51.460
 just because somebody got elected differently.

2:43:51.460 --> 2:43:55.460
 And these are career prosecutors and they have a strong case.

2:43:55.460 --> 2:43:56.460
 And Google's smart.

2:43:56.460 --> 2:43:59.460
 Microsoft almost got split up, right?

2:43:59.460 --> 2:44:02.460
 The judge, Thomas Penfield Jackson, he overreached.

2:44:02.460 --> 2:44:04.460
 He didn't hold a hearing about the remedy.

2:44:04.460 --> 2:44:06.460
 He just said, I'm going to break you up.

2:44:06.460 --> 2:44:11.460
 And Microsoft appealed on the higher level court said, go back and figure this out.

2:44:11.460 --> 2:44:12.460
 You're not breaking them up.

2:44:12.460 --> 2:44:13.460
 You didn't even hold a hearing.

2:44:13.460 --> 2:44:15.460
 And when they got back, Microsoft said, let's settle.

2:44:15.460 --> 2:44:16.460
 Let's settle.

2:44:16.460 --> 2:44:19.460
 We don't want to get broken up because Jackson was going to make the

2:44:19.460 --> 2:44:23.460
 Opsco, the operating system company and the Opsco office,

2:44:23.460 --> 2:44:24.460
 Word and Excel.

2:44:24.460 --> 2:44:27.460
 And that would have been a huge blow to Microsoft.

2:44:27.460 --> 2:44:31.460
 But ultimately, I don't know if you're optimistic or cynical

2:44:31.460 --> 2:44:34.460
 about the possibility of breaking up big tech.

2:44:34.460 --> 2:44:39.460
 To me, I'm optimistic that tools like Brave,

2:44:39.460 --> 2:44:41.460
 I love the idea of owning your friendships.

2:44:41.460 --> 2:44:46.460
 And users more and more owning the stuff is the only real way.

2:44:46.460 --> 2:44:49.460
 Unfortunately, it's like the Wall Street bet subred is the only real

2:44:49.460 --> 2:44:51.460
 way to fight the centralized power.

2:44:51.460 --> 2:44:53.460
 You can't break them up with the regulation.

2:44:53.460 --> 2:44:54.460
 It's very difficult.

2:44:54.460 --> 2:44:55.460
 Certainly, I don't want to wait for the law.

2:44:55.460 --> 2:44:58.460
 Netscape was long dead or acquired by AOL and effectively dead.

2:44:58.460 --> 2:45:02.460
 It was only most of the return in Firefox to the market by the time

2:45:02.460 --> 2:45:06.460
 that the USV Microsoft case was finally settled and the penalties were put

2:45:06.460 --> 2:45:07.460
 in place.

2:45:07.460 --> 2:45:11.460
 And yet, Antitrust has a role to play.

2:45:11.460 --> 2:45:14.460
 Those penalties caused Microsoft to kind of turn away from the web.

2:45:14.460 --> 2:45:17.460
 They did Windows Vista and they thought the web's too painful.

2:45:17.460 --> 2:45:20.460
 We got punished in court and we had to standardize things with those

2:45:20.460 --> 2:45:21.460
 standard people.

2:45:21.460 --> 2:45:24.460
 So they ran back to proprietary lock in and Windows Vista flocked.

2:45:24.460 --> 2:45:25.460
 It was late.

2:45:25.460 --> 2:45:26.460
 It was bloated.

2:45:26.460 --> 2:45:27.460
 Longhorn, remember.

2:45:27.460 --> 2:45:30.460
 Now, what Google, I was going to say, but Google is smart enough,

2:45:30.460 --> 2:45:31.460
 they won't get split up.

2:45:31.460 --> 2:45:35.460
 They'll split something out to get off the hook, I think.

2:45:35.460 --> 2:45:42.460
 This is a complicated subject, but I myself was so I decided to journey

2:45:42.460 --> 2:45:47.460
 from the world of being a researcher at MIT and potentially doing a

2:45:47.460 --> 2:45:48.460
 startup myself.

2:45:48.460 --> 2:45:52.460
 And I've been thinking of, you know, I wanted to come to Silicon Valley

2:45:52.460 --> 2:45:53.460
 to do so.

2:45:53.460 --> 2:45:55.460
 It's the land of the entrepreneur.

2:45:55.460 --> 2:45:57.460
 And there's a lot of my friends.

2:45:57.460 --> 2:46:01.460
 A lot of them are successfully have been entrepreneurs themselves have

2:46:01.460 --> 2:46:03.460
 said, do not come to Silicon Valley.

2:46:03.460 --> 2:46:08.460
 You've started, you ran amazing teams of engineers.

2:46:08.460 --> 2:46:11.460
 You started a lot of successful businesses.

2:46:11.460 --> 2:46:16.460
 I wondered if you could comment on why a lot of people are leaving

2:46:16.460 --> 2:46:17.460
 California.

2:46:17.460 --> 2:46:19.460
 Is there something that could be fixed about California?

2:46:19.460 --> 2:46:24.460
 If you were starting a business today, would you consider somewhere else

2:46:24.460 --> 2:46:28.460
 like Austin or some other place or is Silicon Valley still?

2:46:28.460 --> 2:46:30.460
 Is it just a little lull?

2:46:30.460 --> 2:46:34.460
 Everybody's being overdramatic during this particular year of the

2:46:34.460 --> 2:46:35.460
 coronavirus and so on.

2:46:35.460 --> 2:46:38.460
 I think, you know, even Austin's getting overheated here.

2:46:38.460 --> 2:46:39.460
 Yes.

2:46:39.460 --> 2:46:43.460
 I've had relatives and friends move to Texas within the last few months.

2:46:43.460 --> 2:46:45.460
 So Texas as a whole is a big place.

2:46:45.460 --> 2:46:48.460
 And, you know, people are moving to Florida.

2:46:48.460 --> 2:46:50.460
 There's a big movement toward Miami.

2:46:50.460 --> 2:46:55.460
 Peter Tielke, these people, the mayor has been very business friendly

2:46:55.460 --> 2:46:58.460
 about it, which I think is just good politics.

2:46:58.460 --> 2:47:00.460
 America is fundamentally a commercial republic.

2:47:00.460 --> 2:47:02.460
 So you would think this would be what's happening.

2:47:02.460 --> 2:47:04.460
 For a long time, California was the golden state.

2:47:04.460 --> 2:47:08.460
 I came here in late 76 when I was a teenager.

2:47:08.460 --> 2:47:11.460
 It's in crushing debt to the lockdowns.

2:47:11.460 --> 2:47:13.460
 It's got the highest taxes.

2:47:13.460 --> 2:47:14.460
 That's got to matter.

2:47:14.460 --> 2:47:17.460
 People will do a fleet at high taxes.

2:47:17.460 --> 2:47:21.460
 It's got likely fires every year because of the deadfall.

2:47:21.460 --> 2:47:22.460
 It's not global warming.

2:47:22.460 --> 2:47:25.460
 It's because the forest weren't managed like they had been in the first

2:47:25.460 --> 2:47:27.460
 part of the 20th century.

2:47:27.460 --> 2:47:32.460
 Just, I would say, corruption at all levels, especially up to the governor

2:47:32.460 --> 2:47:35.460
 who, you know, famously was eating at the French Laundry and claimed

2:47:35.460 --> 2:47:39.460
 the outside was inside and they were out in masks off and it was great.

2:47:39.460 --> 2:47:42.460
 Do what I say, not what I do.

2:47:42.460 --> 2:47:45.460
 Rules for thee, but not for me.

2:47:45.460 --> 2:47:49.460
 When you see that in leadership, people either run or they get rid

2:47:49.460 --> 2:47:50.460
 of the leadership.

2:47:50.460 --> 2:47:53.460
 So there's a recall drive, which is about to reach the threshold.

2:47:53.460 --> 2:47:55.460
 Or in the old days, they get their guns, right?

2:47:55.460 --> 2:47:57.460
 You don't put up with this junk.

2:47:57.460 --> 2:48:01.460
 But ultimately, the thing that made Silicon Valley a special place,

2:48:01.460 --> 2:48:06.460
 it gave freedom to like young kids, entrepreneurs, young minds,

2:48:06.460 --> 2:48:10.460
 brave minds to think bold, to try different stuff.

2:48:10.460 --> 2:48:14.460
 I mean, even if the taxes are high, so outside of financial stuff,

2:48:14.460 --> 2:48:15.460
 outside of all of that.

2:48:15.460 --> 2:48:16.460
 Housing is super expensive.

2:48:16.460 --> 2:48:17.460
 Housing is super expensive.

2:48:17.460 --> 2:48:18.460
 So it's hard.

2:48:18.460 --> 2:48:20.460
 Okay, everything about startups is hard.

2:48:20.460 --> 2:48:22.460
 And it was narrow and they didn't plan the roads, right?

2:48:22.460 --> 2:48:23.460
 Yeah.

2:48:23.460 --> 2:48:26.460
 They got rid of public transportation in LA like the Who Framed Roger

2:48:26.460 --> 2:48:30.460
 Rabbit cartoon show that used to have trolley cars in Portland too.

2:48:30.460 --> 2:48:34.460
 The oil companies and the DOD conspired to build highways

2:48:34.460 --> 2:48:35.460
 and make cars dominant.

2:48:35.460 --> 2:48:37.460
 And the rights of way are long gone.

2:48:37.460 --> 2:48:39.460
 Like Elon's going to go underground.

2:48:39.460 --> 2:48:40.460
 And I wish him well.

2:48:40.460 --> 2:48:42.460
 That's probably the only way to do it now.

2:48:42.460 --> 2:48:44.460
 But is it still a place?

2:48:44.460 --> 2:48:47.460
 Do you think it's possible that Silicon Valley is still a place

2:48:47.460 --> 2:48:48.460
 where magic happens?

2:48:48.460 --> 2:48:49.460
 Where the next Google's built?

2:48:49.460 --> 2:48:53.460
 Where the next, I mean, Brave is built where?

2:48:53.460 --> 2:48:55.460
 I think all good things come to an end.

2:48:55.460 --> 2:48:58.460
 I think the problem is Silicon Valley had strong network effects

2:48:58.460 --> 2:49:02.460
 through the angel investor networks and the wealth effect.

2:49:02.460 --> 2:49:05.460
 And originally you have to give the federal government credit.

2:49:05.460 --> 2:49:07.460
 Like the ARPANET was a government project.

2:49:07.460 --> 2:49:08.460
 Let's not kid ourselves.

2:49:08.460 --> 2:49:11.460
 This wasn't wild free market, you know, libertarian capitalism.

2:49:11.460 --> 2:49:13.460
 This was all Cold War stuff.

2:49:13.460 --> 2:49:17.460
 You had out of the academia, you had Shockley and then the

2:49:17.460 --> 2:49:20.460
 the Traders Aid and Fairchild and Intel.

2:49:20.460 --> 2:49:24.460
 But now, you know, when's the last fab that was built in the valley?

2:49:24.460 --> 2:49:26.460
 Micro Unity might have been the last.

2:49:26.460 --> 2:49:27.460
 I don't know.

2:49:27.460 --> 2:49:32.460
 We built a fab in Sunnyvale and in Micro Unity in starting early

2:49:32.460 --> 2:49:35.460
 in the 90s and now the fabs are overseas.

2:49:35.460 --> 2:49:39.460
 And the one thing that I would say that the oligarchs have

2:49:39.460 --> 2:49:44.460
 intentionally done in both parties is sort of labor and environmental

2:49:44.460 --> 2:49:47.460
 protection law arbitrage by going where the labor is cheaper

2:49:47.460 --> 2:49:49.460
 and the environmental laws aren't as strict.

2:49:49.460 --> 2:49:51.460
 And, you know, that's polluted the hell out of parts of China,

2:49:51.460 --> 2:49:54.460
 but it's made things, you can make cheaper junk.

2:49:54.460 --> 2:49:58.460
 And this is not a story that's over yet.

2:49:58.460 --> 2:50:00.460
 So what is Silicon Valley for now?

2:50:00.460 --> 2:50:03.460
 It's for the network effect, the brain trust of who you know,

2:50:03.460 --> 2:50:08.460
 the parties, the Stanford sort of network.

2:50:08.460 --> 2:50:10.460
 That's fragile too over time.

2:50:10.460 --> 2:50:11.460
 I'm afraid, right?

2:50:11.460 --> 2:50:16.460
 Stanford, a lot of good professors are like they still filter,

2:50:16.460 --> 2:50:19.460
 you know, mainly based on socioeconomic status,

2:50:19.460 --> 2:50:21.460
 but it's kind of a skate school.

2:50:21.460 --> 2:50:26.460
 I had a friend hired out of Harvard 20 years ago at Netscape

2:50:26.460 --> 2:50:28.460
 and we talked about Harvard and he said, yeah,

2:50:28.460 --> 2:50:30.460
 there's still professors who are great on the curve.

2:50:30.460 --> 2:50:31.460
 And I said, oh, yeah, I don't,

2:50:31.460 --> 2:50:33.460
 they're any doing that at Stanford.

2:50:33.460 --> 2:50:34.460
 And he said, oh, it was shocking.

2:50:34.460 --> 2:50:37.460
 Some of the students got C's and D's and they were crying.

2:50:37.460 --> 2:50:38.460
 It's like, yes, that's right.

2:50:38.460 --> 2:50:40.460
 The precious deers can't take that at Stanford.

2:50:40.460 --> 2:50:42.460
 So they get A's and B's.

2:50:42.460 --> 2:50:45.460
 Now you look at China and say what you all about China,

2:50:45.460 --> 2:50:49.460
 they prove Russia to a lot of math science training,

2:50:49.460 --> 2:50:53.460
 a lot of engineering, a lot of people who are doing their coursework

2:50:53.460 --> 2:50:55.460
 to get the A's and B's.

2:50:55.460 --> 2:50:57.460
 So I'm an American.

2:50:57.460 --> 2:50:59.460
 I'm born on the 4th of July.

2:50:59.460 --> 2:51:00.460
 Really?

2:51:00.460 --> 2:51:01.460
 4th of July.

2:51:01.460 --> 2:51:02.460
 Yeah.

2:51:02.460 --> 2:51:04.460
 And America, as I say, fundamentally is a commercial republic.

2:51:04.460 --> 2:51:06.460
 You can try to make it something else.

2:51:06.460 --> 2:51:08.460
 You can see it's the new Atlantis and mystify it.

2:51:08.460 --> 2:51:10.460
 You could talk about it in a more, I think, correct way,

2:51:10.460 --> 2:51:12.460
 which is 13 colonies that grew.

2:51:12.460 --> 2:51:16.460
 And then there's a lot of local or original design anyway.

2:51:16.460 --> 2:51:18.460
 The Federalist Papers talk about this.

2:51:18.460 --> 2:51:20.460
 There's just a lot of subsidiarity.

2:51:20.460 --> 2:51:23.460
 But that's been eroded over time.

2:51:23.460 --> 2:51:26.460
 And like I say, a lot of the offshoring is hurt.

2:51:26.460 --> 2:51:28.460
 So what happened with coronavirus?

2:51:28.460 --> 2:51:30.460
 People working from home.

2:51:30.460 --> 2:51:33.460
 At first it was funny because I have friends at Google who used to grumble

2:51:33.460 --> 2:51:35.460
 that not only did they have to come into the office,

2:51:35.460 --> 2:51:37.460
 if they joined a different team that was sent to a different office,

2:51:37.460 --> 2:51:38.460
 they had to move.

2:51:38.460 --> 2:51:42.460
 Or if the VA team was reconstituted in Munich,

2:51:42.460 --> 2:51:46.460
 which it was after Lars Bock just got tired of JavaScript,

2:51:46.460 --> 2:51:48.460
 that they hired in Munich,

2:51:48.460 --> 2:51:50.460
 or they hired PhDs in Germany and moved into Munich.

2:51:50.460 --> 2:51:52.460
 With coronavirus, everyone's working from home,

2:51:52.460 --> 2:51:54.460
 and it's like, what a relief I can work for Google from home.

2:51:54.460 --> 2:51:56.460
 But then the next shoe dropped,

2:51:56.460 --> 2:51:58.460
 and people started asking Mark Zuckerberg,

2:51:58.460 --> 2:52:01.460
 hey, can I move to my hometown in the Midwest?

2:52:01.460 --> 2:52:02.460
 And he said, okay.

2:52:02.460 --> 2:52:05.460
 And they said, I'll kind of keep getting myself in Valley Pay.

2:52:05.460 --> 2:52:06.460
 No.

2:52:06.460 --> 2:52:08.460
 We're going to figure out what your cost of living there is,

2:52:08.460 --> 2:52:10.460
 and we're going to adjust your pay accordingly.

2:52:10.460 --> 2:52:13.460
 And these colonies and these little mini experiments

2:52:13.460 --> 2:52:15.460
 that all combine to the big giant experiment,

2:52:15.460 --> 2:52:17.460
 I have a, I don't know,

2:52:17.460 --> 2:52:19.460
 I have this vision of America,

2:52:19.460 --> 2:52:21.460
 which is a country I was born in Russia,

2:52:21.460 --> 2:52:22.460
 like I said here,

2:52:22.460 --> 2:52:24.460
 and this is truly a wonderful country.

2:52:24.460 --> 2:52:26.460
 I wasn't born on the 4th of July,

2:52:26.460 --> 2:52:27.460
 but I might as well be.

2:52:27.460 --> 2:52:28.460
 People still flee here.

2:52:28.460 --> 2:52:31.460
 I still, and I'm a red blooded American at this point,

2:52:31.460 --> 2:52:34.460
 and I have a sense that we've figured it out somehow.

2:52:34.460 --> 2:52:36.460
 If Silicon Valley burns,

2:52:36.460 --> 2:52:38.460
 another place will come up in this place

2:52:38.460 --> 2:52:41.460
 that even more innovation and people will move.

2:52:41.460 --> 2:52:45.460
 And the remote work might change fundamentally

2:52:45.460 --> 2:52:47.460
 how we work or might not.

2:52:47.460 --> 2:52:49.460
 It might just give you the freedom to then create

2:52:49.460 --> 2:52:52.460
 many other small Silicon Valley throughout the place,

2:52:52.460 --> 2:52:54.460
 like Austin included, but other places as well.

2:52:54.460 --> 2:52:57.460
 And we somehow figured it out.

2:52:57.460 --> 2:52:59.460
 And I think that's true,

2:52:59.460 --> 2:53:01.460
 that there will be more mobility

2:53:01.460 --> 2:53:03.460
 and maybe new places that come up.

2:53:03.460 --> 2:53:06.460
 I don't know if Silicon Valley has, you know,

2:53:06.460 --> 2:53:10.460
 passed some sell by date because it did hurt.

2:53:10.460 --> 2:53:11.460
 The coronavirus hurt.

2:53:11.460 --> 2:53:13.460
 The lockdowns hurt in the sense that

2:53:13.460 --> 2:53:15.460
 part of what keeps things going is social.

2:53:15.460 --> 2:53:16.460
 And so a lot of young people,

2:53:16.460 --> 2:53:19.460
 even before coronavirus, moved to San Francisco.

2:53:19.460 --> 2:53:20.460
 It was very strange to watch

2:53:20.460 --> 2:53:22.460
 because in the 80s, we all lived in the valley

2:53:22.460 --> 2:53:24.460
 and it was less populated.

2:53:24.460 --> 2:53:25.460
 And San Francisco was grungier.

2:53:25.460 --> 2:53:27.460
 It was more like dirty hairy in the 70s.

2:53:27.460 --> 2:53:31.460
 But by the 90s, and Jamie runs a nightclub there,

2:53:31.460 --> 2:53:32.460
 and he's talked about this.

2:53:32.460 --> 2:53:34.460
 You had sort of wealthy tech people moving in,

2:53:34.460 --> 2:53:37.460
 south of market, fancy townhouses being built.

2:53:37.460 --> 2:53:39.460
 And that's continued in such a point

2:53:39.460 --> 2:53:41.460
 that it's almost like, what's the movie

2:53:41.460 --> 2:53:43.460
 by the South African director Nils Jody Foster

2:53:43.460 --> 2:53:45.460
 up in the space colony.

2:53:45.460 --> 2:53:48.460
 Matt Damon is the guy on the earth who has to go up.

2:53:48.460 --> 2:53:50.460
 And anyway, it's about the stratification.

2:53:50.460 --> 2:53:51.460
 It's about the great inequality.

2:53:51.460 --> 2:53:53.460
 The people in the space station have like amazing

2:53:53.460 --> 2:53:56.460
 medical autodocs that can extend their life

2:53:56.460 --> 2:53:57.460
 or save them cure cancer.

2:53:57.460 --> 2:53:59.460
 People on earth are all suffering,

2:53:59.460 --> 2:54:02.460
 ground down in poverty.

2:54:02.460 --> 2:54:05.460
 And, you know, that sort of happened.

2:54:05.460 --> 2:54:08.460
 While I was here, you saw a lot of money

2:54:08.460 --> 2:54:11.460
 drive prices up along the narrow peninsula,

2:54:11.460 --> 2:54:13.460
 and the single people wanted nightlife

2:54:13.460 --> 2:54:14.460
 so they were in the city,

2:54:14.460 --> 2:54:16.460
 and the condos in the city got super expensive.

2:54:16.460 --> 2:54:19.460
 And I know even Google friends who are, you know,

2:54:19.460 --> 2:54:20.460
 socially responsible say,

2:54:20.460 --> 2:54:22.460
 we should have more housing built.

2:54:22.460 --> 2:54:25.460
 We should have yes in my backyard, not in my backyard.

2:54:25.460 --> 2:54:28.460
 But that's not happening, as far as I can tell.

2:54:28.460 --> 2:54:31.460
 And from the government to the incumbent,

2:54:31.460 --> 2:54:33.460
 you know, landowners and renters,

2:54:33.460 --> 2:54:34.460
 it's just not happening.

2:54:34.460 --> 2:54:37.460
 And that has to drive people away.

2:54:37.460 --> 2:54:39.460
 And I appreciate that people come here

2:54:39.460 --> 2:54:41.460
 and you should wait for the prices to moderate.

2:54:41.460 --> 2:54:42.460
 They will.

2:54:42.460 --> 2:54:44.460
 But a lot of people are going to go

2:54:44.460 --> 2:54:47.460
 where the prices are lower.

2:54:47.460 --> 2:54:50.460
 You, and sorry for silly questions here,

2:54:50.460 --> 2:54:51.460
 but just looking back,

2:54:51.460 --> 2:54:54.460
 you have created things,

2:54:54.460 --> 2:54:56.460
 have been part of creating things

2:54:56.460 --> 2:54:58.460
 that have transformed this world,

2:54:58.460 --> 2:55:00.460
 the world of technology,

2:55:00.460 --> 2:55:04.460
 perhaps more than almost anything else.

2:55:04.460 --> 2:55:07.460
 But you're still a human being.

2:55:07.460 --> 2:55:10.460
 And unfortunately, this ride ends.

2:55:10.460 --> 2:55:13.460
 Do you ever think about your own mortality?

2:55:13.460 --> 2:55:14.460
 Not too much.

2:55:14.460 --> 2:55:17.460
 I mean, I'm Roman Catholic,

2:55:17.460 --> 2:55:19.460
 so I am not afraid of death.

2:55:19.460 --> 2:55:24.460
 I think a lot of people who have problems with death

2:55:24.460 --> 2:55:30.460
 are suffering from some lack of either faith

2:55:30.460 --> 2:55:32.460
 in their transcending death,

2:55:32.460 --> 2:55:34.460
 maybe they don't have children

2:55:34.460 --> 2:55:36.460
 or they feel like, you know,

2:55:36.460 --> 2:55:37.460
 they get later in life

2:55:37.460 --> 2:55:39.460
 and they feel like they've missed opportunities

2:55:39.460 --> 2:55:41.460
 to do something that endures.

2:55:41.460 --> 2:55:43.460
 And I sympathize a lot because I'm old.

2:55:43.460 --> 2:55:44.460
 I got married fairly old,

2:55:44.460 --> 2:55:46.460
 so I understand all that.

2:55:46.460 --> 2:55:50.460
 Nothing human is alien to me, as Terence said.

2:55:50.460 --> 2:55:53.460
 But I don't fear it, no.

2:55:53.460 --> 2:55:56.460
 What do you hope your legacy is?

2:55:56.460 --> 2:55:58.460
 It's going to be JavaScript.

2:55:58.460 --> 2:55:59.460
 I think, you know,

2:55:59.460 --> 2:56:01.460
 my legacy has more to do with my children

2:56:01.460 --> 2:56:02.460
 and their children.

2:56:02.460 --> 2:56:05.460
 I think it also has to do with web standards.

2:56:05.460 --> 2:56:07.460
 It has to do with things like Brave.

2:56:07.460 --> 2:56:09.460
 The things we did with Firefox,

2:56:09.460 --> 2:56:11.460
 when we did, you know,

2:56:11.460 --> 2:56:12.460
 I'm not going to over solve Brave,

2:56:12.460 --> 2:56:13.460
 but I think Brave is important

2:56:13.460 --> 2:56:15.460
 and we will continue to prove this in a way

2:56:15.460 --> 2:56:17.460
 that counts for many decades to come.

2:56:17.460 --> 2:56:19.460
 But even Firefox,

2:56:19.460 --> 2:56:20.460
 whatever its future fortune,

2:56:20.460 --> 2:56:22.460
 showed you can restart the browser market.

2:56:22.460 --> 2:56:25.460
 This thing you said about people opting out

2:56:25.460 --> 2:56:26.460
 and routing around,

2:56:26.460 --> 2:56:28.460
 you don't need everybody to do that.

2:56:28.460 --> 2:56:30.460
 It's more like Talib's stubborn minorities

2:56:30.460 --> 2:56:31.460
 than do that.

2:56:31.460 --> 2:56:32.460
 It's the lead users,

2:56:32.460 --> 2:56:33.460
 Airfront Hippos lead users.

2:56:33.460 --> 2:56:34.460
 You can be a few percent,

2:56:34.460 --> 2:56:35.460
 you can tilt the market.

2:56:35.460 --> 2:56:38.460
 And that can be done in spite of the incumbents

2:56:38.460 --> 2:56:41.460
 of money interests not being in favor of what you're doing.

2:56:41.460 --> 2:56:44.460
 So I think what we do with Firefox won't be forgotten

2:56:44.460 --> 2:56:45.460
 and it needs to be done more

2:56:45.460 --> 2:56:46.460
 and we're doing it with Brave

2:56:46.460 --> 2:56:48.460
 and you could argue that other projects are doing it

2:56:48.460 --> 2:56:50.460
 in some ways blockchain is doing it.

2:56:50.460 --> 2:56:55.460
 The Robinhood take down the use of Robinhood

2:56:55.460 --> 2:56:58.460
 by the Wall Street Bets kids, similar.

2:56:58.460 --> 2:57:00.460
 So yeah, that kind of spirit endures.

2:57:00.460 --> 2:57:03.460
 And I think it in some ways it's American, right?

2:57:03.460 --> 2:57:05.460
 It's not hard revolutionary.

2:57:05.460 --> 2:57:08.460
 It's not trying to burn the past and destroy everything.

2:57:08.460 --> 2:57:14.460
 It's more like we have these certain, let's say, rights.

2:57:14.460 --> 2:57:15.460
 We have duties too.

2:57:15.460 --> 2:57:18.460
 So there's some debate about which comes first in American jurisprudence

2:57:18.460 --> 2:57:19.460
 and the founding documents.

2:57:19.460 --> 2:57:22.460
 But as long as things are working,

2:57:22.460 --> 2:57:25.460
 we'll be like pragmatic Americans,

2:57:25.460 --> 2:57:28.460
 like the Tocqueville described in his writings.

2:57:28.460 --> 2:57:31.460
 But if things get too out of whack for one reason or another,

2:57:31.460 --> 2:57:34.460
 too unequal, too oligarchic and abusive,

2:57:34.460 --> 2:57:36.460
 we're going to start our rights

2:57:36.460 --> 2:57:38.460
 and even a few of us can do it.

2:57:38.460 --> 2:57:40.460
 And even in the American Revolution,

2:57:40.460 --> 2:57:41.460
 it was a minority who fought

2:57:41.460 --> 2:57:45.460
 and put their lives, treasure and sacred honor at stake.

2:57:45.460 --> 2:57:48.460
 A bunch of people went to Upper Canada.

2:57:48.460 --> 2:57:50.460
 I think it was called Ontario.

2:57:50.460 --> 2:57:52.460
 Yeah, that's the beautiful thing.

2:57:52.460 --> 2:57:54.460
 I mean, that is at the core where your work stands for

2:57:54.460 --> 2:57:59.460
 is that a few people can have the power to transform society

2:57:59.460 --> 2:58:01.460
 with just a few radical ideas

2:58:01.460 --> 2:58:04.460
 with just a little bit of code to change the world.

2:58:04.460 --> 2:58:05.460
 Gotta do it.

2:58:05.460 --> 2:58:06.460
 And that's empowering.

2:58:06.460 --> 2:58:07.460
 And that is the American way.

2:58:07.460 --> 2:58:09.460
 That's why this country is, I believe,

2:58:09.460 --> 2:58:10.460
 the greatest country in the world.

2:58:10.460 --> 2:58:11.460
 That's not...

2:58:11.460 --> 2:58:13.460
 Romance says it too much,

2:58:13.460 --> 2:58:16.460
 but I think some special things have already happened

2:58:16.460 --> 2:58:18.460
 in this country and will continue to happen.

2:58:18.460 --> 2:58:20.460
 And that spirit can continue.

2:58:20.460 --> 2:58:22.460
 No matter who comes here,

2:58:22.460 --> 2:58:25.460
 they can adopt those folk ways and that spirit.

2:58:25.460 --> 2:58:28.460
 Brendan, as I can't tell you how much I was freaking out,

2:58:28.460 --> 2:58:30.460
 how much of an honor it is to talk to you.

2:58:30.460 --> 2:58:31.460
 You're an incredible human being.

2:58:31.460 --> 2:58:33.460
 It's one of my favorite conversations ever.

2:58:33.460 --> 2:58:35.460
 Thank you so much for wasting all this time with me.

2:58:35.460 --> 2:58:36.460
 I really appreciate it.

2:58:36.460 --> 2:58:37.460
 Oh, it seems like you have a breeze.

2:58:37.460 --> 2:58:39.460
 My pleasure.

2:58:39.460 --> 2:58:42.460
 Thank you for listening to this conversation with Brendan Nike.

2:58:42.460 --> 2:58:44.460
 And thank you to our sponsors,

2:58:44.460 --> 2:58:46.460
 Jordan Harbinger Show,

2:58:46.460 --> 2:58:48.460
 Sunbasket Meal Delivery Service,

2:58:48.460 --> 2:58:50.460
 BetterHelp Online Therapy,

2:58:50.460 --> 2:58:52.460
 8Sleep Self Cooling Mattress.

2:58:52.460 --> 2:58:54.460
 Click the sponsor links to get a discount

2:58:54.460 --> 2:58:56.460
 and to support this podcast.

2:58:56.460 --> 2:59:00.460
 And now, let me leave you with some words from Jeff Atwood.

2:59:00.460 --> 2:59:03.460
 Any app that can be written in JavaScript

2:59:03.460 --> 2:59:06.460
 will eventually be written in JavaScript.

2:59:06.460 --> 2:59:21.460
 Thank you for listening and hope to see you next time.

